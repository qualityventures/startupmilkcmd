{"_id":"@pm2/io","_rev":"100-f98b32152e9241972126a820b0de2500","name":"@pm2/io","dist-tags":{"latest":"4.2.5","beta":"4.0.0-beta.5","version":"2.1.0-beta5","alpha":"4.2.0-alpha.1"},"versions":{"2.0.0-alpha17":{"name":"@pm2/io","version":"2.0.0-alpha17","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pmx/master/pres/logo.png\">   </a>   <br/>   <b><a href=\"https://github.com/Unitech/pm2\">PM2</a> programmatic integration</b> ","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pmx-2.git"},"author":"","license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"^4.1.2","@types/mocha":"^2.2.48","@types/node":"^9.6.2","chai":"^4.1.2","codecov":"^2.2.0","concurrently":"^3.4.0","copyfiles":"^2.0.0","express":"^4.16.3","gh-pages":"^1.0.0","mocha":"^5.0.2","npm-scripts-info":"^0.3.6","nyc":"^11.0.3","trash-cli":"^1.4.0","ts-node":"^5.0.1","tslint":"^5.4.3","tslint-config-standard":"^6.0.1","typedoc":"^0.8.0","typescript":"^2.4.1","typings":"^2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"^2.6.0","debug":"^3.1.0","deep-metrics":"0.0.2","deepmerge":"^2.1.0","json-stringify-safe":"^5.0.1","semver":"^5.5.0","signal-exit":"^3.0.2","tslib":"^1.6.0","vxx":"^1.2.2"},"gitHead":"17801888193c38313c845fb2710c2d92c334b3dd","bugs":{"url":"https://github.com/keymetrics/pmx-2/issues"},"homepage":"https://github.com/keymetrics/pmx-2#readme","_id":"@pm2/io@2.0.0-alpha17","_npmVersion":"6.0.1","_nodeVersion":"9.10.1","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-9p9BvDedBaHwFinLg02SmUno2si56WcC3C2c+rmhkADe3TQXWipz2Uq9EVEZLo86/b4gGPf3DkN2DNf0iiN1nQ==","shasum":"cb16c82397b3d122dcb00f5053177d76ca753cbf","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.0.0-alpha17.tgz","fileCount":4,"unpackedSize":126592,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa/XefCRA9TVsSAnZWagAArEkP/i3B1N83E+ExSdxyZM2j\nmALx8eLCnn8yJ0ei+2XqI1f+MNE81fMnJMoIy+5+eU5+FSSaEwX7Di/jUbv0\nYJ6M3chWuDDrxev0ldmcd6uPDWqSZW9LhF/+JXKAP5B+04eihEAzL2R+wMXC\npKhvw4+Uyg+wUAlNOR1hb9dQRDrjQQ2Y4N5ph6fsUou5qvP9Bw4LdYG9+eP7\nopcFX4ueGh5BF5fBYiTuzxOq5YuK1xNM6pw0y8jlH+z3cfj7itfg1dD2k+so\nw/J8iq20g3NR6BzrEtEOC0ntxuv2SV5i+r6YLSPF7nipovgrxbJo7BHwT8V8\nS3YJtme1ENSDbnlHJqxOEUn7qKmFHp3vU22D9XDmfdyHRjudw5Q5hAeSzJgN\nt7Md9QSvKGFlnBR/LCcBKqbXEKc9jXM7TDKWoWIoXUGlvDOdI0EsIdmSoS3C\n/O1MVfcBVhX+YQQppV26R54e4bPE7F9UKXrCYZOi6bf1BFdS8x2JpIrc5Wfh\nhU1WK80b/78VmCJij2uPgyXaXL9bHKZekADX+ZUsfYgDGTKvzj/lhLlgjJd2\nxLyoYaRgZiHHDD0Kxc1in9sw1hHBcxTo1vV/qOtxVBWl9BrNBBGa1+2dlZty\nxxIXSugNE+vjftYW2ETGmj1ynXxWoSmw7xzsMBoIv1mRqGWcULfpyBWLEsF6\nF5eg\r\n=l9q3\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"keymetrics_bot","email":"tech@keymetrics.io"},{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},{"name":"vmarchaud","email":"contact@vmarchaud.fr"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.0.0-alpha17_1526560670536_0.04803970770398758"},"_hasShrinkwrap":false},"2.0.0-alpha18":{"name":"@pm2/io","version":"2.0.0-alpha18","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pmx/master/pres/logo.png\">   </a>   <br/>   <b><a href=\"https://github.com/Unitech/pm2\">PM2</a> programmatic integration</b> ","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pmx-2.git"},"author":"","license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"^4.1.2","@types/mocha":"^2.2.48","@types/node":"^9.6.2","chai":"^4.1.2","codecov":"^2.2.0","concurrently":"^3.4.0","copyfiles":"^2.0.0","express":"^4.16.3","gh-pages":"^1.0.0","mocha":"^5.0.2","npm-scripts-info":"^0.3.6","nyc":"^11.0.3","trash-cli":"^1.4.0","ts-node":"^5.0.1","tslint":"^5.4.3","tslint-config-standard":"^6.0.1","typedoc":"^0.8.0","typescript":"^2.4.1","typings":"^2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"^2.6.0","debug":"^3.1.0","deep-metrics":"0.0.2","deepmerge":"^2.1.0","json-stringify-safe":"^5.0.1","semver":"^5.5.0","signal-exit":"^3.0.2","tslib":"^1.6.0","vxx":"^1.2.2"},"gitHead":"aad2cd4fe92e757f1b52b5ca86d2f0129420a0ab","bugs":{"url":"https://github.com/keymetrics/pmx-2/issues"},"homepage":"https://github.com/keymetrics/pmx-2#readme","_id":"@pm2/io@2.0.0-alpha18","_npmVersion":"6.0.1","_nodeVersion":"9.10.1","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-q9sHqifVJ+lQwAP/BvgEZZYuUaFPj5kRVMK6TczyiGTWKOiaaIElcuGqcGNS1XG8VCn4kltKdh5tDvtbje6m4w==","shasum":"e75d9012d27a03937aece9d03b9cff9a125752d0","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.0.0-alpha18.tgz","fileCount":4,"unpackedSize":126592,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa/XmmCRA9TVsSAnZWagAAvqAQAKUDtto8Fd4DcT1cthbF\nTjwhb0l5ee3hAbjIMJV7BkF/VBm/kFani10eILGh6XEcNNRthM1dugr5+ZwN\ntJiAmrUSmxMi7jR+5Uzu2jkWGN7kYdJUZyKxRKTa5ypiuPv782Zf5oHueXf8\nw8XCIfsEKZ41lBX6hyQHDdeHUbfpnR4xHzfBehtrfXl8+bm1vn1AqYHp8ycB\nReA/QMmX+R+nYiKBedGZvCs7iZSKCrW2HSWpdg6pA/0Tv0v6HzEpfQaF4dVw\nJk+Q/ETDtc8ydzrmxwUVbLOJGZzlvltJ6VGBZxhTRopa0ahem5/Yahb2Tj36\nrQZRR41ct640u3BdD54IWELoQLBK16EN11g7gzJgMRpZfhX2Q41xpKD8hhho\nhI6ixdcdUEHZzWHx83Dc7ECWWgiKjzFNpoGy9tdiCOL9w/U02boc5oGwp5sx\nSYGvXVfoFZOZXUSyzXHaUdYvUpKiqo3N3QYs4ZJ6TcvPdOJQTHSQdjgtkk8t\nEH0KIe3t2+9ZBcJF0+0H01BXrjr9eHCdVlwYhmYcNIt/U00PBSBRWGVRg8Mk\n+alF6dXcQHZbAu7rL1SuIUbCPKXiIpwaQELTu+lUNSJp3YjIIhMatUN9FeRy\nEyv19zux6EreFAw6kpyMZWaRiICt23wnt5kvThuD2tt1Ur35FbUrVSIHs5TT\nC0gZ\r\n=56gT\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"keymetrics_bot","email":"tech@keymetrics.io"},{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},{"name":"vmarchaud","email":"contact@vmarchaud.fr"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.0.0-alpha18_1526561190257_0.23311731155600324"},"_hasShrinkwrap":false},"2.0.0-alpha19":{"name":"@pm2/io","version":"2.0.0-alpha19","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pmx/master/pres/logo.png\">   </a>   <br/>   <b><a href=\"https://github.com/Unitech/pm2\">PM2</a> programmatic integration</b> ","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"^4.1.2","@types/mocha":"^2.2.48","@types/node":"^9.6.2","chai":"^4.1.2","codecov":"^2.2.0","concurrently":"^3.4.0","copyfiles":"^2.0.0","express":"^4.16.3","gh-pages":"^1.0.0","mocha":"^5.0.2","npm-scripts-info":"^0.3.6","nyc":"^11.0.3","trash-cli":"^1.4.0","ts-node":"^5.0.1","tslint":"^5.4.3","tslint-config-standard":"^6.0.1","typedoc":"^0.8.0","typescript":"^2.4.1","typings":"^2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"^2.6.0","debug":"^3.1.0","deep-metrics":"0.0.2","deepmerge":"^2.1.0","json-stringify-safe":"^5.0.1","semver":"^5.5.0","signal-exit":"^3.0.2","tslib":"^1.6.0","vxx":"^1.2.2"},"gitHead":"a9e40743352953aa8ecb3d669c7bb9704d709c6a","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.0.0-alpha19","_npmVersion":"6.0.1","_nodeVersion":"9.10.1","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-tB2Y5J6VArbRbQ9EM93aF8IHfGpH4lDWkZi8Jg+BXBvNhoVBE4lRGX7ZllZeStaXO6MYF7eWWfO40PwWa2DAXA==","shasum":"d3d2d9ddf3acc451022a17d1c089490e8ce9981b","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.0.0-alpha19.tgz","fileCount":100,"unpackedSize":390010,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa/YX5CRA9TVsSAnZWagAAeZYQAJhW+ev3PmA7UEbwyOEb\nJyrIUbt4d588z5FyW0nk18RK8De8hxUJgHShVjiYx/gjbVQX21byaOWATpfP\nqfpf9Qd+/y3Zdd13RF8kJn9dzG2mH/b/zoeHmtkWLVzEYh0hNpqAyAq/4oah\njFX0CtTuyaWOxKKhIFg3bIMyLJ+7IUNZHTnGloqZwKKrN3h2byhreWNXyJ3l\n9qQn3WRwb9Ejz7mL7feNRse6EV1J8aTivejJwUReFBQvgLBSdOrlhtkwPTn8\n7YghZsQvIA4dUdAqNzAogbkUXsn60BIOirFsZOEoly0fRQGoDL8oOyC8HoyP\nZZGrWl9NxTXwrnkUsQPyJJR8u7XppPsiozHjUiMuGHntA8f2pevDF/bC2SSl\norRvxo6hLsS/MtqAdm4K2epA1HmWIz3qC+p584yyLQnHMG0YAf/Lrx1xF8VE\n6ldzs/XtwzeBzNAM1m5fK04k8Vo9wtsWmTpi4N5++0IzCNe1K6Lere/2ur+q\nqwgsM1svP4CUm+6bMT/jdqA3RKaT4dFRGLfF9KVtyaBuvxddMCtli35xYpFW\nNWdgNjluQxP2+VRQcAuatH5nGyBcMJsYwiTWjZkmWlrQvBKwc2zwf9kEZ8/e\nJLFl21mq6VYUSTQ5TAtxMWpP2xfmZFB16GC9pnhRqBW5wQvPS3GSRe8nzZ8c\nEMGX\r\n=LwrA\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.0.0-alpha19_1526564344345_0.11925819519989278"},"_hasShrinkwrap":false},"2.0.0-alpha20":{"name":"@pm2/io","version":"2.0.0-alpha20","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pmx/master/pres/logo.png\">   </a>   <br/>   <b><a href=\"https://github.com/Unitech/pm2\">PM2</a> programmatic integration</b> ","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"^4.1.2","@types/mocha":"^2.2.48","@types/node":"^9.6.2","chai":"^4.1.2","codecov":"^2.2.0","concurrently":"^3.4.0","copyfiles":"^2.0.0","express":"^4.16.3","gh-pages":"^1.0.0","mocha":"^5.0.2","npm-scripts-info":"^0.3.6","nyc":"^11.0.3","trash-cli":"^1.4.0","ts-node":"^5.0.1","tslint":"^5.4.3","tslint-config-standard":"^6.0.1","typedoc":"^0.8.0","typescript":"^2.4.1","typings":"^2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"^2.6.0","debug":"^3.1.0","deep-metrics":"0.0.2","deepmerge":"^2.1.0","json-stringify-safe":"^5.0.1","semver":"^5.5.0","signal-exit":"^3.0.2","tslib":"^1.6.0","vxx":"^1.2.2"},"gitHead":"2a8cc635d6fcaebe60766c28019709807e3d6f9e","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.0.0-alpha20","_npmVersion":"5.5.1","_nodeVersion":"9.0.0","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-0OPZEJaP3TENLQf0im169dOMDIEgvSfRzK77ir2factzWzyAXWW22MgSr4ozMIfrg0o6nXSsrDmYKj1wHbfExA==","shasum":"c490090061dc161c379a0bdea8c4b65c20753e58","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.0.0-alpha20.tgz","fileCount":102,"unpackedSize":793340,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbAvhOCRA9TVsSAnZWagAApbcP/i8jzHxdsrZuRqtj+wi5\n0DoawVZRTO185foEREpyI/Ge4rbZJB4yU5d7p2kiu32eCTPdMxDc6NJ2OcIj\nZgkov0A/UzKnizhS4WAvGY/DZVh9cZkbA2oA7V1ry9a7+Y1CX0R2GdBZu/SP\nXJoAqCTF/tAWs1iy1SJWHlY/B/OKUuQXqIhHBLWnosuPCJIwoFbBkkdYyNNZ\nELhktQR1wVn1OezmTBxzom7L2XAojrGloZ9gaTxCzkZcNid3BLNcdKkTNSVE\nvTCpwhobYsiULUBdO9VpATgkN2ehPt5KuL2Er4/SyeJ88DMYY6gxjag2auLx\nFlsyGL4Js29UYIDD1PKsyk5WZ4oMTE7p6VYahHkEapA13igYQazEZeSle73r\n7fI38Br/nUVX6jyboSrMIyYSj1gLzaN5hcd16QLVyJBUwUZU386tkllZqyXn\nXSODGmwPXf4MOroX8zQ8Y6ouPpL5dgWcGrKIuQoxOjKPVf4TsJfTAXfRIl6L\ng+R591RwenRLeD7NrmpTOU/4k3qxxYm0i5fT0ArxlGVxdmBuQ+McrUBK9KWL\ngtP8L6xjarpjn/KIEOLwML8xJSVT347WBQt/b/u5xXTBqDeXWKoAubHprXit\nbJM+Ke8kHSgVrCXMDwGD7EO5qAwPQe9E5Q8tmduH1SGHYqaTydxyOL9BH/ue\nwnIv\r\n=v4i/\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.0.0-alpha20_1526921293967_0.8330424540974513"},"_hasShrinkwrap":false},"2.0.0-alpha21":{"name":"@pm2/io","version":"2.0.0-alpha21","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pmx/master/pres/logo.png\">   </a>   <br/>   <b><a href=\"https://github.com/Unitech/pm2\">PM2</a> programmatic integration</b> ","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"^4.1.2","@types/mocha":"^2.2.48","@types/node":"^9.6.2","chai":"^4.1.2","codecov":"^2.2.0","concurrently":"^3.4.0","copyfiles":"^2.0.0","express":"^4.16.3","gh-pages":"^1.0.0","mocha":"^5.0.2","npm-scripts-info":"^0.3.6","nyc":"^11.0.3","trash-cli":"^1.4.0","ts-node":"^5.0.1","tslint":"^5.4.3","tslint-config-standard":"^6.0.1","typedoc":"^0.8.0","typescript":"^2.4.1","typings":"^2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"^2.6.0","debug":"^3.1.0","deep-metrics":"0.0.2","deepmerge":"^2.1.0","json-stringify-safe":"^5.0.1","semver":"^5.5.0","signal-exit":"^3.0.2","tslib":"^1.6.0","vxx":"^1.2.2"},"gitHead":"6979f4c743382394d32025c5ddaba8de226f35d7","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.0.0-alpha21","_npmVersion":"5.5.1","_nodeVersion":"9.0.0","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-JKyZaeiqcD52h5sQrVyya9rviVHjaVLmz2gggTvQWsbDcdfFkKfd/70R1tuznBlBtdX0dKYuN10MOYdBM0pxzA==","shasum":"cc6bca30955c7217d1d3f6487bce63f185a41d1a","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.0.0-alpha21.tgz","fileCount":100,"unpackedSize":405345,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbBVw0CRA9TVsSAnZWagAARpoP/1UA7oyL8A+YbzdXH3ej\n9qYcHJoAnZ0G1BP7pQvk3UA2u1pe2VqaicnDn0reaS468NIte98q3BYfSEtw\nLy3oC+jtntFQFCRJ5P9OBR6Yom86AOKXU+HAxQydA2f21eSgMMig1ru4llJp\npS03M2IKDdu5iUYlrwOeRBV8nNJ7xgiT9x2PF7FwtvoIc21I16IYxRmWLxeg\n0VmRMuoXQW+GTvIUFwc9LXQ8vNmN151LuM5688+5T6IyAGBALeAvb6dXCQEp\nCayKsE2/564EcT458FlDY/LK+uRSVmxaYNWubbmv0qwVNX7GnQPv0DJjoUDh\nL1buHGO1pJqjS6B3kxX6qdB0JFebFVfdPGtGdCb8dimabtd4UmN/+/PC8/IQ\npcQfUt7bCaFSxNBXC+qdTcqvKYWSW6EuQRs7yF5cF6+EhT+H/oSvoP2XPy0S\nUHDT+C1VEJvnQA5bCfxA/Lhiw6aaxeE6ZZ+vD0ukGkmJ2/26wTQjr4nv1gYo\nkBh4J1OA1xzm23nfwKcCjIzfXNhA1AgJ3S3RgSSUghbYToGGU7gmya1OLMN2\nxFPHM3tvIvl6zNP8PXVSyIDDq/kjNHOH74ydMwtsGm/I+JMpWMfShVdcHu+q\nKr/Ke3ZDNBOa6nKrH9Ojp0DyJAPCeeb/uQJGJsN4Z9KFHei2zCDBKxWiCO9T\neOSQ\r\n=HXw5\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.0.0-alpha21_1527077939105_0.42644203457675034"},"_hasShrinkwrap":false},"2.0.0-alpha22":{"name":"@pm2/io","version":"2.0.0-alpha22","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pmx/master/pres/logo.png\">   </a>   <br/>   <b><a href=\"https://github.com/Unitech/pm2\">PM2</a> programmatic integration</b> ","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.3","@types/mocha":"5.2.0","@types/node":"10.1.2","chai":"4.1.2","codecov":"3.0.2","concurrently":"3.5.1","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.1.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"11.8.0","trash-cli":"1.4.0","ts-node":"6.0.3","tslint":"5.10.0","tslint-config-standard":"7.0.0","typedoc":"0.11.1","typescript":"2.8.3","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.1","vxx":"1.2.2"},"gitHead":"9a85992026e6e5e7d89261f89aff8a3a35cadf17","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.0.0-alpha22","_npmVersion":"5.5.1","_nodeVersion":"9.0.0","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-Fca1sN5qQzRtYHcMelOy2WSHvErnwsKzMXQDi7wmapsOguEd+RM3HnUlV7w/NIRZmR/xgCMqPrgCDfJeWZbOkw==","shasum":"ada82d7e06dec4f945d9cdde955ea93befe6fbe2","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.0.0-alpha22.tgz","fileCount":100,"unpackedSize":396345,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbB8lzCRA9TVsSAnZWagAAl1MP/1I59jeeKUngG1bqgsxn\nqD/1bW8FjWVrEyYPYmvVk46lQ+69lYXH1U9dMwCXfX41e0ZJCEVhZr6Qt9Im\nl9AVUDfQUY7ZInKvOdGFigeT7y50uihOJIMLos95jejOCFJTWWfLtMghSUNj\nvlVTsEUX0hS2gfrKZBNP2U88n/nHjR+26kPqHJiGr9sqnntepAfzUuqseL4s\n7OVRhPWwYXYjEcY+5eWkfGLYn5Zr446o9pmPhCZuJ5vf1/nsGc1+VQXiirKt\nHRpMAotHIg+0QvFFzKael5hteD9191VG6G0mHbGy+YjIwpKcZaFcnAilpRmH\nK+91I5RdWlRiWnBKTRpVH4/A2wAlb2K9Y+HCTJHUlLjdywExsM5MNPoUde17\nPDKaId7ddn2PnUqPjoPcnL/tXSHuYVC0T+7A8X820czemd0hk8Re+4O1QEhL\nYM1wfjdWyMkQxpnBEaHnAQO/eaayWeyS/SlIM1ilx0ohxUl1uqiM+ET9UwgL\nVgVtM14hmMZHkJVANJ1UFvlSxbqXzHIUc585WzjxylJGia8QYbYjbC458hJ2\nS/tMwQ2PV0rW/4sJQrAWkNgI2f6F8oCZJxZRglSMnjK76DAG9edPPIjmopNv\nmnQriLBaSSaiytQK+CvlSaSkQkR885sVbSN3zUduEVyXDwTUvykrIAYNi+dY\nz7/w\r\n=Y6ZE\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.0.0-alpha22_1527236977733_0.2599538245855777"},"_hasShrinkwrap":false},"2.0.0-alpha23":{"name":"@pm2/io","version":"2.0.0-alpha23","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pmx/master/pres/logo.png\">   </a>   <br/>   <b><a href=\"https://github.com/Unitech/pm2\">PM2</a> programmatic integration</b> ","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.3","@types/mocha":"5.2.0","@types/node":"10.1.2","chai":"4.1.2","codecov":"3.0.2","concurrently":"3.5.1","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.1.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"11.8.0","trash-cli":"1.4.0","ts-node":"6.0.3","tslint":"5.10.0","tslint-config-standard":"7.0.0","typedoc":"0.11.1","typescript":"2.8.3","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.1","vxx":"1.2.2"},"gitHead":"b0e02801ff81c89f7196e1ba0238a3730d5784ac","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.0.0-alpha23","_npmVersion":"5.5.1","_nodeVersion":"9.0.0","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-LTclGMTAVvyDHDkzeTBLlftrHxQFyVKk/wBclRDZ2lRDbcUFxivWdgB5M4P2A2uJ6qxcgPhw/Cd+CTtfkd6swA==","shasum":"cc2d26e929b75a5ac4e5b22b8a383482b01246af","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.0.0-alpha23.tgz","fileCount":100,"unpackedSize":400195,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbDpuOCRA9TVsSAnZWagAAQngP/iOtwwP61lJ0UNWu/s8d\neI33m3pEqzEjjZPCiLLBw7Qr7ZDwzeHymVLyhoL7TpO/uYxFXueUUTz3SS6T\nBPWJQzhJ9M6zxM5nBy9APnRQtEK4HdyNwEeHjms8dxC8cGHDJQXBPa6RzsPy\ntHLfwr0m+00ZKks/g/npqWW5pmbc6rP6TETXdGlF+L/Hz/wqfko1dwNoxtZx\nzrFycjHrdez7JSx6biS1dFBciP317XR34XcgtD1uHU4/JX7QvBwtNNSI/7YT\nWWQUCncgOYr/DGltVUpy1KUPpdmJunfc/BwcWqjhNLPY3h6VXiq24m4xLpo3\n5yfO/xB7RMO6RlXLDNgfevqx9U1xOFlc4oPwt4DUcH0ClmDovwSfEhs43q6D\n7p6jle5AnXF4OBziHgOF30lBK2+WeIQ/hcg0N3zSqwhw+O6M0Yvc93UoxqA6\noKX2W62gwrLxuM5sc0/Knz/32M72RwB9/E7yloFJgEwapd2jqYCJFBV4ASpK\niili7ZR6Lzhpelik6Drcis6aCLyQYh7vt458jcFI5rCXs67XCvhplKvR3Xh7\nnbD2ANh+kmcpBb5Vbl278S2X5UgkUzKqVlq0HTMEuTeXIe4MWDuPJbgJtj1J\nZ9naixuho898gNUpXxl+6Kun0ss7mHK3idzbZISdbjSC5b80MgKdg9mPVcxr\nYVZ+\r\n=SKce\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.0.0-alpha23_1527683981494_0.7173593357552539"},"_hasShrinkwrap":false},"2.0.0-alpha24":{"name":"@pm2/io","version":"2.0.0-alpha24","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pmx/master/pres/logo.png\">   </a>   <br/>   <b><a href=\"https://github.com/Unitech/pm2\">PM2</a> programmatic integration</b> ","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.3","@types/mocha":"5.2.0","@types/node":"10.1.2","chai":"4.1.2","codecov":"3.0.2","concurrently":"3.5.1","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.1.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"11.8.0","trash-cli":"1.4.0","ts-node":"6.0.3","tslint":"5.10.0","tslint-config-standard":"7.0.0","typedoc":"0.11.1","typescript":"2.8.3","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.1","vxx":"1.2.2"},"gitHead":"21ca45bf282a07ff7065167fba66e698b57bb62e","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.0.0-alpha24","_npmVersion":"5.5.1","_nodeVersion":"9.0.0","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-B9qKq7+sLlllKyk+YfhoxPbJsaJxLukk+p6bLv7Na+w+1EjXKeolGWEjTCrVq3Gt9/ScihTDKvOLvgXAog1D0A==","shasum":"a1c77eed706f5774a4908633d6fbc9ed1f591e1c","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.0.0-alpha24.tgz","fileCount":100,"unpackedSize":400102,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbDp8MCRA9TVsSAnZWagAABXwP/3eVrHWGL/LtfEuY0poM\nnBWlIDS7tKiu9BKwdxTSC40ZepbElObh8cNckaf1685MXDaGBePnTvvejYiM\niH1WfpFwgHiZ1m3q7gxpsgj3fTNBa48LbdXIqdB0Qb+P0z2RYPvU6GyDeKlq\nSnOUxu+NinwNJ4ADp0r+T1YkGNTdEhETSF7mxW3gEK0IDjWg2NbWc7/boAmZ\ntmsBuj4sjbxvSa9m6eTsvk8ftwgUJBnVBuiKCbtQtQBIIFEHF1hj4MhoQWqf\n4ZSWb/7pbzlAiipNO1wo/DaqCIR+GLH4kC9cXxPWr0jmJkO+4gONemvMwDyR\nc5gNotK35w/Spz9lmR1EkOBb7tOk1Ki9ZdAzRlKqTX4+YcIxYHJjwZc+UeJy\ndwNeJbxdWzx8sN78z5/na9sSOUeYF45Kd9JYxqVlMUIGNL0R9LJoxcujzuJj\nWCW2Gw62J/ofXCiJSA8JqE/LZzyWmg2oZ42LPayIwXonLrekeaOVXhS65+SD\n68PJJ34Gq/Ms6vrPHeYdIi4eUY2ncTFVtByAZcZfFYQsrBCB+E5UH/A6G8Gk\nUl/trYXwf+HXViOrSi50pNnbd3Haz70fS9A2mkpK8S1g7k1mQHugrz8TIYte\nYRzUmTwzrvbCuNLE0NShi4SJEhdUHNiX+kfL5d4oXlyAS2NHofFkMD2DE5QI\nnxF3\r\n=dFYV\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.0.0-alpha24_1527684875436_0.48840481909839517"},"_hasShrinkwrap":false},"2.0.0-alpha25":{"name":"@pm2/io","version":"2.0.0-alpha25","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pmx/master/pres/logo.png\">   </a>   <br/>   <b><a href=\"https://github.com/Unitech/pm2\">PM2</a> programmatic integration</b> ","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.3","@types/mocha":"5.2.0","@types/node":"10.1.2","chai":"4.1.2","codecov":"3.0.2","concurrently":"3.5.1","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.1.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"11.8.0","trash-cli":"1.4.0","ts-node":"6.0.3","tslint":"5.10.0","tslint-config-standard":"7.0.0","typedoc":"0.11.1","typescript":"2.8.3","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.1","vxx":"1.2.2"},"gitHead":"53ad78e0c1cd878b65818b5355f9acd6329b112b","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.0.0-alpha25","_npmVersion":"5.5.1","_nodeVersion":"9.0.0","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-CFMXDLsZlqMAK+ppsaAxZSaZI1hNiK9xXVS7+XSPtppdMQ/aNa8vGIRr+6euQPLUE3Duj9jV4tjmrGQVl9y8cw==","shasum":"4eae6c2592f2f3a1b1fe8f99239889eac7d6ad93","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.0.0-alpha25.tgz","fileCount":100,"unpackedSize":400165,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbDsYUCRA9TVsSAnZWagAArEEP/RVYtibbQ2PIHZyT4kBN\nIE8Ad077i9hZQwlJB+ZVjqNu/8CXTgBHfh2uf6dBNqDXUDIF7t/657c13J6+\nzcBg60OuA8DsFuUTq6ZGo5Anm+0yNKABxMZKhX3tnBcw6CnePQObDJD81nK6\nX+YvEcUHKWIub5TAFzQ9yWdjajUwzOKYG0BFRwTOJPNKpUn1VaZicUMBT5NA\nvbx7iM/+5jQQ1HVCzOqbbyhPAgeX4W0u5F3rIX2BAyij/JiBcLfdcodpJruI\nBwgmS5qPnRBCgldzyfaitMc/HE+9eggXpV43Ly3ch2ARldxvcff+ZXggNmJ3\ngus6VAfLCcvZUQMzheJZcPCAkqTrMSdKUAbQWntl3L5SiOXkiUaSChndsPPH\nIVryEP0tJmmh99Fl97vifQblqGIUGGagCf4PLPpM1Pmp3MR0PfjCuRVCqsAk\nRHXb3CPudW3VDuDra4/vBaJjBKQXmw2fINZ75tkIAs7tGnRcPGgGvLx2OLgg\nO9ZhDwjqtAMy1c4V6Zg9uXfkJymnDmVq8FNPINdX/PrQYDunDlnc1+WBj3ZD\nxJi4sIvOBxSDS+1vkGDBkuG1zTX+Ppw7VwWNe1yf1C7dD5e45ya6pwwfnRL/\n7qlYzeFUVos1zYgeVMqKHl8Q1baJfHkATvtOvI6j6lZQmHAsAMuixozkgwvC\ncitT\r\n=KFRk\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.0.0-alpha25_1527694867932_0.6210065785292229"},"_hasShrinkwrap":false},"2.0.0-alpha26":{"name":"@pm2/io","version":"2.0.0-alpha26","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://www.bithound.io/github/keymetrics/pmx\"> <img ","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.3","@types/mocha":"5.2.0","@types/node":"10.1.2","chai":"4.1.2","codecov":"3.0.2","concurrently":"3.5.1","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.1.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"11.8.0","trash-cli":"1.4.0","ts-node":"6.0.3","tslint":"5.10.0","tslint-config-standard":"7.0.0","typedoc":"0.11.1","typescript":"2.8.3","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.1","vxx":"1.2.2"},"gitHead":"61440793885e183f2572cbfda936c0807b229d49","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.0.0-alpha26","_npmVersion":"5.5.1","_nodeVersion":"9.0.0","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-MRLS3X1NCJlutShZ7YVcX1SNbEXooeSDF1jRgDZnUCC9pYDiUDZp7DasP4xRJ39X0awXNLyYgrHoM5BYXmJmrg==","shasum":"52ceab085a60c44b75a328f9bd4bd026ddce737e","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.0.0-alpha26.tgz","fileCount":102,"unpackedSize":435724,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbEAVnCRA9TVsSAnZWagAATTIP/RjmQZO5Ma5zHgXdf1ju\nk78DPzSd59Ri/YrVk21/RnfuxphSLsUwILr+MJMibqB9jSy7vIC5A3O+2hmW\nv3X/k74LkHp9FEcegmWUczGU6pNeM6wpdA1eeU/O3NrPjYwvG0ij9mQn5y+f\n6hpT/8bOjoYqO3t2IazLFkoxATGCAAX8SzIYMkHVngIz5CsBKcpGNC++FSPc\ncacQPntcbbi9mwjnAffG/JmJ10Ev9wnzLYsfRYidqhDT5iTMCKil55CU5sdO\nTMfpeO7ZuZHUn06u/avms+NcZHWlqE/TS8/tQvwfl2hRpEZoRnYYoYnpUT8a\n6hVd4V/4oY/d9zyrBUtA5qOKSXhZG1l/gdSOeSYjSu64sCnmt3wngpbzosfO\neCOQHD4rbBSBK8TZe6WL5ax7WjkEQlHSxkojRtO2E/T/woyIehT9G9/T6mNJ\njHQYoH6ccFW0VTRbouB+f0ZETNrtoWp7uOy1A6xCey8Np9lM6NQ2dvXxKdny\nYyNwaHzkGt/8+4um10QDxNaF1+w9fTi+6tzY89szLKH76zC3f1UCSEu4dJdY\ntA4Lhkk6jrCiHkHgRIn2usigXRQWSxuxHVmOM/m/27TY5jruGoF/lXBeY/n4\nLgSwzlY1Wzi5jePnMLNbapvy+oNyJt3dzZabTpIaQAUfqTsYWLbPNABv+d0s\n4nAp\r\n=2k0E\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.0.0-alpha26_1527776613815_0.5579025303775866"},"_hasShrinkwrap":false},"2.0.0-alpha27":{"name":"@pm2/io","version":"2.0.0-alpha27","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.3","@types/mocha":"5.2.0","@types/node":"10.1.2","chai":"4.1.2","codecov":"3.0.2","concurrently":"3.5.1","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.1.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"11.8.0","trash-cli":"1.4.0","ts-node":"6.0.3","tslint":"5.10.0","tslint-config-standard":"7.0.0","typedoc":"0.11.1","typescript":"2.8.3","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.1","vxx":"1.2.2"},"gitHead":"029d8996253fceef1b5d923be73faa9519530433","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.0.0-alpha27","_npmVersion":"5.5.1","_nodeVersion":"9.0.0","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-vfYK5tgAr0IK5+UjZ50MTRbvWxZ0q6L24mmE0iMOnxjpc9GFrwJcl4+g3VWkfUxyPBKGmOH2axWOj4Am2LzjxA==","shasum":"9b3973dfb6155edf1a0a2b86d56cdbcc6937ef44","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.0.0-alpha27.tgz","fileCount":102,"unpackedSize":436856,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbF/aOCRA9TVsSAnZWagAAt9gP/3DaXT/IhFRiSguf8QCp\n4rtxEBLtUKpmRWD9vWJUVEXBOulI7RdMj8PIzM44n7o8osm30b2P+IUVeFju\nzwn+1Ek9EwvYGr+CYnBLb3fnyoG+Q2vv4Hda1LMM98zJ56DDR7s76cEeldm7\nKCWN9RbsNiGxtp+4ynJVhMOhPpV5sckLhbkk90ipIzgSALszu3jsxsNZahxI\nDafpUxPx/IlLtzl3D6honejhGeihvr2GnI6R6eCoMrwWy1THRjZNo9RPI22G\n/CvpCh7uQbIxFSWWBNypyDu/iBt5rd6QItJDfgQtB9bJSUfwGT1xmJCroyYr\nK8kHkDzFVMxFeN3t511FWSCYNUmrnSvTx4jen3QFhp5le0nnJi8ZjXpuk1xr\n5qaMfWNXs5pQuw6B2BTt+V0ioO+wCzPDy55jr4P5vIm4sNsZ0OcmJe2ny2TX\nsUUZYrSq26FibP4niuP+Qpc0j7JYXPnXrqLH/QiDBb5Yzq2+h4774n2oTn+n\nH9u1tB7eObeOTKD2RRMksS3gXJDVwVHyEbfYa/gMLzRXLKohVbVomWhRmRv/\nEAuILQDBlh60bmtnF7tcNcDRVQQ5t/hYYGgGaRs+vDNhUqBGpibEjZtT4cKl\ndJQH/wCTAZ4V6VJn9KlcsSokoDNBYwzIENWR3bXDODPYjPc3cd7ILuIbvB14\nY0sC\r\n=XoDR\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.0.0-alpha27_1528297101173_0.01540327801723973"},"_hasShrinkwrap":false},"2.0.0-alpha28":{"name":"@pm2/io","version":"2.0.0-alpha28","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.3","@types/mocha":"5.2.0","@types/node":"10.1.2","chai":"4.1.2","codecov":"3.0.2","concurrently":"3.5.1","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.1.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"11.8.0","trash-cli":"1.4.0","ts-node":"6.0.3","tslint":"5.10.0","tslint-config-standard":"7.0.0","typedoc":"0.11.1","typescript":"2.8.3","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.1","vxx":"1.2.2"},"gitHead":"c0a55c0afcf44ae1b06be3665878e57099674a7a","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.0.0-alpha28","_npmVersion":"5.5.1","_nodeVersion":"9.0.0","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-qruUxUQZYlttP3jEBN0HSJNrcATnLJanSo/+gj3dBB1C5DcADyCYreuVOax11epnzQecmuU0AhH566+2CZKb7g==","shasum":"9ee5be969b0cdd3dd95f5c9c165d11048021d2f1","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.0.0-alpha28.tgz","fileCount":102,"unpackedSize":436925,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbF/zKCRA9TVsSAnZWagAALngQAJLn1LCxCblfsf1a+NB4\nUUhTkC1o2hN3X4h8baTpuJuAPsa80NqmeGpkPz3aIMG7k9EZBxYBZxGI6KeY\n7g0xlY5YGHWY3Tgrt3Objbgp43bSVO5gD7tU1AGYhuy1d+wAhwAmKFtvl5pg\nz0Pr6QhOftcZirm23T6n8wG0nd2r3Ylibw0+xuk2Ai53sdF35xPAsPUnCqjI\n0VlWVpn36sKtJRizxZotdpxrCSCC7IOEvNG2XXPF89PI4wVobwwDerS/K2Qh\n2vXVRG/cE3roC/1kTZWvqJE2p7iOwf/Rkw6tOd0B97Y6vnZRP+PwfVbKaPI/\n3LuDsePXW/Rcej1VaoTuJxSaHQGA2epFz3/3JdcFX0lcP89olkAMe+NdS969\nFEz+I3U+H+m675Cr/GWMw/feqd2OJMFLwmAkr21NN4yrU7mx6oPz67RakduS\nxV1uTHfcjGZkzgJiKcWVpqkmpubX1yETkLPkVX7ews5RsaYzFIll98LI6pjC\nsppYKoUk50IdGS/SDoFWc6uBP0cA6FitalVi5FjQ0u5zEV5E0TH7S0cb3taD\nO8yRk9fTwz453hP8TNRTPmux1U2c0FwjfrRe6NZY3cgg0RvMIeEI5gx7kQVI\nRgsJOn+c1J0d/hvhG+UaLwmsS5YpBAAFLIh40ROKk7/fz14cjBe3URMDVjlM\nOIQH\r\n=LqmM\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.0.0-alpha28_1528298697735_0.5186254303510329"},"_hasShrinkwrap":false},"2.0.0-alpha29":{"name":"@pm2/io","version":"2.0.0-alpha29","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.3","@types/mocha":"5.2.0","@types/node":"10.1.2","chai":"4.1.2","codecov":"3.0.2","concurrently":"3.5.1","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.1.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"11.8.0","trash-cli":"1.4.0","ts-node":"6.0.3","tslint":"5.10.0","tslint-config-standard":"7.0.0","typedoc":"0.11.1","typescript":"2.8.3","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.1","vxx":"1.2.2"},"gitHead":"c0a55c0afcf44ae1b06be3665878e57099674a7a","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.0.0-alpha29","_npmVersion":"5.5.1","_nodeVersion":"9.0.0","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-bXSwoV5iib12ek1XLJVml28rgacVRKRMGSrW3WfmpsGh23nk54raWnie7IwYWVROcQeydQdfqAHpkxPPAlQhPg==","shasum":"baad0e4d0d6d4f7add869957546831920109645a","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.0.0-alpha29.tgz","fileCount":102,"unpackedSize":436925,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbF/8sCRA9TVsSAnZWagAAGBkQAIBo44b89LBG9jW5B8di\npqyRPwz4YHdJIZzbltuuesRWrW/0inFGCgF+BG6NrnEh2aE0Zpnxmg8Dlic7\niAbE4snC0YZcoEDYhc6w8cGSRdEApbqQLg4WzeS/czHGIPfcGf5CTJd3HyE9\nNBOA0Jjo13A9ASY8i8mwrGXNccxEA0FvWrYs78BoPm7Kuq4E52KlvXLh0OR9\narvZPOYx9lfW6PXMd2mw/3cb9BL7CfIlBRKxVQrnzTIQU5J19xfKb4vYNBDy\nitIaXnskVUCQlLtxON/NMG1Rxl281JNMdT8iD3MwsGA+zqYpClplO2MRaZ1p\nF4OTAX87hroaxPT5X/aIO+r9G2Y/X2W7cAhS4ybLCi1UCPEoUmBKP6L73pye\n4Mlkt8QjEM1Remoz/FGcKRHSwGViKMBnf4M50/B01Rt0rrqtMb8COwBGqeAk\nHsAnrkzHfHEmpd9C5fWaX3VCdZ5wRgg+UL6ErKPeCFyx13ZZJlSx/j2QRZ27\nRUcFPdWKU7LrrioZItN/yigvGHWbIRqcfwUkHftM5j4YmF8EffiJeMl4thEU\niUvonv9M7qj9quQdIqaxRelZhuQ7fi220FYk3Y9ky1MERpsfPFEdANHHIymZ\nwUgAXzE+cbhRDtH5cTiahlmSmBtV1EfBzimkgPjIYiUThS4y3WjXqtlhOjrT\nDyFg\r\n=CU0y\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.0.0-alpha29_1528299306983_0.6682514789155747"},"_hasShrinkwrap":false},"2.0.0-alpha30":{"name":"@pm2/io","version":"2.0.0-alpha30","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.3","@types/mocha":"5.2.0","@types/node":"10.1.2","chai":"4.1.2","codecov":"3.0.2","concurrently":"3.5.1","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.1.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"11.8.0","trash-cli":"1.4.0","ts-node":"6.0.3","tslint":"5.10.0","tslint-config-standard":"7.0.0","typedoc":"0.11.1","typescript":"2.8.3","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.1","vxx":"1.2.2"},"gitHead":"68c0b1f1dd082e8c8e58f4dcefb9757f986946cd","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.0.0-alpha30","_npmVersion":"5.5.1","_nodeVersion":"9.0.0","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-NynDG2TtYX+Y0kn2zeGEoQPp3HWwnBgJZeKqjNHwp+k5BR3LsGqR4ip73hRLc5f6jvGI1fMOOFoZmMpcSq6nTg==","shasum":"181d46177a3046eb07ba31e7abbf71fed01d9ef7","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.0.0-alpha30.tgz","fileCount":102,"unpackedSize":436989,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbGPTaCRA9TVsSAnZWagAAn18P/jiT9M3pfSJ58+KAbaJ3\nJxW/TTPu2Isinhh2ti4Nq0nNNn9fRB1EJduakH0SiW9lYCmNC2A7hqSEcYeX\n9rUQO8cKrih/DLchpVZzO8j10Z/7yIegUpH21kxMnPS48BUEDC6xO+rcW+vz\nctsmaaeamM+kWusDBcgKYQ9jXWCCDpP6IXQtEbxsGhW9CKuXHbJcYxuMIwPk\n6efS1jLerMFvnyftEb64Ed8uUp7k3wHGG7TyPP/wmVvhWS/nN2NOXG0Nn23k\n3SNf5opyV3pOW5PoCnPJ0NYXHaEFuBXrfyfACUR81ERzUBsOgZJg2surCDwq\nCq3e3/KiR+pUclae8XOsAVEuN+ADATj41AzAalWjVNHcMdYwipUPiPmnuKMX\npQ7CcgmIBWMRMckCSPMoB/MMfcQ/uemg/HmFesIJtrHkNDgMMb/+QS3RiFlY\n9WGndsA2z/hq1iGzfq+MsTszQejBThXrfi44cZcJQmS4PcundaKDuUi3mkGH\nO2pht8NPGo1L70ye6Gt2z2YMWhULYDAudeyMU0KvRqGyUGfo58m+ydj4yqM0\njBnDKbNdTP9S6yO57LCgBAPMHF2XqfpDg4VufmjrpSKz3s+Rs83D6qshAcnO\n7m5pX5U5pB9tuCjaNBensf6XFgtbIKpBT25httj5uPzbXl//DR37O2MB3u+H\nPRmP\r\n=fZCo\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.0.0-alpha30_1528362201751_0.2880322021676247"},"_hasShrinkwrap":false},"2.0.0-alpha31":{"name":"@pm2/io","version":"2.0.0-alpha31","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.3","@types/mocha":"5.2.0","@types/node":"10.1.2","chai":"4.1.2","codecov":"3.0.2","concurrently":"3.5.1","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.1.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"11.8.0","trash-cli":"1.4.0","ts-node":"6.0.3","tslint":"5.10.0","tslint-config-standard":"7.0.0","typedoc":"0.11.1","typescript":"2.8.3","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.1","vxx":"1.2.2"},"gitHead":"4f8bb9197be2b92a382c486c6951fef43a6a3498","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.0.0-alpha31","_npmVersion":"5.5.1","_nodeVersion":"9.0.0","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-Wi1ZLBCqzxU9Zy2l5au9zWKr+0S2vLzMXVkL7xBhp+B2nPav66cnhNVj/gPY3B+R1AZDjm7i1FowU2TJk5DgCA==","shasum":"c7d2c788667a1a67c3868d34cc6bc6fb8e0ee455","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.0.0-alpha31.tgz","fileCount":102,"unpackedSize":437444,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbHqEhCRA9TVsSAnZWagAA9w0P/jSFPkX8ccrnqUXqCbyD\nbOqc+agELXho1b4LnqFTp+b0cfJM7uKMp+jaM9U8w2n6y3MvSrIy5XGzqpyl\ndXtd9BkKU4HLKqQhnLcw7aePhrOQXNrUoIyQTS/USNbhShekwtGZKivzTuie\nrcVzFF0KKmjVAvZDIX5Pbn6kK5ZQynHZfb5KFjbDXi30+/FA5Ve+2+Xsmn0T\nJjK4K+q0TL1SD/ZId1eC8WlgM3mMVfET75DVZSPnEz9s+sA6lf/VzglYCzss\nr7Y9y3DBIn2N5ERfJJA0QtIz4ZVuBjNhpnuk0bmwBBsEe9sPDX14auVYI/Sg\nCJqejtO1Ktbfbps1SoBBtEc5lz6eHEMTkmXoRYKkaJJqMELUF7xOKt20e2fW\nFFiVcO+nKn4YylRGfGHdSw6rVXr3DSO+2QuIM3NkcF3EX5O6jqJoxJXame+l\nFoysL2/IV2DnPm9JS8iwu3ScZFI4dEi6Jps80xv3PwGoDJOlTnfY4cRZySsJ\nDx0ldGkgFMD7+RCzigI+ylR9bjB+m5/1OV5IFbVdSNP15WUJdlvfkl2NPfHW\nsf62iMCGKUg/VVyfYdhoCHWFgzBpzJe+p3yPo733aA8mOT2QcOnfz//W1iDC\n2uVvoxaL0vptNnCwzorxnr0v+WtDIcrlAa9ueerZbPLkTsKnpcNQwUz8GoPS\nsW/D\r\n=QFKF\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.0.0-alpha31_1528733983750_0.6304197345357752"},"_hasShrinkwrap":false},"2.0.0-alpha32":{"name":"@pm2/io","version":"2.0.0-alpha32","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.3","@types/mocha":"5.2.0","@types/node":"10.1.2","chai":"4.1.2","codecov":"3.0.2","concurrently":"3.5.1","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.1.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"11.8.0","trash-cli":"1.4.0","ts-node":"6.0.3","tslint":"5.10.0","tslint-config-standard":"7.0.0","typedoc":"0.11.1","typescript":"2.8.3","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.1","vxx":"1.2.2"},"gitHead":"f56b8937f177b89fdbba0eeda1601ab02719aea9","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.0.0-alpha32","_npmVersion":"5.5.1","_nodeVersion":"9.0.0","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-4P5eYjQMdblUZAk4j5LgqHt2azuohmqEPsuLWL/n0JHIeI9ggFEpAIem+6jDaavOy65V/rxQ3H5brZbMA7HoiA==","shasum":"b4dae6ee4a4af8a7e549416a0427085aac5b1767","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.0.0-alpha32.tgz","fileCount":102,"unpackedSize":437896,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbJ7PKCRA9TVsSAnZWagAA/r0QAJtPabDLe9B2fALjAkjC\nturJA+aPFMNKR/dH09iqVcRbEscB1tFYUpGBH3ULXHS1Lwg6tMBQi3NPF2sn\nxIyLXoW5FViJULkC+GkxBBu8h7C6X1yxqV0bcxFJpTStqKwShtFMdvOqNUUc\nzAwY1J2TNbkxk7LkX8XEu8C+2/lzpRScTczXVIoZY6cLL5/tfKuGGMt7OAbb\nF+Tq0uzuCLGpNNWW5Ps6ogs/uNyxkbGbeahyKYcgTy5XKqSYIthkKrPNdrIA\n5+0kpeg43gcIwXcVV3B0hWuP+qFHshebzeddSwHuMT/JMPdzqwPU2O/pkz16\n24xg/7h5jFXcwN0yCA70l6lU4uWrgyg3wrv5AJd4qoAw/L1lyRpLgzbp+t2b\nwllz2lgK9/fPeroCS0C88awyTenAt5dZZk+UPWLTu2LRACjHI6YStyzvqNL4\nvBm+VQ4CBdAQ2nsIa03Urrp5OVJ+tn2eZRGMyEu82yV5lVglHCoYVMT2lUfh\neE7Flyma3tM+0jVIsdpKYjr3WA6KfOfgA26fhwkwW/wQHsxkKjP+HN2UZndp\n6EvcOeBWJ4Aw9Yh7/4z41VeJd0CjwfLAwG3SY/BAHxHtT+M6gUzIK5iet6uU\nYdJNIofUtRjno/rcZ61UNp2UWpxY7R3v6IaExkg//pYDVF//EZrzf3sPdrNH\nGulX\r\n=u9+L\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.0.0-alpha32_1529328584996_0.29782613452659334"},"_hasShrinkwrap":false},"2.0.0-alpha33":{"name":"@pm2/io","version":"2.0.0-alpha33","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.3","@types/mocha":"5.2.0","@types/node":"10.1.2","chai":"4.1.2","codecov":"3.0.2","concurrently":"3.5.1","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.1.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"11.8.0","trash-cli":"1.4.0","ts-node":"6.0.3","tslint":"5.10.0","tslint-config-standard":"7.0.0","typedoc":"0.11.1","typescript":"2.8.3","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.1","vxx":"1.2.2"},"gitHead":"f56b8937f177b89fdbba0eeda1601ab02719aea9","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.0.0-alpha33","_npmVersion":"5.5.1","_nodeVersion":"9.0.0","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-Aa4KB7rH6+lLmHYNw2WvhQuWeIezPAqAY/nNXsG9vMdz5e2OqBZ5+dbpaHatu6ELG5v8SccdmSoKH12ASUvtNQ==","shasum":"4f720647612a1adb168ac2955e1ae841a925d24e","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.0.0-alpha33.tgz","fileCount":102,"unpackedSize":437936,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbJ7UqCRA9TVsSAnZWagAAc/4P/0rNnWzsA3mfw1nzwd86\ndMhf492knOANEAS6KdOkqVBl3A6sApk+Dx2zEzs+dNl6Z70z7NyR5N2ZdfDp\nLfxmWmogppCEiWLgJT64BvTou4QPxip9wEFEuowBnkYALraPdpV1RdVwTXKo\nQkFKInBChtj2LK8lC5g80M8Yp7spNjc5DCrhX7jxTGOovGrB1l4JOT4QWdRh\nvh64+BUtUfAZeifnP2BeHNYCePJOj0ZYtxSTZo2hHmtmKJ4glu1WoJd4gGS+\nKTVkER57qu5EmH8PRwXl9F5fCCkdyWRAHAOtn+GEoGx+XcI4aL2hGXeIG8K3\nsOE9ovMLH0O0jSJnDmeQzy3jJC1VPS9DU1X16AoIkcvqRqc2BFGw6qJnfRcW\njrkiPGSLK2Baz33I4+ADYolAuVfiUabNtTTo+p3o0iynIdTnNO2vMrmWtHTf\nHqCKhUnlksIhMWMWvr+LDL4v3LRltMqfFY7XlaLJp4r1AwwO24dp7FKVTBBy\nK3bVRkL7UNOZiX6MhuU1V7IxP+zkcnEzowm1PZBWZGEtoxkt2ad4KqnZ1Wbl\nVOPTiAe80tt0VmwxD5H5mzCDLeFTspzkjrmRZaRZpPH/b0m5MULckVb0h6th\nzov9OqFWGH8zEGKueRMgzlfE8Wt6X5n0xvUkfr6LeJXQH1rKjPZWm8jv82sa\nKZuQ\r\n=iVuN\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.0.0-alpha33_1529328937611_0.27471498561122565"},"_hasShrinkwrap":false},"2.0.0-alpha34":{"name":"@pm2/io","version":"2.0.0-alpha34","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.3","@types/mocha":"5.2.0","@types/node":"10.1.2","chai":"4.1.2","codecov":"3.0.2","concurrently":"3.5.1","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.1.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"11.8.0","trash-cli":"1.4.0","ts-node":"6.0.3","tslint":"5.10.0","tslint-config-standard":"7.0.0","typedoc":"0.11.1","typescript":"2.8.3","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.1","vxx":"1.2.2"},"gitHead":"3988f4fa1baa64f9e781e39329bce4446348f222","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.0.0-alpha34","_npmVersion":"5.5.1","_nodeVersion":"9.0.0","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-xVhemt/F1uHRy57Jqv/4+bHjqnMrLD/ltmVLtjatEvvlHartoNY+Asc4EVHu5XeNr9ycYs+nPmHJLOdHz5M2Vw==","shasum":"989d3521decbdf0912ec7fe9a3602619841c708d","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.0.0-alpha34.tgz","fileCount":102,"unpackedSize":438281,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbKP5/CRA9TVsSAnZWagAA7PAQAKGopYuaw70InJwKVlol\nRGv1rgxp8bBf9/6WukKxx97SWWjyfLDmmFFGEUcwuR136fMq2kyfLDkyrfcD\nKymhz+xYE+Lz/wvmt+SALdhJI4YLYPvqXRPld4nrKFFf2N9j6M90WpyYTPLD\nvhUyMK2btC6UEud9zHHiqlifvJ0R24Jsl71Cj993noHQDbYQM5sX2Zqme8cf\n0a4jjRa/cdVyxfVH5fvR/ULN42e+9ZWfn5c//xZYwdv1u9Bm3eQTi8icTjQl\nYHiUvYEbV5MsBjFH0oPofzY9U538IX1OAS8RTKNdRtuojNyQ97ZNVJnJux12\nm7k0sWRHj1MhWS4QQFIbtCzB09YB3UWy0uOvmoXlSNoUa8AvW/XKkqjumVPg\nDCoN80NjM7s76Lj/Y9/RCzV7Z9nsF1b+cvhcGfNbho58GT7F8eEqnaZSALca\nMPmpNtTpxA75JSt2DQBur2rSOBXvGpZOPGBu5pPb6FOubsbEeey/K/p80BYf\npcdopHwzh34OWyVFYmrGbfcchIpV4S0YKgVpuRtMlJad/tUPPeMG4HvOaAhb\nDEQRR3CVNvqvBblj44BuWcNq2wYxSfEknfnGApxKy//NfYdaq6vsbzHWyOrL\nhBysAyov8DhoHG5aXb86YGYMhdeG3ZxpP4ClwJkoQUd/zn0mLPppy8gxgsSx\nIBz5\r\n=Uww0\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.0.0-alpha34_1529413246406_0.13491267563012288"},"_hasShrinkwrap":false},"2.0.0":{"name":"@pm2/io","version":"2.0.0","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.3","@types/mocha":"5.2.0","@types/node":"10.1.2","chai":"4.1.2","codecov":"3.0.2","concurrently":"3.5.1","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.1.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"11.8.0","trash-cli":"1.4.0","ts-node":"6.0.3","tslint":"5.10.0","tslint-config-standard":"7.0.0","typedoc":"0.11.1","typescript":"2.8.3","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.1","vxx":"1.2.2"},"gitHead":"5e6e80b083e774865bedef8e4e6b0b4983e04970","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.0.0","_npmVersion":"5.5.1","_nodeVersion":"9.0.0","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-XaSy17i3qHNsLI/M6UAr/UxKeDiKRJ1RwRL8qD3rBsIpGVbIHlsKja2cUUsWddswdkaaCabZUQJm9kclnloDbw==","shasum":"88b6ddbef9890f35d7979258fb50184e0f765a49","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.0.0.tgz","fileCount":105,"unpackedSize":472364,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbKRdJCRA9TVsSAnZWagAAM0MQAIhJqJPepPO6eNZVetUI\nZ57CCX1nyyU08xrHNS1zfHZugb+CQCDrVtPan2x1mntxhAm8ZbyQ2L+HotNw\n0RTxmPsZFMiIcdlQ7mresyBsVRvyouoTxKfAB67H3SRVgoT2fDFzDBpj2GA1\nR9kbNPdxWJz16JPWhz4cEDFdnQc3G8vEzCQ+qdiWWd5vsCtzo70vpBAB31wS\nNtykM58tcCtfL9LKNM478Efr70d+/Hc4N+oMX8rOQWkM+O5dZdQqXPNHjGna\nr7oQev2cD1LbX6dl6yd9WlL6/WI5jzyZ4lKw2ZDEQYEJtrnpnrZSLxpCdSSY\nWYk/Yhwhr1eM0Jf2/EHNPgt4rHxS23zMc1MQMvcfgUdZHAOffUcEPbtcpyPa\nemTtjdzV0xgWIg2fuxrJrXcSS4sv5LYVMsim7YdZ4I0JUfGniBkm8m1kKXC7\ncg6G0eEyc2Qyw2UngqiRwaG4iondXRMnHcU8rCexpKLTW+DHRGSEaj2i+zG2\niH3ojBK9olOH6pYJw0NaqkVT6iOtzHd8qUTQqfOCqLzDZja2CJIjzlwT27l5\nG5WLp/BulCNSZoiPVIhjPK66p6TKbp/DRfBpSNSaJigPCEyrWNEHVd3rfYDi\nbMQYMIwMmUa5k7DovNQIqPgq/P2KtBDAoxCcVXeZYPpdao8nBviFXZVHylvv\nG85u\r\n=s9Tj\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.0.0_1529419591908_0.8979531730354346"},"_hasShrinkwrap":false},"2.0.1":{"name":"@pm2/io","version":"2.0.1","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.3","@types/mocha":"5.2.0","@types/node":"10.1.2","chai":"4.1.2","codecov":"3.0.2","concurrently":"3.5.1","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.1.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"11.8.0","trash-cli":"1.4.0","ts-node":"6.0.3","tslint":"5.10.0","tslint-config-standard":"7.0.0","typedoc":"0.11.1","typescript":"2.8.3","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.1","vxx":"1.2.2"},"gitHead":"bb05833f919806cdfcc0063ba81468dc9e39a8d7","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.0.1","_npmVersion":"5.5.1","_nodeVersion":"9.0.0","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-vIVq7PvjGEUExGFAorSYH3OspocR7er0jhjDGc2lS9JIEqiYKG5cIYsWj8BsJA83U73lAQzniDyErCvLfH3xVw==","shasum":"4ccf2d1dc38da6180d51445e6daf90ef122a1076","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.0.1.tgz","fileCount":106,"unpackedSize":472952,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbMfgxCRA9TVsSAnZWagAA18cP/1+KrJBqIjHpb3DcYCum\nDU4wipQwMBZET1EEornCvrGuCuFbBp/te6PE+ZMIFmSFhmlyriHmijY8o0Tp\nV+YIqwz1fj0+eLzrcP65DYDQFl8X0PMR4Ma2oYIcTG+79gdem6a82+Nz08uo\n2QBGNl+qwk9kFYj3HngzbnHOOCu+mAazb9gdsqO58VAmWtWtUyCURO6xDSfn\n4KFsFUZHxzp7wuHFlGZcdvqHW1qB73EH1uTIdFL6j1TwiADPzXWLYLDoVfhU\neH7/ZCSDffJNfqr37NrDoIcWbW4ak4Pj+UzL3j2RhQZlGM3B9Rk2xCoFUKvE\negQVXfZGM87l3N5Ck1FEqrg1MZNktIm00MpXILNokJE46Lt3z0athsX/Nh7n\nL8C3lGDYMuqL3UBs56SenlDoaSqskxQcbchLkEW581itu8ZkPJMEAStuwnQP\n+6gCPhuB4MRZP4zxSjxHKaetjQFYgYpgRP4O7UB0D0l023hPAClkqHMxa6Yy\nL32Diyr0xzU+svP/4VXhL7e8QqZHJi/XUWNNyyJt6UBN4VkKoROM63plQK/8\nTFK1+ViFRf66NS7hSuu+fcMNZG1hB6DxlNRBY4Fr6YXqgDJ9j7q8YuHL+2Hm\ngKCPHN6HD79UD8A4deCtvXarMxdh2V6rcApRXurKZtKyLMfKsjCFBciWFJH2\nbbeP\r\n=Zlbq\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.0.1_1530001457434_0.6009362775230307"},"_hasShrinkwrap":false},"2.0.2":{"name":"@pm2/io","version":"2.0.2","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.3","@types/mocha":"5.2.0","@types/node":"10.1.2","chai":"4.1.2","codecov":"3.0.2","concurrently":"3.5.1","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.1.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"11.8.0","trash-cli":"1.4.0","ts-node":"6.0.3","tslint":"5.10.0","tslint-config-standard":"7.0.0","typedoc":"0.11.1","typescript":"2.8.3","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.1","vxx":"1.2.2"},"gitHead":"fb9547dc0ddd55502332ed570e9be72da544ee72","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.0.2","_npmVersion":"5.5.1","_nodeVersion":"9.0.0","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-zdj0nvIACE+9/Za5AS6Df1jgD3o31I+5eOmP359SGfT13C1x3igjVcU85jEk7RDhvmBsQ1KT0RcrTldnTU1kAQ==","shasum":"9d30d0335913984df13564713bbce9179c16aeec","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.0.2.tgz","fileCount":106,"unpackedSize":472256,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbM2IOCRA9TVsSAnZWagAAsP8P+wf+mBotKVwEwmcmXUZM\ntW71cGxFZqHnxp1UWKVl1d7Rfc96hHSqEi46YtMSEyGQnRqin2zlV+roCQ+x\nz88UTkhcVgSYKrGmYX3tXlyccDcJrUqgI7x/CWXFvTe5hbQRcxW225Rq22uD\ny0jFr9wcYMV79+43VVUECSIcl6YwnQgQbp1sq/iVqOuzClosOwgHXZznk2JD\nEiz8UFeV+KNVkCl1tBMm4uPRvyOFO3Dz5dt45dblvPUBvoJMMVPdwXJN8sX5\n26NIxgpK8+ok5NTrPEo0M9/EHuTs4E/SGolE5hdmud5761Qr/HzkVqREEZCj\nmp1wXTTGp9QAQ/IoEZ83PcoDa9NLKH5L5BvSoczrRq+FOhmap8ZIJpzc/lIg\nofma7HvaCFbMN3xU6y8frDtLl8VPJoazhGAmAD1HT3N060aZE/FYhAuscAtM\nls+NNlEMgy2Vb0ZAcUggE3gHTObjcytvKifbJIbTUc4RJA2M9XJaaG8jY72r\na7b5T3ppJXJpnEjdzr7Uy4FdBuUrzZGC2nmGDcsh6vALcDuCEJnL7xQ9E+lf\nv0bHXgc2GHceqnRcli3cAyYWGRFmwobfp0CuD8DyJZtHTW5plf7S4ck6BYeZ\n8B5j/lDtkaap55/UomKWicQ6w6wZlqKee7Mq3F88zjupNpqh5c7hO9mIml2B\n2vGV\r\n=OKTJ\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.0.2_1530094094351_0.5431256835974989"},"_hasShrinkwrap":false},"2.0.3":{"name":"@pm2/io","version":"2.0.3","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.3","@types/mocha":"5.2.0","@types/node":"10.1.2","chai":"4.1.2","codecov":"3.0.2","concurrently":"3.5.1","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.1.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"11.8.0","trash-cli":"1.4.0","ts-node":"6.0.3","tslint":"5.10.0","tslint-config-standard":"7.0.0","typedoc":"0.11.1","typescript":"2.8.3","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.1","vxx":"1.2.2"},"gitHead":"c2772c66a5edb0015e6df7e038a722a222b2ce80","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.0.3","_npmVersion":"5.5.1","_nodeVersion":"9.0.0","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-VOEnODE0mUobSiY1fvxnhmA2wQUrPA3VT/qA8g6iI5gJF2Uvpgt4fc06QVK1k0fvcZuWt9aAZYhHdLcwX9518A==","shasum":"47f71a4603441bae0fdb0a0855a86efad5102dda","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.0.3.tgz","fileCount":106,"unpackedSize":474333,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbPj6ACRA9TVsSAnZWagAASi0P/iq5FnWaPKs08PMEfEwQ\nGPRp/6OKRbDAzxhXY9HNwHkuLeQcbKw1BD6ofa0DXp/Dp1O4gbyeVVvD2OMq\nh7iU5ZZsG6IiGm+Fp+XpZ0aFpd7Bfk2zPnSP9IHotUwW3eGe52o1Qtf92h8U\nZiR4GkPuz+50l82Ua3fnLpVAscnN1UA4F6X1ZFf2ALDsZtkURi/a3N1D4bsU\n3wihHAkPQK2YqrtZUZqrhdncPE7BSEyARDOeJ90y31xrKqi8tcDsWnp47eBo\njcB1Jx77y91YD1VcvlmGwy3GPsZRUA0+nG0H9OtM3g+4s+p6rnWbkjtqaKLs\nelp6ZlWdy65frOhxynaPxYEXawABaQ7sf2dTeiwsEQ+C/P49za94GTCSqBG3\nzAGk/z7C3AWr4nuRjYf5zd7ewJOx58hfSk62olq7y9QBogBNfdy1HK3Tgi3t\ndCCjRMHecCRVUe6pbdUgfmZT5fgdJ+Bm4tdLRxA7Xsxns2T3I51W68ZGkIfF\npJdTYy1gN9T+HUD/hfqS5hAwuonmP/DyQncKMiJxSVdNxVBt8I4ZRpeyj2FX\n11qtQ6lxsJ1kgaIA4uRaCgihHXArB7B3S+TlqS+Ru71V168ZROK8ROBkNMvh\ndXMhXmqMcFMg8OJO3eQm05CHyRvVrPz/pzY1c+D3prV6YpvWrP1HIDWOQih+\n5/eF\r\n=/H4F\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.0.3_1530805888368_0.07696624822864129"},"_hasShrinkwrap":false},"2.1.0-beta":{"name":"@pm2/io","version":"2.1.0-beta","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.3","@types/mocha":"5.2.0","@types/node":"10.1.2","chai":"4.1.2","codecov":"3.0.2","concurrently":"3.5.1","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.1.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"11.8.0","trash-cli":"1.4.0","ts-node":"6.0.3","tslint":"5.10.0","tslint-config-standard":"7.0.0","typedoc":"0.11.1","typescript":"2.8.3","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.0","event-loop-inspector":"1.0.1","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.1","vxx":"1.2.2"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 part responsible for gathering the metrics, reporting exceptions, exposing remote actions and every outside interaction with your application.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Report Custom Events (deprecated)**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-custom-events-deprecated)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Entrypoint**](https://github.com/keymetrics/pm2-io-apm/tree/master#entrypoint)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in `pm2 monit` or in the Keymetrics dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n});\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **type**: The type of metric (default 'metric', string)\n- **agg_type**: type of aggregation (default 'avg'; string: )\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **metric**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Passive Mode\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n  value: function() {\n    return Object.keys(users).length;\n  }\n});\n```\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst Realtime_Value = io.metric({\n  name: 'Realtime Value'\n});\n\nRealtime_Value.set(23);\n```\n\n#### Inline Mode\n\nIn inline mode, you can create a probe with a simple string.\n\n```javascript\nconst metric = io.metric('Inline');\n\nmetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst Current_req_processed = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  Current_req_processed.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    Current_req_processed.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from Keymetrics.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    /**\n     * cb() must be called at the end of the action\n     */\n     cb({ success: true });\n  });\n});\n```\n\n### Scoped actions (beta)\n\nScoped Actions are advanced remote actions that can be also triggered from Keymetrics.\n\nTwo arguments are passed to the function, data (optional data sent from Keymetrics) and res that allows to emit log data and to end the scoped action.\n\nExample:\n\n```javascript\nio.scopedAction('long running lsof', (data, res) => {\n  const child = spawn('lsof', []);\n\n  child.stdout.on('data', (chunk) => {\n    chunk.toString().split('\\n').forEach(function(line) {\n      res.send(line); // This send log to Keymetrics to be saved (for tracking)\n    });\n  });\n\n  child.stdout.on('end', (chunk) => {\n    res.end('end'); // This end the scoped action\n  });\n\n  child.on('error', (e) => {\n    res.error(e);  // This report an error to Keymetrics\n  });\n\n});\n```\n\n## Report Caught Exceptions\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'));\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    eventLoopActive: true, // (default: true) Monitor active handles and active requests\n    eventLoopDelay: true,  // (default: true) Get event loop's average delay\n\n    // Network monitoring at the application level\n    network: {\n      traffic: true, // (default: true) Allow application level network monitoring\n      ports: true    // (default: false) Shows which ports your app is listening on\n    },\n\n    // Transaction Tracing system configuration\n    transaction: {\n      http: true,               // (default: true) HTTP routes logging\n      tracing: {                // (default: false) Enable transaction tracing\n        http_latency: 1,        // (default: 200) minimum latency in milliseconds to take into account\n        ignore_routes: ['/foo'] // (default: empty) exclude some routes\n      }\n    },\n\n    deepMetrics: {\n      mongo: true,             // (default: true) Mongo connections monitoring\n      mysql: true,             // (default: true) MySQL connections monitoring\n      mqtt: true,              // (default: true) Mqtt connections monitoring\n      socketio: true,          // (default: true) WebSocket monitoring\n      redis: true,             // (default: true) Redis monitoring\n      http: true,              // (default: true) Http incoming requests monitoring\n      https: true,             // (default: true) Https incoming requests monitoring\n      \"http-outbound\": true,   // (default: true) Http outbound requests monitoring\n      \"https-outbound\": true   // (default: true) Https outbound requests monitoring\n    },\n  \n    v8: {\n      new_space: true,                    // (default: true) New objects space size\n      old_space: true,                    // (default: true) Old objects space size\n      map_space: true,                    // (default: true) Map space size\n      code_space: true,                   // (default: true) Executable space size\n      large_object_space: true,           // (default: true) Large objects space size\n      total_physical_size: false,         // (default: false) Physical heap size\n      total_heap_size: true,              // (default: true)  Heap size\n      total_available_size: false,        // (default: false) Total available size for the heap\n      total_heap_size_executable: true,   // (default: true)  Executable heap size\n      used_heap_size: true,               // (default: true)  Used heap size\n      heap_size_limit: true,              // (default: true)  Heap size maximum size\n      malloced_memory: false,             // (default: false) Allocated memory\n      peak_malloced_memory: false,        // (default: false) Peak of allocated memory\n      does_zap_garbage: false,            // (default: false) Zap garbage enable/disable\n      GC: {\n        totalHeapSize: true,              // (default: true)  GC heap size\n        totalHeapExecutableSize: true,    // (default: true)  GC executable heap size\n        usedHeapSize: true,               // (default: true)  GC used heap size\n        heapSizeLimit: false,             // (default: false) GC heap size maximum size\n        totalPhysicalSize: false,         // (default: false) GC heap physical size\n        totalAvailableSize: false,        // (default: false) GC available size\n        mallocedMemory: false,            // (default: false) GC allocated memory\n        peakMallocedMemory: false,        // (default: false) GC peak of allocated memory\n        gcType: true,                     // (default: true)  Type of GC (scavenge, mark/sweep/compact, ...)\n        gcPause: true                     // (default: true)  Duration of pause (in milliseconds)\n      }\n    }\n  },\n  \n  actions: {\n    eventLoopDump: false, // (default: false) Enable event loop dump action\n    profilingCpu: true,   // (default: true) Enable CPU profiling actions\n    profilingHeap: true   // (default: true) Enable Heap profiling actions\n  }\n});\n```\n\n### Custom configuration\n\nIf you want to activate default options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: true\n  }\n})\n```\n\nIf you want to activate all options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: 'all'\n  }\n})\n```\n\nIf you want to customize a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: {\n      new_space: false, // don't take new_space into account\n      ...\n    }\n  }\n})\n```\n**Note** : if you do not disable the default options they will be kept (merged with your configuration)\n\n## Entrypoint\n\n### Usage\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStop (err, cb, code, signal) {\n      console.log(`Application stopped with code ${code} or signal ${signal} !`)\n      cb()\n    }\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n\n      http.listen(process.env.PORT || 3000, function(){\n        console.log('Server express', 'listening on port', http.address().port)\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Configuration\n\nYou can write your own configuration like you do for @pm2/io, just add a conf() method into your entrypoint which returns a json object.\nDetails of configuration can be found in this section : [**Configuration**](#configuration)\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n    \n    conf() {\n      return {\n        ...\n      }\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Access @pm2/io features\n\nEntrypoint allow access to an instance of @pm2/io. So you can use all features described above by calling this.io.\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n      \n      const counter = this.io.counter('start')\n\n      http.listen(process.env.PORT || 3000, () => {\n        console.log('Server express', 'listening on port', http.address().port)\n        counter.inc()\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Actions et Metrics\n\nYou can group all your actions and all your metrics into one methods.\nUse actions() and metrics(), their will be automatically called by the entrypoint.\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n    \n    actions() {\n      this.io.action('db:clean', (cb) => {\n        clean.db(() => {\n          /**\n           * cb() must be called at the end of the action\n           */\n           cb({ success: true });\n        });\n      })\n    }\n    \n    metrics() {\n      this.myMetric = io.metric('Inline');\n    }\n}\n\nnew MyEntrypoint()\n```\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\n## Publishing\n\nTODO\n\n\n## License\n\nMIT\n","readmeFilename":"README.md","gitHead":"03cefe064194e266156001178db5c39a7993f652","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.1.0-beta","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-nWLcU62mO1n0LItgzHbGleKuWbuyVrBr/HuSnw/FS9/hopHiq6R4N1zVO7cY3X1tvHfS/Cg8xrONpTuyK0AkKg==","shasum":"97f93005e56fb2c91bd504673fb1f103c77cf153","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.1.0-beta.tgz","fileCount":106,"unpackedSize":480583,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbTJcRCRA9TVsSAnZWagAAnooP/jRuJtTIMdFrfMuu0zT+\n+4qh8XozhzNPZA/o/48XBRZUZ8KJJKm012PkGSpVp0Yst9fPzKwCIiyQRDfr\nlFYExhSo5gFIurpmlWQv2g063HnfruxdYA0LLSsvhSJeiE/8KppFBMUZ0gLs\nljlKIIt30RFc6oIQ9eiOpOVP5Akc/3akrJXl5ksIQ1FuINjABQwdAdipX210\n7XLOA86VM+g6Q6KqUWkypbuwUG/K6+PjRqVwZ6CADYGuRkzfBYWqlUCOZjzO\n2maMPdpnGnjUu6GjiwuetU/wdnd2SceiAVYVHn6p4ljB8r+yZJl3KuO8WbTN\n3ZUoKeyLQeKptZnfCkf5X/8aBCfGzpk6sPJVWSDA46f8AkaQJYrENZBXty64\nwZjbmLaUIDG+iK7brMcu7R3GEN6RPIH3SPzfk4sljoE7tqaV21YlQnpucrTc\nDR8YDyAKqN3wZjKFr/v2LrOKlTu41RFv3gx55zFZrtnQCWH4kmdN90AuSKFW\nfIBUgr/uOhBqPdXXlGOcTqKi3/pP7DuWgd8NBMTEG/YiAz+m6HfdeRAmxfex\nQNmRZLs7viq7rJoVqlE1RVl6mszqC0H2JHzLJeuAqgFMXkuglz4FIkaljzox\nWFb5CrjA5O6kD2k0H0zqeZ0NdZ/n24hznEh5L8Kb6EsS2uHtQ9SbRel0DRxV\nuVnu\r\n=YQe1\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.1.0-beta_1531746064402_0.38101668005801903"},"_hasShrinkwrap":false},"2.1.0-beta2":{"name":"@pm2/io","version":"2.1.0-beta2","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.3","@types/mocha":"5.2.0","@types/node":"10.1.2","chai":"4.1.2","codecov":"3.0.2","concurrently":"3.5.1","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.1.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"11.8.0","trash-cli":"1.4.0","ts-node":"6.0.3","tslint":"5.10.0","tslint-config-standard":"7.0.0","typedoc":"0.11.1","typescript":"2.8.3","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.0","event-loop-inspector":"1.0.1","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.1","vxx":"1.2.2"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 part responsible for gathering the metrics, reporting exceptions, exposing remote actions and every outside interaction with your application.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Report Custom Events (deprecated)**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-custom-events-deprecated)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Entrypoint**](https://github.com/keymetrics/pm2-io-apm/tree/master#entrypoint)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in `pm2 monit` or in the Keymetrics dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n});\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **type**: The type of metric (default 'metric', string)\n- **agg_type**: type of aggregation (default 'avg'; string: )\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **metric**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Passive Mode\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n  value: function() {\n    return Object.keys(users).length;\n  }\n});\n```\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst Realtime_Value = io.metric({\n  name: 'Realtime Value'\n});\n\nRealtime_Value.set(23);\n```\n\n#### Inline Mode\n\nIn inline mode, you can create a probe with a simple string.\n\n```javascript\nconst metric = io.metric('Inline');\n\nmetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst Current_req_processed = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  Current_req_processed.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    Current_req_processed.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from Keymetrics.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    /**\n     * cb() must be called at the end of the action\n     */\n     cb({ success: true });\n  });\n});\n```\n\n### Scoped actions (beta)\n\nScoped Actions are advanced remote actions that can be also triggered from Keymetrics.\n\nTwo arguments are passed to the function, data (optional data sent from Keymetrics) and res that allows to emit log data and to end the scoped action.\n\nExample:\n\n```javascript\nio.scopedAction('long running lsof', (data, res) => {\n  const child = spawn('lsof', []);\n\n  child.stdout.on('data', (chunk) => {\n    chunk.toString().split('\\n').forEach(function(line) {\n      res.send(line); // This send log to Keymetrics to be saved (for tracking)\n    });\n  });\n\n  child.stdout.on('end', (chunk) => {\n    res.end('end'); // This end the scoped action\n  });\n\n  child.on('error', (e) => {\n    res.error(e);  // This report an error to Keymetrics\n  });\n\n});\n```\n\n## Report Caught Exceptions\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'));\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    eventLoopActive: true, // (default: true) Monitor active handles and active requests\n    eventLoopDelay: true,  // (default: true) Get event loop's average delay\n\n    // Network monitoring at the application level\n    network: {\n      traffic: true, // (default: true) Allow application level network monitoring\n      ports: true    // (default: false) Shows which ports your app is listening on\n    },\n\n    // Transaction Tracing system configuration\n    transaction: {\n      http: true,               // (default: true) HTTP routes logging\n      tracing: {                // (default: false) Enable transaction tracing\n        http_latency: 1,        // (default: 200) minimum latency in milliseconds to take into account\n        ignore_routes: ['/foo'] // (default: empty) exclude some routes\n      }\n    },\n\n    deepMetrics: {\n      mongo: true,             // (default: true) Mongo connections monitoring\n      mysql: true,             // (default: true) MySQL connections monitoring\n      mqtt: true,              // (default: true) Mqtt connections monitoring\n      socketio: true,          // (default: true) WebSocket monitoring\n      redis: true,             // (default: true) Redis monitoring\n      http: true,              // (default: true) Http incoming requests monitoring\n      https: true,             // (default: true) Https incoming requests monitoring\n      \"http-outbound\": true,   // (default: true) Http outbound requests monitoring\n      \"https-outbound\": true   // (default: true) Https outbound requests monitoring\n    },\n  \n    v8: {\n      new_space: true,                    // (default: true) New objects space size\n      old_space: true,                    // (default: true) Old objects space size\n      map_space: true,                    // (default: true) Map space size\n      code_space: true,                   // (default: true) Executable space size\n      large_object_space: true,           // (default: true) Large objects space size\n      total_physical_size: false,         // (default: false) Physical heap size\n      total_heap_size: true,              // (default: true)  Heap size\n      total_available_size: false,        // (default: false) Total available size for the heap\n      total_heap_size_executable: true,   // (default: true)  Executable heap size\n      used_heap_size: true,               // (default: true)  Used heap size\n      heap_size_limit: true,              // (default: true)  Heap size maximum size\n      malloced_memory: false,             // (default: false) Allocated memory\n      peak_malloced_memory: false,        // (default: false) Peak of allocated memory\n      does_zap_garbage: false,            // (default: false) Zap garbage enable/disable\n      GC: {\n        totalHeapSize: true,              // (default: true)  GC heap size\n        totalHeapExecutableSize: true,    // (default: true)  GC executable heap size\n        usedHeapSize: true,               // (default: true)  GC used heap size\n        heapSizeLimit: false,             // (default: false) GC heap size maximum size\n        totalPhysicalSize: false,         // (default: false) GC heap physical size\n        totalAvailableSize: false,        // (default: false) GC available size\n        mallocedMemory: false,            // (default: false) GC allocated memory\n        peakMallocedMemory: false,        // (default: false) GC peak of allocated memory\n        gcType: true,                     // (default: true)  Type of GC (scavenge, mark/sweep/compact, ...)\n        gcPause: true                     // (default: true)  Duration of pause (in milliseconds)\n      }\n    }\n  },\n  \n  actions: {\n    eventLoopDump: false, // (default: false) Enable event loop dump action\n    profilingCpu: true,   // (default: true) Enable CPU profiling actions\n    profilingHeap: true   // (default: true) Enable Heap profiling actions\n  }\n});\n```\n\n### Custom configuration\n\nIf you want to activate default options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: true\n  }\n})\n```\n\nIf you want to activate all options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: 'all'\n  }\n})\n```\n\nIf you want to customize a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: {\n      new_space: false, // don't take new_space into account\n      ...\n    }\n  }\n})\n```\n**Note** : if you do not disable the default options they will be kept (merged with your configuration)\n\n## Entrypoint\n\n### Usage\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStop (err, cb, code, signal) {\n      console.log(`Application stopped with code ${code} or signal ${signal} !`)\n      cb()\n    }\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n\n      http.listen(process.env.PORT || 3000, function(){\n        console.log('Server express', 'listening on port', http.address().port)\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Configuration\n\nYou can write your own configuration like you do for @pm2/io, just add a conf() method into your entrypoint which returns a json object.\nDetails of configuration can be found in this section : [**Configuration**](#configuration)\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n    \n    conf() {\n      return {\n        ...\n      }\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Access @pm2/io features\n\nEntrypoint allow access to an instance of @pm2/io. So you can use all features described above by calling this.io.\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n      \n      const counter = this.io.counter('start')\n\n      http.listen(process.env.PORT || 3000, () => {\n        console.log('Server express', 'listening on port', http.address().port)\n        counter.inc()\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Actions et Metrics\n\nYou can group all your actions and all your metrics into one methods.\nUse actions() and metrics(), their will be automatically called by the entrypoint.\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n    \n    actions() {\n      this.io.action('db:clean', (cb) => {\n        clean.db(() => {\n          /**\n           * cb() must be called at the end of the action\n           */\n           cb({ success: true });\n        });\n      })\n    }\n    \n    metrics() {\n      this.myMetric = io.metric('Inline');\n    }\n}\n\nnew MyEntrypoint()\n```\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\n## Publishing\n\nTODO\n\n\n## License\n\nMIT\n","readmeFilename":"README.md","gitHead":"03cefe064194e266156001178db5c39a7993f652","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.1.0-beta2","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-jhAUaNKnf9SIW61CFtvI997YUZNo/6aVTSfIVk4Elc6y46H/Jz1ieOdloQKOg6j4PRLodKD36lFuOYq8da/rgQ==","shasum":"403c7e288cb909ab783903343d0e0a43129e78ec","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.1.0-beta2.tgz","fileCount":106,"unpackedSize":480520,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbTJsYCRA9TVsSAnZWagAAE2gP/is66WZ4OZMi5xv2lpjN\nD1RoQ5ez8QCYvrfMk4+agbeEJguYgU9TjjC2mGiCC9JDXfxlhV/rYJRXhth4\nATQuj/0/MwTquTf+55NaOmJyGqn5vaqs5sEde2PZ/2iiB1FZbF2RHV/535aP\nD6iYYdwU2BCf9Iw3q+XUDIy1afUUlg49n6uYFu8mrLPv+I9ofXoaFkJbT9Np\nkciKBwlHjl1+Fq4/4OLvLNj0pdnZiQ/zrgUjoFLyC8cXmAnz/RZFO2rQgZay\nVOWRLOyXauzarOQ7mdAew5cECbQRYSd2jncZQYC2jIMOKP/yTNoCUb4WH8bj\ntZv0siOWvTW2crhQm9YHnpgIe5Xp/XquQHhPA/1ANJ1mHjiYUGOSiYZa2yTZ\n7mitLL+blYEkVq7/70P6LuYtjZ7nJtjwg7gF8lzev21COhlxIlEufFnz7Uwc\nD6B7XdzjuX2ZLJ7DnuwcO6KPfCQMMwYuv5Lo55g+Nf27knFp5RPir7Vbgqo1\nhneu6AdiKQioaYmXY8Y0woLIWsLtGq6VqheXek9gQmpbf2HtmVrWYwyTUI6R\nuqNUv3FrafekSzbdEtRfpSPUVB0n7zV7VG9qGjfuG3CG8O4C1otUpaHm8Gls\nJDW2ptLwruOdYvzwzSeRDlGNgrcRYbBMLmWDxrre2pUVO8jUJyDLxUamKKte\n/uAH\r\n=naFT\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.1.0-beta2_1531747095851_0.4930280938003788"},"_hasShrinkwrap":false},"2.1.0-beta3":{"name":"@pm2/io","version":"2.1.0-beta3","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.3","@types/mocha":"5.2.0","@types/node":"10.1.2","chai":"4.1.2","codecov":"3.0.2","concurrently":"3.5.1","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.1.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"11.8.0","trash-cli":"1.4.0","ts-node":"6.0.3","tslint":"5.10.0","tslint-config-standard":"7.0.0","typedoc":"0.11.1","typescript":"2.8.3","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.0","event-loop-inspector":"1.0.1","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.1","vxx":"1.2.2"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 part responsible for gathering the metrics, reporting exceptions, exposing remote actions and every outside interaction with your application.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Report Custom Events (deprecated)**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-custom-events-deprecated)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Entrypoint**](https://github.com/keymetrics/pm2-io-apm/tree/master#entrypoint)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in `pm2 monit` or in the Keymetrics dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n});\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **type**: The type of metric (default 'metric', string)\n- **agg_type**: type of aggregation (default 'avg'; string: )\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **metric**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Passive Mode\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n  value: function() {\n    return Object.keys(users).length;\n  }\n});\n```\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst Realtime_Value = io.metric({\n  name: 'Realtime Value'\n});\n\nRealtime_Value.set(23);\n```\n\n#### Inline Mode\n\nIn inline mode, you can create a probe with a simple string.\n\n```javascript\nconst metric = io.metric('Inline');\n\nmetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst Current_req_processed = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  Current_req_processed.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    Current_req_processed.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from Keymetrics.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    /**\n     * cb() must be called at the end of the action\n     */\n     cb({ success: true });\n  });\n});\n```\n\n### Scoped actions (beta)\n\nScoped Actions are advanced remote actions that can be also triggered from Keymetrics.\n\nTwo arguments are passed to the function, data (optional data sent from Keymetrics) and res that allows to emit log data and to end the scoped action.\n\nExample:\n\n```javascript\nio.scopedAction('long running lsof', (data, res) => {\n  const child = spawn('lsof', []);\n\n  child.stdout.on('data', (chunk) => {\n    chunk.toString().split('\\n').forEach(function(line) {\n      res.send(line); // This send log to Keymetrics to be saved (for tracking)\n    });\n  });\n\n  child.stdout.on('end', (chunk) => {\n    res.end('end'); // This end the scoped action\n  });\n\n  child.on('error', (e) => {\n    res.error(e);  // This report an error to Keymetrics\n  });\n\n});\n```\n\n## Report Caught Exceptions\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'));\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    eventLoopActive: true, // (default: true) Monitor active handles and active requests\n    eventLoopDelay: true,  // (default: true) Get event loop's average delay\n\n    // Network monitoring at the application level\n    network: {\n      traffic: true, // (default: true) Allow application level network monitoring\n      ports: true    // (default: false) Shows which ports your app is listening on\n    },\n\n    // Transaction Tracing system configuration\n    transaction: {\n      http: true,               // (default: true) HTTP routes logging\n      tracing: {                // (default: false) Enable transaction tracing\n        http_latency: 1,        // (default: 200) minimum latency in milliseconds to take into account\n        ignore_routes: ['/foo'] // (default: empty) exclude some routes\n      }\n    },\n\n    deepMetrics: {\n      mongo: true,             // (default: true) Mongo connections monitoring\n      mysql: true,             // (default: true) MySQL connections monitoring\n      mqtt: true,              // (default: true) Mqtt connections monitoring\n      socketio: true,          // (default: true) WebSocket monitoring\n      redis: true,             // (default: true) Redis monitoring\n      http: true,              // (default: true) Http incoming requests monitoring\n      https: true,             // (default: true) Https incoming requests monitoring\n      \"http-outbound\": true,   // (default: true) Http outbound requests monitoring\n      \"https-outbound\": true   // (default: true) Https outbound requests monitoring\n    },\n  \n    v8: {\n      new_space: true,                    // (default: true) New objects space size\n      old_space: true,                    // (default: true) Old objects space size\n      map_space: true,                    // (default: true) Map space size\n      code_space: true,                   // (default: true) Executable space size\n      large_object_space: true,           // (default: true) Large objects space size\n      total_physical_size: false,         // (default: false) Physical heap size\n      total_heap_size: true,              // (default: true)  Heap size\n      total_available_size: false,        // (default: false) Total available size for the heap\n      total_heap_size_executable: true,   // (default: true)  Executable heap size\n      used_heap_size: true,               // (default: true)  Used heap size\n      heap_size_limit: true,              // (default: true)  Heap size maximum size\n      malloced_memory: false,             // (default: false) Allocated memory\n      peak_malloced_memory: false,        // (default: false) Peak of allocated memory\n      does_zap_garbage: false,            // (default: false) Zap garbage enable/disable\n      GC: {\n        totalHeapSize: true,              // (default: true)  GC heap size\n        totalHeapExecutableSize: true,    // (default: true)  GC executable heap size\n        usedHeapSize: true,               // (default: true)  GC used heap size\n        heapSizeLimit: false,             // (default: false) GC heap size maximum size\n        totalPhysicalSize: false,         // (default: false) GC heap physical size\n        totalAvailableSize: false,        // (default: false) GC available size\n        mallocedMemory: false,            // (default: false) GC allocated memory\n        peakMallocedMemory: false,        // (default: false) GC peak of allocated memory\n        gcType: true,                     // (default: true)  Type of GC (scavenge, mark/sweep/compact, ...)\n        gcPause: true                     // (default: true)  Duration of pause (in milliseconds)\n      }\n    }\n  },\n  \n  actions: {\n    eventLoopDump: false, // (default: false) Enable event loop dump action\n    profilingCpu: true,   // (default: true) Enable CPU profiling actions\n    profilingHeap: true   // (default: true) Enable Heap profiling actions\n  }\n});\n```\n\n### Custom configuration\n\nIf you want to activate default options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: true\n  }\n})\n```\n\nIf you want to activate all options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: 'all'\n  }\n})\n```\n\nIf you want to customize a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: {\n      new_space: false, // don't take new_space into account\n      ...\n    }\n  }\n})\n```\n**Note** : if you do not disable the default options they will be kept (merged with your configuration)\n\n## Entrypoint\n\n### Usage\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStop (err, cb, code, signal) {\n      console.log(`Application stopped with code ${code} or signal ${signal} !`)\n      cb()\n    }\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n\n      http.listen(process.env.PORT || 3000, function(){\n        console.log('Server express', 'listening on port', http.address().port)\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Configuration\n\nYou can write your own configuration like you do for @pm2/io, just add a conf() method into your entrypoint which returns a json object.\nDetails of configuration can be found in this section : [**Configuration**](#configuration)\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n    \n    conf() {\n      return {\n        ...\n      }\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Access @pm2/io features\n\nEntrypoint allow access to an instance of @pm2/io. So you can use all features described above by calling this.io.\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n      \n      const counter = this.io.counter('start')\n\n      http.listen(process.env.PORT || 3000, () => {\n        console.log('Server express', 'listening on port', http.address().port)\n        counter.inc()\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Actions et Metrics\n\nYou can group all your actions and all your metrics into one methods.\nUse actions() and metrics(), their will be automatically called by the entrypoint.\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n    \n    actions() {\n      this.io.action('db:clean', (cb) => {\n        clean.db(() => {\n          /**\n           * cb() must be called at the end of the action\n           */\n           cb({ success: true });\n        });\n      })\n    }\n    \n    metrics() {\n      this.myMetric = io.metric('Inline');\n    }\n}\n\nnew MyEntrypoint()\n```\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\n## Publishing\n\nTODO\n\n\n## License\n\nMIT\n","readmeFilename":"README.md","gitHead":"53dcaafab3b9f721c677d48cf8af13cc11434357","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.1.0-beta3","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-aSPbXBoKsJBDgtHYvhesS+ERAOfU4vk+u1DDtKfgn9uppzZLYiXF+Uae/jZ8qcuWsm4bvKFVbdwkrxtYsFCjiw==","shasum":"4f6c7252aa038cc1085b5ac97bee27f2977d80d3","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.1.0-beta3.tgz","fileCount":106,"unpackedSize":483648,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbTwhpCRA9TVsSAnZWagAASnUP/3/P2tfXbwuq/QFuPJ9r\ng0UKPwtCphcOYrmVYKWDZaAXM7N+uHJPx9m82HftGeeRgoYxrDgX7nRHWzum\nnHew7M/VSUzOg4+ZuTfqSuEXgrNjfvMTOgAvHHP8FX4IYhmgLzR5cXvZakpM\nN1KHctWPvKrGIvVhAj8nVhTa9AVxDVJQwin9Na7t6HO9bmFRTcKZqjkAg5KV\n8gidLxjuTRMkIml6Xy8imyP8iYAcq3IM29OA5KxaUUllwlzG+fRwEafhIuvT\n/JcYhJzOhqse5HU9y5BEbfyi7X5Tv1XwL1pYIF7y87X7piMIDsAD4BUgDQ9Z\nINpD0KmqPP1E6XAym2YuuBHb6E9x1Y1OlC6BRs2PaMG0Un9eRQmA6HlOd3yH\naKpUCQiewsFrfXfXK2YJPFyRuDcAEX5s8UewzHF+v5vAXRbJSonklvesYkXk\nT0bTqDjecEcsAjrG32iGmmfa2X05Q/eycPvEHpn3/VI19IOrBkcS2hJ1wQn0\n9d4EKmhQJOK8ks0WeFtUaLQ5kZGVK6+Aqkp2pfjJddhGC71VCzfM0XmRRo+r\npuT+VDOxBDc3gqXnOOEJviW+TRbZJQl5x6iQ8lush2po8UGbf++uS+axxyIj\nis0JbK3XBXUuKTNzGfbca9KahlbfeaoAy5+S5iJZCWdwNPSstOwOKZydphQV\nkPU/\r\n=o0cA\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.1.0-beta3_1531906153829_0.8269433000222091"},"_hasShrinkwrap":false},"2.1.0-beta4":{"name":"@pm2/io","version":"2.1.0-beta4","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.3","@types/mocha":"5.2.0","@types/node":"10.1.2","chai":"4.1.2","codecov":"3.0.2","concurrently":"3.5.1","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.1.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"11.8.0","trash-cli":"1.4.0","ts-node":"6.0.3","tslint":"5.10.0","tslint-config-standard":"7.0.0","typedoc":"0.11.1","typescript":"2.8.3","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.0","event-loop-inspector":"1.0.1","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.1","vxx":"1.2.2"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 part responsible for gathering the metrics, reporting exceptions, exposing remote actions and every outside interaction with your application.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Report Custom Events (deprecated)**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-custom-events-deprecated)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Entrypoint**](https://github.com/keymetrics/pm2-io-apm/tree/master#entrypoint)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in `pm2 monit` or in the Keymetrics dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n});\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **type**: The type of metric (default 'metric', string)\n- **agg_type**: type of aggregation (default 'avg'; string: )\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **metric**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Passive Mode\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n  value: function() {\n    return Object.keys(users).length;\n  }\n});\n```\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst Realtime_Value = io.metric({\n  name: 'Realtime Value'\n});\n\nRealtime_Value.set(23);\n```\n\n#### Inline Mode\n\nIn inline mode, you can create a probe with a simple string.\n\n```javascript\nconst metric = io.metric('Inline');\n\nmetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst Current_req_processed = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  Current_req_processed.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    Current_req_processed.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from Keymetrics.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    /**\n     * cb() must be called at the end of the action\n     */\n     cb({ success: true });\n  });\n});\n```\n\n### Scoped actions (beta)\n\nScoped Actions are advanced remote actions that can be also triggered from Keymetrics.\n\nTwo arguments are passed to the function, data (optional data sent from Keymetrics) and res that allows to emit log data and to end the scoped action.\n\nExample:\n\n```javascript\nio.scopedAction('long running lsof', (data, res) => {\n  const child = spawn('lsof', []);\n\n  child.stdout.on('data', (chunk) => {\n    chunk.toString().split('\\n').forEach(function(line) {\n      res.send(line); // This send log to Keymetrics to be saved (for tracking)\n    });\n  });\n\n  child.stdout.on('end', (chunk) => {\n    res.end('end'); // This end the scoped action\n  });\n\n  child.on('error', (e) => {\n    res.error(e);  // This report an error to Keymetrics\n  });\n\n});\n```\n\n## Report Caught Exceptions\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'));\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    eventLoopActive: true, // (default: true) Monitor active handles and active requests\n    eventLoopDelay: true,  // (default: true) Get event loop's average delay\n\n    // Network monitoring at the application level\n    network: {\n      traffic: true, // (default: true) Allow application level network monitoring\n      ports: true    // (default: false) Shows which ports your app is listening on\n    },\n\n    // Transaction Tracing system configuration\n    transaction: {\n      http: true,               // (default: true) HTTP routes logging\n      tracing: {                // (default: false) Enable transaction tracing\n        http_latency: 1,        // (default: 200) minimum latency in milliseconds to take into account\n        ignore_routes: ['/foo'] // (default: empty) exclude some routes\n      }\n    },\n\n    deepMetrics: {\n      mongo: true,             // (default: true) Mongo connections monitoring\n      mysql: true,             // (default: true) MySQL connections monitoring\n      mqtt: true,              // (default: true) Mqtt connections monitoring\n      socketio: true,          // (default: true) WebSocket monitoring\n      redis: true,             // (default: true) Redis monitoring\n      http: true,              // (default: true) Http incoming requests monitoring\n      https: true,             // (default: true) Https incoming requests monitoring\n      \"http-outbound\": true,   // (default: true) Http outbound requests monitoring\n      \"https-outbound\": true   // (default: true) Https outbound requests monitoring\n    },\n  \n    v8: {\n      new_space: true,                    // (default: true) New objects space size\n      old_space: true,                    // (default: true) Old objects space size\n      map_space: true,                    // (default: true) Map space size\n      code_space: true,                   // (default: true) Executable space size\n      large_object_space: true,           // (default: true) Large objects space size\n      total_physical_size: false,         // (default: false) Physical heap size\n      total_heap_size: true,              // (default: true)  Heap size\n      total_available_size: false,        // (default: false) Total available size for the heap\n      total_heap_size_executable: true,   // (default: true)  Executable heap size\n      used_heap_size: true,               // (default: true)  Used heap size\n      heap_size_limit: true,              // (default: true)  Heap size maximum size\n      malloced_memory: false,             // (default: false) Allocated memory\n      peak_malloced_memory: false,        // (default: false) Peak of allocated memory\n      does_zap_garbage: false,            // (default: false) Zap garbage enable/disable\n      GC: {\n        totalHeapSize: true,              // (default: true)  GC heap size\n        totalHeapExecutableSize: true,    // (default: true)  GC executable heap size\n        usedHeapSize: true,               // (default: true)  GC used heap size\n        heapSizeLimit: false,             // (default: false) GC heap size maximum size\n        totalPhysicalSize: false,         // (default: false) GC heap physical size\n        totalAvailableSize: false,        // (default: false) GC available size\n        mallocedMemory: false,            // (default: false) GC allocated memory\n        peakMallocedMemory: false,        // (default: false) GC peak of allocated memory\n        gcType: true,                     // (default: true)  Type of GC (scavenge, mark/sweep/compact, ...)\n        gcPause: true                     // (default: true)  Duration of pause (in milliseconds)\n      }\n    }\n  },\n  \n  actions: {\n    eventLoopDump: false, // (default: false) Enable event loop dump action\n    profilingCpu: true,   // (default: true) Enable CPU profiling actions\n    profilingHeap: true   // (default: true) Enable Heap profiling actions\n  }\n});\n```\n\n### Custom configuration\n\nIf you want to activate default options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: true\n  }\n})\n```\n\nIf you want to activate all options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: 'all'\n  }\n})\n```\n\nIf you want to customize a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: {\n      new_space: false, // don't take new_space into account\n      ...\n    }\n  }\n})\n```\n**Note** : if you do not disable the default options they will be kept (merged with your configuration)\n\n## Entrypoint\n\n### Usage\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStop (err, cb, code, signal) {\n      console.log(`Application stopped with code ${code} or signal ${signal} !`)\n      cb()\n    }\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n\n      http.listen(process.env.PORT || 3000, function(){\n        console.log('Server express', 'listening on port', http.address().port)\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Configuration\n\nYou can write your own configuration like you do for @pm2/io, just add a conf() method into your entrypoint which returns a json object.\nDetails of configuration can be found in this section : [**Configuration**](#configuration)\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n    \n    conf() {\n      return {\n        ...\n      }\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Access @pm2/io features\n\nEntrypoint allow access to an instance of @pm2/io. So you can use all features described above by calling this.io.\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n      \n      const counter = this.io.counter('start')\n\n      http.listen(process.env.PORT || 3000, () => {\n        console.log('Server express', 'listening on port', http.address().port)\n        counter.inc()\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Actions et Metrics\n\nYou can group all your actions and all your metrics into one methods.\nUse actions() and metrics(), their will be automatically called by the entrypoint.\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n    \n    actions() {\n      this.io.action('db:clean', (cb) => {\n        clean.db(() => {\n          /**\n           * cb() must be called at the end of the action\n           */\n           cb({ success: true });\n        });\n      })\n    }\n    \n    metrics() {\n      this.myMetric = io.metric('Inline');\n    }\n}\n\nnew MyEntrypoint()\n```\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\n## Publishing\n\nJust run :\n```bash\n$ npm publish\n```\n\nAnd for beta\n```bash\n$ npm publish --tag beta\n```\n\n\n## License\n\nMIT\n","readmeFilename":"README.md","gitHead":"4c0a04b778de95afcb2461bc500945a1ccc25302","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.1.0-beta4","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-inY6p6YvZ3JtlYqRQQsCkqR0A3Lwa5ulVztHcpiqOEll2/I9icvo432+wARcRQdQWG80YvMYgdHMEqUSHZcFQQ==","shasum":"fcf005efabd913bab2079ec434ca67b62bc3ed8a","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.1.0-beta4.tgz","fileCount":106,"unpackedSize":485216,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbT2I7CRA9TVsSAnZWagAAPUIQAIJrUUG+NixX4odwHv6u\nz7M1dtsEqmaE2h2VPE5KJvmfsPm3Pgrlk/ZQa/5cw2156bn1fE9DikLDsn/5\nvBgRiK1Ho4a8XW2xwG29zCVQzv7l330z571RSstn3ShtNWw4dtwR43k4Kd7P\nCbuPFCSa/4Ic8pckAmDWMvRuNRKz+1QLe21+3SpMI7Abzb2r7b0gKX76+V7w\ns1R9UBwnLw7lZiz4b7kos8dmkQjH3H3aAVqHu4UcZySaO9QN4Gre9VCDNKSq\n8InpmvDe3sg6cFGBL2RBfiiNxns1IOIRxpIAiTLGcyn4Yw/c7nmEMSDui+Cp\nSzE3OgKdXUvOb3/d6mMespoeQBbNudcsNF8t06Mq3nNJJQtyIcIl6IRNBrUs\n3BueUHhMhaEEh4yzgBFH/036oxyvDeJvVeiwwfnoHo+ikz0uUXf2+d8JPsy6\nO+4Df4hGiFuk0lEv7o39UM5zpNxZthlwKB+BliPieRRmPKed+G7jFFn8CWYJ\nbJEAblq6lD493zVmffzVva5SDt9NRBXDBLkvRBWHDNYb/4r4js1cRGnZJZ8M\nAy+2T+iXLUqra7eda+Py5HRmF0fZmgXjhyJIi0Os8TLQr7Ncx/GtAOCZ3lqL\nhnUucbCETMFtLwsdTE1h6fo3Fbsxx1/VdwmFxQr0Mdi8YkIx/0imB27S+TJT\nD/14\r\n=TF7h\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.1.0-beta4_1531929147616_0.3937027225912082"},"_hasShrinkwrap":false},"2.1.0-beta5":{"name":"@pm2/io","version":"2.1.0-beta5","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.3","@types/mocha":"5.2.0","@types/node":"10.1.2","chai":"4.1.2","codecov":"3.0.2","concurrently":"3.5.1","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.1.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"11.8.0","trash-cli":"1.4.0","ts-node":"6.0.3","tslint":"5.10.0","tslint-config-standard":"7.0.0","typedoc":"0.11.1","typescript":"2.8.3","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.0","event-loop-inspector":"1.0.1","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.1","vxx":"1.2.2"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 part responsible for gathering the metrics, reporting exceptions, exposing remote actions and every outside interaction with your application.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Report Custom Events (deprecated)**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-custom-events-deprecated)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Entrypoint**](https://github.com/keymetrics/pm2-io-apm/tree/master#entrypoint)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in `pm2 monit` or in the Keymetrics dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n});\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **type**: The type of metric (default 'metric', string)\n- **agg_type**: type of aggregation (default 'avg'; string: )\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **metric**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Passive Mode\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n  value: function() {\n    return Object.keys(users).length;\n  }\n});\n```\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst Realtime_Value = io.metric({\n  name: 'Realtime Value'\n});\n\nRealtime_Value.set(23);\n```\n\n#### Inline Mode\n\nIn inline mode, you can create a probe with a simple string.\n\n```javascript\nconst metric = io.metric('Inline');\n\nmetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst Current_req_processed = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  Current_req_processed.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    Current_req_processed.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from Keymetrics.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    /**\n     * cb() must be called at the end of the action\n     */\n     cb({ success: true });\n  });\n});\n```\n\n### Scoped actions (beta)\n\nScoped Actions are advanced remote actions that can be also triggered from Keymetrics.\n\nTwo arguments are passed to the function, data (optional data sent from Keymetrics) and res that allows to emit log data and to end the scoped action.\n\nExample:\n\n```javascript\nio.scopedAction('long running lsof', (data, res) => {\n  const child = spawn('lsof', []);\n\n  child.stdout.on('data', (chunk) => {\n    chunk.toString().split('\\n').forEach(function(line) {\n      res.send(line); // This send log to Keymetrics to be saved (for tracking)\n    });\n  });\n\n  child.stdout.on('end', (chunk) => {\n    res.end('end'); // This end the scoped action\n  });\n\n  child.on('error', (e) => {\n    res.error(e);  // This report an error to Keymetrics\n  });\n\n});\n```\n\n## Report Caught Exceptions\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'));\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    eventLoopActive: true, // (default: true) Monitor active handles and active requests\n    eventLoopDelay: true,  // (default: true) Get event loop's average delay\n\n    // Network monitoring at the application level\n    network: {\n      traffic: true, // (default: true) Allow application level network monitoring\n      ports: true    // (default: false) Shows which ports your app is listening on\n    },\n\n    // Transaction Tracing system configuration\n    transaction: {\n      http: true,               // (default: true) HTTP routes logging\n      tracing: {                // (default: false) Enable transaction tracing\n        http_latency: 1,        // (default: 200) minimum latency in milliseconds to take into account\n        ignore_routes: ['/foo'] // (default: empty) exclude some routes\n      }\n    },\n\n    deepMetrics: {\n      mongo: true,             // (default: true) Mongo connections monitoring\n      mysql: true,             // (default: true) MySQL connections monitoring\n      mqtt: true,              // (default: true) Mqtt connections monitoring\n      socketio: true,          // (default: true) WebSocket monitoring\n      redis: true,             // (default: true) Redis monitoring\n      http: true,              // (default: true) Http incoming requests monitoring\n      https: true,             // (default: true) Https incoming requests monitoring\n      \"http-outbound\": true,   // (default: true) Http outbound requests monitoring\n      \"https-outbound\": true   // (default: true) Https outbound requests monitoring\n    },\n  \n    v8: {\n      new_space: true,                    // (default: true) New objects space size\n      old_space: true,                    // (default: true) Old objects space size\n      map_space: true,                    // (default: true) Map space size\n      code_space: true,                   // (default: true) Executable space size\n      large_object_space: true,           // (default: true) Large objects space size\n      total_physical_size: false,         // (default: false) Physical heap size\n      total_heap_size: true,              // (default: true)  Heap size\n      total_available_size: false,        // (default: false) Total available size for the heap\n      total_heap_size_executable: true,   // (default: true)  Executable heap size\n      used_heap_size: true,               // (default: true)  Used heap size\n      heap_size_limit: true,              // (default: true)  Heap size maximum size\n      malloced_memory: false,             // (default: false) Allocated memory\n      peak_malloced_memory: false,        // (default: false) Peak of allocated memory\n      does_zap_garbage: false,            // (default: false) Zap garbage enable/disable\n      GC: {\n        totalHeapSize: true,              // (default: true)  GC heap size\n        totalHeapExecutableSize: true,    // (default: true)  GC executable heap size\n        usedHeapSize: true,               // (default: true)  GC used heap size\n        heapSizeLimit: false,             // (default: false) GC heap size maximum size\n        totalPhysicalSize: false,         // (default: false) GC heap physical size\n        totalAvailableSize: false,        // (default: false) GC available size\n        mallocedMemory: false,            // (default: false) GC allocated memory\n        peakMallocedMemory: false,        // (default: false) GC peak of allocated memory\n        gcType: true,                     // (default: true)  Type of GC (scavenge, mark/sweep/compact, ...)\n        gcPause: true                     // (default: true)  Duration of pause (in milliseconds)\n      }\n    }\n  },\n  \n  actions: {\n    eventLoopDump: false, // (default: false) Enable event loop dump action\n    profilingCpu: true,   // (default: true) Enable CPU profiling actions\n    profilingHeap: true   // (default: true) Enable Heap profiling actions\n  }\n});\n```\n\n### Custom configuration\n\nIf you want to activate default options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: true\n  }\n})\n```\n\nIf you want to activate all options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: 'all'\n  }\n})\n```\n\nIf you want to customize a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: {\n      new_space: false, // don't take new_space into account\n      ...\n    }\n  }\n})\n```\n**Note** : if you do not disable the default options they will be kept (merged with your configuration)\n\n## Entrypoint\n\n### Usage\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStop (err, cb, code, signal) {\n      console.log(`Application stopped with code ${code} or signal ${signal} !`)\n      cb()\n    }\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n\n      http.listen(process.env.PORT || 3000, function(){\n        console.log('Server express', 'listening on port', http.address().port)\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Configuration\n\nYou can write your own configuration like you do for @pm2/io, just add a conf() method into your entrypoint which returns a json object.\nDetails of configuration can be found in this section : [**Configuration**](#configuration)\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n    \n    conf() {\n      return {\n        ...\n      }\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Access @pm2/io features\n\nEntrypoint allow access to an instance of @pm2/io. So you can use all features described above by calling this.io.\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n      \n      const counter = this.io.counter('start')\n\n      http.listen(process.env.PORT || 3000, () => {\n        console.log('Server express', 'listening on port', http.address().port)\n        counter.inc()\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Actions et Metrics\n\nYou can group all your actions and all your metrics into one methods.\nUse actions() and metrics(), their will be automatically called by the entrypoint.\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n    \n    actions() {\n      this.io.action('db:clean', (cb) => {\n        clean.db(() => {\n          /**\n           * cb() must be called at the end of the action\n           */\n           cb({ success: true });\n        });\n      })\n    }\n    \n    metrics() {\n      this.myMetric = io.metric('Inline');\n    }\n}\n\nnew MyEntrypoint()\n```\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\n## Publishing\n\nJust run :\n```bash\n$ npm publish\n```\n\nAnd for beta\n```bash\n$ npm publish --tag beta\n```\n\n\n## License\n\nMIT\n","readmeFilename":"README.md","gitHead":"012c5868c0f47ce54052c05ffbfdbc5022c53237","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.1.0-beta5","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-BOcaAKebUF2vrPcd4tVOCHnb3yX6mGT87jakgLOWt31oY+AA1A02Mbc26zkiGqjigf1vU8FEmBCrbkldfmCmiQ==","shasum":"d71391c3645395b522fb633c583536f4f72d3388","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.1.0-beta5.tgz","fileCount":106,"unpackedSize":488492,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbUH2BCRA9TVsSAnZWagAASMgP/irTmmjPRP3eIEievvky\nrgdYrYcnQOsqBWPcry7tn/XwqABul5yVbehDLYrctiNEYqBcOCZMque0Jk3U\nkDI1bLXC7RYFY+2aE7EhIA9FRa8WNYFt9ib7br737QmlJ3Uo5YrQHnK1dzyR\nntkQdbM1ZKPyZNJ4F4H9uIKG7kvKCZyP027RiHr/RtdhBO4GQypC2EX6VFAX\ncbj6KYdC5bbIzqyssn02wfPswyL1+4ne9i6g2IHmBXl65N69EgAHnkUClGaN\nU5zy+nbdctgXMoD4gVg+msMgXt0CwU20YRa3yecm5rDxPP0STOae4zJJb8Dr\ngjuGEuSOHyyBf9FjRpb3aJQQka1Z/9O2iWTUKsUjleRZTwXyW0JajjRi7gIm\nNBNiKWryYaDYgwZxuX0UJIUO2YKLqJ9z4sTqfrJuJzC4uFLQEQm4WcxSJFOu\nC+IwkQftHKZ3yX5/G6a7ppcYb9r/3K/nVl0aIJUnOh/eIdKfJ4g/k9BsPt2A\niaADfE3iFRQ1eSGLVeneIugI/3MH1xZG451tPUjW0q8XWhVf4WGEdRN7DRVS\nom6c+JA458FOI1KvkzMbJb4wd4toEUwKhFNGkd2N7Iw2/GItgnhgA3/eAPUf\nphu7xyFkkBeGV2Xbr71Y+9n0SZMlg9nSI5PE1v/Cftwk0K+Ci6XRS6hs5qRw\n51rk\r\n=q9Y0\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.1.0-beta5_1532001665715_0.7647795148400769"},"_hasShrinkwrap":false},"2.1.0":{"name":"@pm2/io","version":"2.1.0","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"1.0.1","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3","vxx":"1.2.2"},"gitHead":"1f96795a5b575adea4bf1cdf6d4944c27e9e5ba0","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.1.0","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-Ij9kIiA+PB98jEAFH+8NZmMDJOjN2eqo6x4ZVDylwNrwj4h0gTb6gXtEaB0JJTn3wCDkFMfU+swwHIe6RWG9WQ==","shasum":"30d9dab1db94d7d8dd07c72ec0a0b6869de2df07","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.1.0.tgz","fileCount":106,"unpackedSize":489194,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbUKdxCRA9TVsSAnZWagAAJPoP/2oOhzm0DPQWtpS3nTHh\nL7leMWLbHZjsJ5EErpo5uDUU/wUFA5vDo4RteQo7p/uQOYTAFNyR0HJlq+ha\nTw7bcyLtH7Yfd4buLbw7Vq+J9mosrQDx3IB1tMR/zAGSl9w1rvZ6pzIAPBFy\noyZOue7D4fYjDjUcE9JkyjiPVhGGj+Y0nRMBG5K0bxbUnWmkwNcZACXWkjMh\npucrUUAALyFdcNQZBmvKonIXwh+8U2VEYY0thSwaRFV50NEaWY87fTYe0vPu\nXgF7bAMpUkQo3E/LagalPMUYUYJ0JcSsENKu1p/x6H6nGzQJIP6NboqXj2Sf\nuhyVR9VybUzXLC6hlW6zDw/wUrOdCCqerHvR/HnmJPyWCFs3o8C7v6i0JdeS\nU4AfSIFjl+o9NNLdNMy1HlOwNjoKk3rAjG5SKwnq8e+CXJ1hu58Axftckm1t\nXrQq78BcLzOOgRLdA1GBXMYTJQGjU81FfvjouXHX3H7nTmsxd6CH/Lg7Dq9m\nM2zSVuuj5QBykp2XUyozjyqH8X6Cj2TTRNtBIIXAdbrus/hedAqaW+IIa9B3\nKHka/hIMuXm4ompdJirmc+YOAGqIJgLjLv97JOUAylqJk7BOecCxOLcRDRzI\n/pwNtDzs8oAZKfvlOnNMtZQrRJxusQ0YE899XW/GIRFzHo1Evw22P0mRkjyC\nHLuK\r\n=8/5z\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.1.0_1532012400893_0.5588421670866719"},"_hasShrinkwrap":false},"2.1.1":{"name":"@pm2/io","version":"2.1.1","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"1.0.1","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3","vxx":"1.2.2"},"gitHead":"e0f3dd00899244294fde3f6d7c95987384210a03","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.1.1","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-6Gdnayvsx7B/CeGOu9IbQNMbOCpGPEexJhnNH3O0/R5MaWvFnGtbcM/guI92BQWImMw+6uXnRDAxA7//utS4kQ==","shasum":"c367d72208ed6176df092f9933da699326061f86","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.1.1.tgz","fileCount":106,"unpackedSize":484490,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbVZaaCRA9TVsSAnZWagAAZt0P/3ZtaqD4flNvqR2gLH3i\npbEKD3qyvV+Hy1RHrgG2ZRdKefBimeoQvwT5rLqQGlU4aHQCwrT3HGRuRQM1\nUUNBTC2V7jbg9BOy2ZfcmS9OHwO0zz/V3Twkaz1/IBm/5+woZWT2JUc8yiRC\n4dQcVyn59H7+zYRrJGRzpxyar8O20/E7hqvk48Hr+OlqWox8OzwqM9Hnc06Z\n2nDTbii5KTkleYmuQJG0J/2FxaL9O4ypX26+/pLU1NZe/Aaf4n2Xi8ACfysO\nC8ZLlkH41iWd2F4dNCPqSxqUNhJIWgnZarWyepQHjyboNR+BkD4NhUIylTxt\ninBODcUL0C/bgLVwiEjsMYj9/QqTAK4eUexAQonTkUy8d+1p9AJjJKk0e6DO\nhZPUig1za1BLvprFCavjYuuul2fVl2khW7sPlRyNcy98Uf5nFM9h/tfpk2rC\nFObSKn1EdHi67ZgsQQdDKnML3uZI5+qEdqdFKQKOU4PPERiE8LJHEk3J1mMA\na0nNf+rMi2GrEvc3zZ9h3vn8gAElxaGq0Bhuepvd37JqwRpTJHqXO1thFc3B\nvBEyDsRuFAUYDpCHuog6HraeTWm5zleMYru883Wai801JheZGw5ZOL0SlBTD\n3RHn3927q/JluvRViYqZ1GJ53KyYH6632W5bIVeioTlLf4rzSl0cbL7LR0s8\nqFdm\r\n=VWdi\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.1.1_1532335761390_0.2269802507593246"},"_hasShrinkwrap":false},"2.1.2":{"name":"@pm2/io","version":"2.1.2","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"1.0.1","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3","vxx":"1.2.2"},"gitHead":"b06300a0df5223768f9b67bf8053d341223ae8fa","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.1.2","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-JFtGI0gGf8JWNozfY7miPebQEJU2cvrFD/6l/J2H1oQB4IHNoZW2VRUfqZ5FMiXhj8RVgqbCsr+FyEZRFvgbDw==","shasum":"bdda230f9060ed05079fc8230c48d526cd6add7d","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.1.2.tgz","fileCount":106,"unpackedSize":485907,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbWDh3CRA9TVsSAnZWagAAu+oP/0FxEfsfDXX5m7Ze/q3w\nkFHy3KWWXcrlsIihGPy6WmYfmT8IlWWIirL9hVHPsUvd2mn5LHLyvU64ryr/\ndq7t9niXHHBOR0v6iksOmGbQWPUaBsNGStKcuesJ+gkEaPFApocWUOo+KvSr\njd02zFXA3VciEMYxSNoLnC70wFiTs8oR0w8Z6ktuGK/ynwrNeTyApPSNwoer\nQBG9hCnjNJS248t6XwNT7q5+wcChQ8t+mXo5h0PGYogQRYPFAR6uVVy49UA1\n5N9+IQFLxcLyLRrsMF7EVXx+udvr3evx31jfRQdxb+mYbrpzCSjzTefYwIOs\nywO++geb5tEz/+PfYk3AZWa+7kjJeGwtuDuBYjF+l/BFgxzkkBvri/tp2jtQ\nAHlDaaA2GDG61B4H1vafV1p7WsdhR11KfBaYlSBuQaTZJwOoZGKus6EUa518\nT7b41I8Pv66edKB5f5rqzLPCvp0Z3Z5q7c8WSY80fNYgFGvvZWpRqCVigrHq\nwJbZ26x6O1290rh2Wya21KYXZtuLuU9BpOckXfCQ8byK/xwNn0LpzdnD66D1\nh9scDE5qEINau5w9A8EFMN2ayNb3oefGj4EhoJzf8LfnjDKs3qfdPxwjoWso\n8YJLIqw1juSz3eGSaCtBr83+2YWCR8gsffYd/sK1KF2JqC3Uf1dQmtazDWrx\nvTs5\r\n=I/qs\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.1.2_1532508279590_0.10592004666338539"},"_hasShrinkwrap":false},"2.1.3":{"name":"@pm2/io","version":"2.1.3","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"1.0.1","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3","vxx":"1.2.2"},"gitHead":"45a94fadfb00e2e664ac15cb1442f16cdd462a32","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.1.3","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-+uNBNvPyGg54qgg9ohcR3qeDc0JnnsfSNdeJoDBk7+/GZzgnMxoUyoi8TV88a+sgJAs3b6cj4GIdv8ClT+V3oA==","shasum":"1e93ff44d26c0da76e3f0ce749852f49442862eb","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.1.3.tgz","fileCount":106,"unpackedSize":485791,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbWe/+CRA9TVsSAnZWagAA6UQP/RR5Nxvdyw2wBPA8Bxz7\nC/rYPO7PxFYtoezIPrAdaT5XcXdmCI1w8ZDuZkF7yqDw+HuwVfd5DbNoEmXO\nOQY9ETTTDIxKyXFT1P0FJTLmJPwz+1TOkpT28IF/Ndmn8MFTrCWT3HrOzVJT\nmxPI/IOR903DdOOn3c0kjp6yyZ17ZSH6Df4WCP7NiylxvXykZrsaaG7y1KRB\nKxuRkYoSx8Nskt7c44B//MluzdhtCGJIsmiQzPn5pDmm0rUQwdlJQbTIrX+d\n4HY+hMBVcISuRizu+a5Icgua/si0kYF2h+HJgFpNdw3vNWLxgERqcV0ItpJ1\nCCwapAlgTJIUUIG5ZuHZWoTwbM6q572honcNQH2Ylg0Gzu3vu7LRe7gh41/C\nr5KWoquCC9KiU1Nem02fRDn5wldPqbLdCpR6dYfUo6phpbnDctz/I5yyXJs0\n+L/VyF/vBQgI1yd5m2P4vkh1+BcLkDVi0rhLCoi5ykaw8BNiqFe2c6/AOoId\nV3d5wK4pKcJgXI6s6VNsJVC/hkNXBskiJI9s35wMHckEYzDmhMvr454bLZQD\nRd9PFBN2QKwbLfBC1E8irXjK/av/Pf4HMz+YMuzu7YqQ1RFTKLPRJnlxLc0S\nR+F2CwXMtzz6GCdbrezF70zA5/RVTWVCICEhyoCpNemvg5E9ctsJuj5oQM03\nGfy1\r\n=77Yo\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.1.3_1532620798548_0.002015793780659525"},"_hasShrinkwrap":false},"2.2.0":{"name":"@pm2/io","version":"2.2.0","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"1.1.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3","vxx":"1.2.2"},"gitHead":"3844287d496f5d56c2bf3d5de23aa14ae3d633c7","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.2.0","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-WRVKVHBMQ38HmJ82hczwMP/I+IbscoaegrWXgU3GfzDiSUN/ojA8VB/TUtw74yNlYR4VG7dK6DBxQjZXjeSAzg==","shasum":"16f4bcb533ab53006bf4846616cdbbb6e9cdbfcb","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.2.0.tgz","fileCount":108,"unpackedSize":489391,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbZFb8CRA9TVsSAnZWagAAXfkP/2y/3ZqS+sWZRrEym82q\n7OHH/PkC8SD/dbDUFlPdhZXq4GWCp3MUZ4UBSiIvHb0AaKTWMjpFG4Jx+rVo\nt0bcyuBS859UZcgWKg1SnkhMN7eyFGB+CVH1Efd4iLK/SmMj0l+u5iQalvEe\nriQUIbHX9AWRJ0Mhlan7TEmMEtDQxH0RX6cl94xSvJlDl8JjYfEWHJiwk4c6\nOiDUeF8A/kwVcEuIDucNHdaJeuacesRhPBbsyXsO9IjGEeQtJaRxt2A9jEgO\nC2FaUSnfzx0FwC0y3UXjkQPf7aDinDOD8ZwTbZK3CPoeLY/oQQAnpC88mZ0i\nUZIQQinuWRfQWlmUceNGlEorrMkFWAVgj4Fnz9+u+hjJ7LM1RnsfKjPZR2e7\nNJz5pIAVFbxBdbCSvtwvVT4UaBV71HeT35rW1JXxIZ2b5gzu9LOpgFrkTPHC\nUASV6BrzUG+qfKPFjsH6F83IFh96TKOeT6SnsxRtZ9Hw1/uNu/1iGAsFQ4AZ\nXu4Nf3u8B/uJDFwGUaiISnzGfug+Fn4cnM14SorJ40IhNjbD/hkSiF2WF8dO\ncJR+Y45Do2AgcPuDdJKuuiJQ5/ambtD1KgxFSGWpybmjDzEOtIMjxT55LUjt\navd1fG7YySF/3/JopoqApsB5e4bnqHzEYO2dGfQj2bM7HAuZSJE3nhkgHySq\nDHat\r\n=ywTv\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.2.0_1533302524108_0.6194465699443545"},"_hasShrinkwrap":false},"2.3.0":{"name":"@pm2/io","version":"2.3.0","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"^2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"1.1.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3","vxx":"1.2.2"},"gitHead":"aaa5415518baf4954a68c5335a519b40f38da83b","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.3.0","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-YOEGGBc/Bh8PZY6g2D7C1y8dRg5X7/GVNSi9iBhcPsQ+sS5vzF+/ySdk8lLZMjpk8PamkzCkUcVcu4QqNuxIeA==","shasum":"45f2fd828b4eee1942913389b2511ff4f67c8eff","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.3.0.tgz","fileCount":112,"unpackedSize":535608,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbdVwWCRA9TVsSAnZWagAAJHMP/3rNGf2qiXGOWlRdH6Q5\niF1lxNuHkM3L3Ancn7jqLPD7af+EwtOuxc36NuZXSWMFXa9gGA8CL9C13SMo\naCutWhu6zjv1m/FCaaFl7/AwkAHER7OBMVXxFDVPxV83BOEjQ+Hekul1v6x8\nwFL4vXWoE0j/k30nOc0gcN5v0NyIAOSltomXWlZyWNU1Ahe/4r1VslU7Eo6q\nVPhKDtccaBOPrVyNWrJounU97UNKNWvKQDpHYEh3IXei5wJlkm0sCc+fGZGp\nYJpAyFAx8Y9xx5xUbc3FHvU7XXrxod3nrIpmHoXOEZe9Hhs/X49pZIttdZXu\nEKeWCk2tfJo3x/ln78CCDz52Y+J+SzZ23e/oyWeiJX6lbD2xBugPsf42K3hF\nZSsu7Vip8l7/NcAf9linw8Q9jUSix0jGIfvA2mbu6mVWYWIgiL2lMEKfAQts\n0kCzDMmIKldeEuQweSgLwh6Nz30LORxTcxLgjpnyB+11hTsU6xe0WywYnZYv\nNvrEWqEgXD8S3qT84vw4GI109A+ChR8xFnVugpMqOM0cnDu0AJqBpdo3WtxI\nxwqbJ5kFWj9fKnFyQOdnFQ6ehnZxTY/5DdLNgUAfi2CoJsRYCJOEPO/ulx/o\nF0V9o9i7YTkIPrm7k7bpW/XLo9IKHvvPRSw+e5T+yE9vi5N1bevzgGFTLx2b\njDpJ\r\n=fFUR\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.3.0_1534417941290_0.03863640042945704"},"_hasShrinkwrap":false},"2.4.0-beta1":{"name":"@pm2/io","version":"2.4.0-beta1","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","fasttest":"yarn build; yarn copy && mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts ","mono":"mocha test/metrics/eventLoopDelay.spec.ts --require ts-node/register --expose-gc","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"^2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"1.1.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3","vxx":"1.2.2"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 part responsible for gathering the metrics, reporting exceptions, exposing remote actions and every outside interaction with your application.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Report Custom Events (deprecated)**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-custom-events-deprecated)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Entrypoint**](https://github.com/keymetrics/pm2-io-apm/tree/master#entrypoint)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in `pm2 monit` or in the Keymetrics dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n});\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **type**: The type of metric (default 'metric', string)\n- **agg_type**: type of aggregation (default 'avg'; string: )\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **metric**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Passive Mode\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n  value: function() {\n    return Object.keys(users).length;\n  }\n});\n```\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst Realtime_Value = io.metric({\n  name: 'Realtime Value'\n});\n\nRealtime_Value.set(23);\n```\n\n#### Inline Mode\n\nIn inline mode, you can create a probe with a simple string.\n\n```javascript\nconst metric = io.metric('Inline');\n\nmetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst Current_req_processed = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  Current_req_processed.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    Current_req_processed.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from Keymetrics.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    /**\n     * cb() must be called at the end of the action\n     */\n     cb({ success: true });\n  });\n});\n```\n\n### Scoped actions (beta)\n\nScoped Actions are advanced remote actions that can be also triggered from Keymetrics.\n\nTwo arguments are passed to the function, data (optional data sent from Keymetrics) and res that allows to emit log data and to end the scoped action.\n\nExample:\n\n```javascript\nio.scopedAction('long running lsof', (data, res) => {\n  const child = spawn('lsof', []);\n\n  child.stdout.on('data', (chunk) => {\n    chunk.toString().split('\\n').forEach(function(line) {\n      res.send(line); // This send log to Keymetrics to be saved (for tracking)\n    });\n  });\n\n  child.stdout.on('end', (chunk) => {\n    res.end('end'); // This end the scoped action\n  });\n\n  child.on('error', (e) => {\n    res.error(e);  // This report an error to Keymetrics\n  });\n\n});\n```\n\n## Report Caught Exceptions\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'));\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    eventLoopActive: true, // (default: true) Monitor active handles and active requests\n    eventLoopDelay: true,  // (default: true) Get event loop's average delay\n\n    // Network monitoring at the application level\n    network: {\n      traffic: true, // (default: true) Allow application level network monitoring\n      ports: true    // (default: false) Shows which ports your app is listening on\n    },\n\n    // Transaction Tracing system configuration\n    transaction: {\n      http: true,               // (default: true) HTTP routes logging\n      tracing: {                // (default: false) Enable transaction tracing\n        http_latency: 1,        // (default: 200) minimum latency in milliseconds to take into account\n        ignore_routes: ['/foo'] // (default: empty) exclude some routes\n      }\n    },\n\n    deepMetrics: {\n      mongo: true,             // (default: true) Mongo connections monitoring\n      mysql: true,             // (default: true) MySQL connections monitoring\n      mqtt: true,              // (default: true) Mqtt connections monitoring\n      socketio: true,          // (default: true) WebSocket monitoring\n      redis: true,             // (default: true) Redis monitoring\n      http: true,              // (default: true) Http incoming requests monitoring\n      https: true,             // (default: true) Https incoming requests monitoring\n      \"http-outbound\": true,   // (default: true) Http outbound requests monitoring\n      \"https-outbound\": true   // (default: true) Https outbound requests monitoring\n    },\n\n    v8: {\n      new_space: true,                    // (default: true) New objects space size\n      old_space: true,                    // (default: true) Old objects space size\n      map_space: true,                    // (default: true) Map space size\n      code_space: true,                   // (default: true) Executable space size\n      large_object_space: true,           // (default: true) Large objects space size\n      total_physical_size: false,         // (default: false) Physical heap size\n      total_heap_size: true,              // (default: true)  Heap size\n      total_available_size: false,        // (default: false) Total available size for the heap\n      total_heap_size_executable: true,   // (default: true)  Executable heap size\n      used_heap_size: true,               // (default: true)  Used heap size\n      heap_size_limit: true,              // (default: true)  Heap size maximum size\n      malloced_memory: false,             // (default: false) Allocated memory\n      peak_malloced_memory: false,        // (default: false) Peak of allocated memory\n      does_zap_garbage: false,            // (default: false) Zap garbage enable/disable\n      GC: {\n        totalHeapSize: true,              // (default: true)  GC heap size\n        totalHeapExecutableSize: true,    // (default: true)  GC executable heap size\n        usedHeapSize: true,               // (default: true)  GC used heap size\n        heapSizeLimit: false,             // (default: false) GC heap size maximum size\n        totalPhysicalSize: false,         // (default: false) GC heap physical size\n        totalAvailableSize: false,        // (default: false) GC available size\n        mallocedMemory: false,            // (default: false) GC allocated memory\n        peakMallocedMemory: false,        // (default: false) GC peak of allocated memory\n        gcType: true,                     // (default: true)  Type of GC (scavenge, mark/sweep/compact, ...)\n        gcPause: true                     // (default: true)  Duration of pause (in milliseconds)\n      }\n    },\n    worker: true, // (default false) : get number of workers and threads\n    fileRequests: true // (default false) : get requests to file system\n  },\n\n  actions: {\n    eventLoopDump: false, // (default: false) Enable event loop dump action\n    profilingCpu: true,   // (default: true) Enable CPU profiling actions\n    profilingHeap: true   // (default: true) Enable Heap profiling actions\n  }\n});\n```\n\n### Custom configuration\n\nIf you want to activate default options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: true\n  }\n})\n```\n\nIf you want to activate all options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: 'all'\n  }\n})\n```\n\nIf you want to customize a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: {\n      new_space: false, // don't take new_space into account\n      ...\n    }\n  }\n})\n```\n**Note** : if you do not disable the default options they will be kept (merged with your configuration)\n\n## Entrypoint\n\n### Usage\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStop (err, cb, code, signal) {\n      console.log(`Application stopped with code ${code} or signal ${signal} !`)\n      cb()\n    }\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n\n      http.listen(process.env.PORT || 3000, function(){\n        console.log('Server express', 'listening on port', http.address().port)\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Configuration\n\nYou can write your own configuration like you do for @pm2/io, just add a conf() method into your entrypoint which returns a json object.\nDetails of configuration can be found in this section : [**Configuration**](#configuration)\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n\n    conf() {\n      return {\n        ...\n      }\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Access @pm2/io features\n\nEntrypoint allow access to an instance of @pm2/io. So you can use all features described above by calling this.io.\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n\n      const counter = this.io.counter('start')\n\n      http.listen(process.env.PORT || 3000, () => {\n        console.log('Server express', 'listening on port', http.address().port)\n        counter.inc()\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Actions et Metrics\n\nYou can group all your actions and all your metrics into one methods.\nUse actions() and metrics(), their will be automatically called by the entrypoint.\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n\n    actions() {\n      this.io.action('db:clean', (cb) => {\n        clean.db(() => {\n          /**\n           * cb() must be called at the end of the action\n           */\n           cb({ success: true });\n        });\n      })\n    }\n\n    metrics() {\n      this.myMetric = io.metric('Inline');\n    }\n}\n\nnew MyEntrypoint()\n```\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Publishing\n\nJust run :\n```bash\n$ npm publish\n```\n\nAnd for beta\n```bash\n$ npm publish --tag beta\n```\n\n\n## License\n\nMIT\n","readmeFilename":"README.md","gitHead":"02d5613d6745c444b6cb819d59094c64b10185cc","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.4.0-beta1","_npmVersion":"6.1.0","_nodeVersion":"10.6.0","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-sTxBNdTIODlySlEv/FV7/zw8zVznHAt1StEp5ahnx/QW1XP4CLQs4oJUb2D1qalmPK2+mnYaantMAR7fgSYkrw==","shasum":"306bb3b8968dfba14222f7a010f1ba84490220e4","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.4.0-beta1.tgz","fileCount":111,"unpackedSize":534709,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbgyEYCRA9TVsSAnZWagAAC4gP/3Et7qQiwE+EU2Bfj623\nfvsc02/heB6grBjxI0ot+EqkNbITKNkJkLFdWT+n3HqOkyOGt8lQLGCYomap\n6YbWv8AO82eM36WJzOxWnjLQyKPDut36G1VCWFIIMda++nGgdyUloP1pVm3m\nv+US5K5SRd/umUpQ1kbl6mGLjFCUx77Nk0GZdZ6Z4IuMWZtNviIlQ0JQdhZw\ny2MrV7jN53MTB8+bCrBsN4BFIq8La7s6zzYNIC5sygxWIDw2i5vN0jaTxxEg\nAhX1pJUWOkYRMCTf9a/OzJyHUqw28t9Yp/seKsU2pO0rGKn/XQAuli2D9yHI\nSG3tuY1z8CpaWnuHRvHfTZ7FsaW1UPCsUDPIN+pk3fq52ZGVoSUVm5B4I1FJ\nMvoAAZmvw7u9qLg5mFlGDsDKElW42yqFoahjkcoRGgGzFNrbWjNPQ9UDZpQr\n96phcX/zjjHYmgi5mijdCHadagi8yqLBPGjptd2UFM0YdtC8ICWDcAjwJkYx\nzaetTBoss5RWDRA0g5oUsQieVNByPdTjHgpoM2C3WYQG0Cwnq9vo5S/tflEV\nGpN0vE0JPNLd/oyIH2nlE4x+OWlDYtqYMQZHfenHXX5MqRjvz2p4/4lN5+9a\nRFgg4qR13q8FII+2ZAtxKYop3AEaODIue52CtxYJD8hoUDT6lZ0IgCMZJYmA\nf/eu\r\n=LU9M\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.4.0-beta1_1535320343511_0.811402536660685"},"_hasShrinkwrap":false},"2.4.0-beta2":{"name":"@pm2/io","version":"2.4.0-beta2","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","fasttest":"yarn build; yarn copy && mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts ","mono":"mocha test/metrics/eventLoopDelay.spec.ts --require ts-node/register --expose-gc","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"^2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"1.1.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3","vxx":"1.2.2"},"gitHead":"02d5613d6745c444b6cb819d59094c64b10185cc","readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 part responsible for gathering the metrics, reporting exceptions, exposing remote actions and every outside interaction with your application.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Report Custom Events (deprecated)**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-custom-events-deprecated)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Entrypoint**](https://github.com/keymetrics/pm2-io-apm/tree/master#entrypoint)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in `pm2 monit` or in the Keymetrics dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n});\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **type**: The type of metric (default 'metric', string)\n- **agg_type**: type of aggregation (default 'avg'; string: )\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **metric**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Passive Mode\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n  value: function() {\n    return Object.keys(users).length;\n  }\n});\n```\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst Realtime_Value = io.metric({\n  name: 'Realtime Value'\n});\n\nRealtime_Value.set(23);\n```\n\n#### Inline Mode\n\nIn inline mode, you can create a probe with a simple string.\n\n```javascript\nconst metric = io.metric('Inline');\n\nmetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst Current_req_processed = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  Current_req_processed.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    Current_req_processed.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from Keymetrics.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    /**\n     * cb() must be called at the end of the action\n     */\n     cb({ success: true });\n  });\n});\n```\n\n### Scoped actions (beta)\n\nScoped Actions are advanced remote actions that can be also triggered from Keymetrics.\n\nTwo arguments are passed to the function, data (optional data sent from Keymetrics) and res that allows to emit log data and to end the scoped action.\n\nExample:\n\n```javascript\nio.scopedAction('long running lsof', (data, res) => {\n  const child = spawn('lsof', []);\n\n  child.stdout.on('data', (chunk) => {\n    chunk.toString().split('\\n').forEach(function(line) {\n      res.send(line); // This send log to Keymetrics to be saved (for tracking)\n    });\n  });\n\n  child.stdout.on('end', (chunk) => {\n    res.end('end'); // This end the scoped action\n  });\n\n  child.on('error', (e) => {\n    res.error(e);  // This report an error to Keymetrics\n  });\n\n});\n```\n\n## Report Caught Exceptions\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'));\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    eventLoopActive: true, // (default: true) Monitor active handles and active requests\n    eventLoopDelay: true,  // (default: true) Get event loop's average delay\n\n    // Network monitoring at the application level\n    network: {\n      traffic: true, // (default: true) Allow application level network monitoring\n      ports: true    // (default: false) Shows which ports your app is listening on\n    },\n\n    // Transaction Tracing system configuration\n    transaction: {\n      http: true,               // (default: true) HTTP routes logging\n      tracing: {                // (default: false) Enable transaction tracing\n        http_latency: 1,        // (default: 200) minimum latency in milliseconds to take into account\n        ignore_routes: ['/foo'] // (default: empty) exclude some routes\n      }\n    },\n\n    deepMetrics: {\n      mongo: true,             // (default: true) Mongo connections monitoring\n      mysql: true,             // (default: true) MySQL connections monitoring\n      mqtt: true,              // (default: true) Mqtt connections monitoring\n      socketio: true,          // (default: true) WebSocket monitoring\n      redis: true,             // (default: true) Redis monitoring\n      http: true,              // (default: true) Http incoming requests monitoring\n      https: true,             // (default: true) Https incoming requests monitoring\n      \"http-outbound\": true,   // (default: true) Http outbound requests monitoring\n      \"https-outbound\": true   // (default: true) Https outbound requests monitoring\n    },\n\n    v8: {\n      new_space: true,                    // (default: true) New objects space size\n      old_space: true,                    // (default: true) Old objects space size\n      map_space: true,                    // (default: true) Map space size\n      code_space: true,                   // (default: true) Executable space size\n      large_object_space: true,           // (default: true) Large objects space size\n      total_physical_size: false,         // (default: false) Physical heap size\n      total_heap_size: true,              // (default: true)  Heap size\n      total_available_size: false,        // (default: false) Total available size for the heap\n      total_heap_size_executable: true,   // (default: true)  Executable heap size\n      used_heap_size: true,               // (default: true)  Used heap size\n      heap_size_limit: true,              // (default: true)  Heap size maximum size\n      malloced_memory: false,             // (default: false) Allocated memory\n      peak_malloced_memory: false,        // (default: false) Peak of allocated memory\n      does_zap_garbage: false,            // (default: false) Zap garbage enable/disable\n      GC: {\n        totalHeapSize: true,              // (default: true)  GC heap size\n        totalHeapExecutableSize: true,    // (default: true)  GC executable heap size\n        usedHeapSize: true,               // (default: true)  GC used heap size\n        heapSizeLimit: false,             // (default: false) GC heap size maximum size\n        totalPhysicalSize: false,         // (default: false) GC heap physical size\n        totalAvailableSize: false,        // (default: false) GC available size\n        mallocedMemory: false,            // (default: false) GC allocated memory\n        peakMallocedMemory: false,        // (default: false) GC peak of allocated memory\n        gcType: true,                     // (default: true)  Type of GC (scavenge, mark/sweep/compact, ...)\n        gcPause: true                     // (default: true)  Duration of pause (in milliseconds)\n      }\n    },\n    worker: true, // (default false) : get number of workers and threads\n    fileRequests: true // (default false) : get requests to file system\n  },\n\n  actions: {\n    eventLoopDump: false, // (default: false) Enable event loop dump action\n    profilingCpu: true,   // (default: true) Enable CPU profiling actions\n    profilingHeap: true   // (default: true) Enable Heap profiling actions\n  }\n});\n```\n\n### Custom configuration\n\nIf you want to activate default options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: true\n  }\n})\n```\n\nIf you want to activate all options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: 'all'\n  }\n})\n```\n\nIf you want to customize a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: {\n      new_space: false, // don't take new_space into account\n      ...\n    }\n  }\n})\n```\n**Note** : if you do not disable the default options they will be kept (merged with your configuration)\n\n## Entrypoint\n\n### Usage\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStop (err, cb, code, signal) {\n      console.log(`Application stopped with code ${code} or signal ${signal} !`)\n      cb()\n    }\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n\n      http.listen(process.env.PORT || 3000, function(){\n        console.log('Server express', 'listening on port', http.address().port)\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Configuration\n\nYou can write your own configuration like you do for @pm2/io, just add a conf() method into your entrypoint which returns a json object.\nDetails of configuration can be found in this section : [**Configuration**](#configuration)\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n\n    conf() {\n      return {\n        ...\n      }\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Access @pm2/io features\n\nEntrypoint allow access to an instance of @pm2/io. So you can use all features described above by calling this.io.\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n\n      const counter = this.io.counter('start')\n\n      http.listen(process.env.PORT || 3000, () => {\n        console.log('Server express', 'listening on port', http.address().port)\n        counter.inc()\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Actions et Metrics\n\nYou can group all your actions and all your metrics into one methods.\nUse actions() and metrics(), their will be automatically called by the entrypoint.\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n\n    actions() {\n      this.io.action('db:clean', (cb) => {\n        clean.db(() => {\n          /**\n           * cb() must be called at the end of the action\n           */\n           cb({ success: true });\n        });\n      })\n    }\n\n    metrics() {\n      this.myMetric = io.metric('Inline');\n    }\n}\n\nnew MyEntrypoint()\n```\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Publishing\n\nJust run :\n```bash\n$ npm publish\n```\n\nAnd for beta\n```bash\n$ npm publish --tag beta\n```\n\n\n## License\n\nMIT\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.4.0-beta2","_npmVersion":"6.1.0","_nodeVersion":"10.6.0","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-ZLqL8d0H0YN6kX2L8KHyosp/5BKrz5wWxdsYADj45x3Had0dFhScVSOBt0DAbQoyV2FenTr+qDfNevX0jR0dcw==","shasum":"59f62495c3ca8a2803270068ce7e51ad8aeceadb","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.4.0-beta2.tgz","fileCount":111,"unpackedSize":531194,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbgzRmCRA9TVsSAnZWagAA0xoP/103BNjjVcZvku8F84zL\nRrkSDOkMO2pk0I3Pt7xa17pRbM1Fn34rqhtBEQYw1Sk1q504K9LtM5oYfZy1\nlSW7u9DxCR9At9dbQO+IFTgUe/jj4/w2J6SpmYXX1mx/iPr+ssglVzN8ZwC+\nQJ7HXZOH4tyfu7OWt32h/nQ+J8BCXWo/Ig7r6yupmuWX356dth2eNuKMyTbk\n1UUG1euY3YqibJZ473d+lT3XmeLduu7JZas9SAOdXCLRiXhN0LwoqXhqu3NG\nPB/TIgZegWAvL9j8mbmRB33U9MHUxdwMR0ZHRS+Iw9eNJ+Jvxf6PqqE47I6i\nujfy/KulIDGM0Bp3cGnTiBOcVhGEkzfHfkAHzPCelV7o6kXbgul4hSvsKh36\na0HAHY8UncluAtggVtKXlcdY/xCyl4CaWHzUC9V7GfypPeAufq28FlpbiKCs\nFyySsFocwf4+1X0lSfRkknjkMFtBowp3mclTpHcEOlLqDA5rurYlJu7Q7Bc5\njQlKTz3E0EgEd8pmfyKjWZbbP7lvtBnbFMAGx5ozc6G/HRLMA6K1pdn28Aag\ntngDgZB150zrLDtdcsI4ZtTNXvUNzaMKIwW4fqdIC32aHCWUdnyGYhdaG+GH\nt/lwje+BrI3aLLToMJC9B98AehHAC47MV8t/w/B4YhFjxU6ZqecXhUcXvkun\nye6V\r\n=584b\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.4.0-beta2_1535325285765_0.15575433346765855"},"_hasShrinkwrap":false},"2.3.1":{"name":"@pm2/io","version":"2.3.1","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"^2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"1.1.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3","vxx":"1.2.2"},"gitHead":"73250d80bbfba788afa93339dc867c03fc3f9cde","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.3.1","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-skHcSLUfWeAJ2IFT1qOgdJIiNmsC1lDpcak6igKFyl/Kij7ifE7Nwc/2mp29g+M63C04pw+TJ2AqJFmrnPFl8Q==","shasum":"9e70f479afa6c794ebd513115bcd344b969905b9","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.3.1.tgz","fileCount":112,"unpackedSize":532926,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbhBSVCRA9TVsSAnZWagAAUQ4QAIrKrracgBlVLyWXgkPO\n9VpvcrlLcmSVJTUBPVtfyGyKWa9PmZkLbXLsX9+vBczjWKrfPWXPxKUhBNAx\nXHYki0/7vgzBoZG2KoEghMIBxMhg3oges5tvKiZGHTmWoSyVWIrDnej6G41O\nDje1SSRI30YNzASbUNIlJxbch+3Yp0vk/kvbKt9IqXpO384TVJH1MdQo9mY4\npivzDyRz6RTRKWd8SGTlmL+zdPT4M/+EDWa835awAXlgSXHOR+kQ1CUj3IHq\nr5vNSsJpWADoJSGgXhxqapNowIngJ44dS8pveHr/wmxQnLNbSqj3bJ6oSzzB\nBaE2SPWx03uQ21Ztfp9W0XbpCWMZ5aIwfva0Z/75ky4juO+mIhrE1ki78VNE\nz/HEIaTvMnMXka3UOLVpPicpOgPb1bIUIbj9MaP/eHQSGuzj2IRMnxtbphiP\nMKnPcceuTdMY81sloVEyAeYlYluHtYKRhHuWpkSqSqNwaK2sgKWU16Iq6tuB\nyAx8CQpae4pMaOKcXVpw8xTVGeAe/kVOYci1KxJpu1W/EGrxm9ltAl6ZZBpO\ngbanIoboLrOqX+N9VGpVUK+1Sq5+ycCZMNRzArK0I0FexIef8KNj8Rd7aRHx\nuncYAx7uO6PA8AZOKJXA3xGFhR61XslSaJsA6WOPoqXGTxif3TlzIXqShV6T\nwD8S\r\n=HShJ\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.3.1_1535382676555_0.5095257431958067"},"_hasShrinkwrap":false},"2.3.2":{"name":"@pm2/io","version":"2.3.2","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"^2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"1.1.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3","vxx":"1.2.2"},"gitHead":"29ba0c1d7ab5c1bb5fd7ed890c9f1e3dcf533acd","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.3.2","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-krMZIgrIFXEp9Ry9LlVS089+o+4Msk0x46I1la6AMpgrC/bHx2+7ZxM6POZeqTkvs3M/BpAYoIqPZ4qSDIFz6A==","shasum":"5cffb7d33d9d6ec7360b14b9d31330934e637486","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.3.2.tgz","fileCount":112,"unpackedSize":533615,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbhmjhCRA9TVsSAnZWagAAJUUP/AlFs2g+BNkJ6zXoweMA\nyO9y6KCBjrLtnWXZEXHS1nxNZ0OMIwOFFP5ezwyPgBTTxa8PipOXiRx8YRjc\nQqKYOq83XEHxUpb3ObyL00Xrce12TMQxuAU1ZvNzBHacsGH8QOSJbe6gainL\nNi/5jgduak3MOhd7D3Xzu0qxzlTuQclnxxGOs9dfU4LZviBxlW8gBNfxnJeB\n5euYneF2czibRFGUAuvtYsg+Ri7zQusWm5o6Hi96hhcJ/y1PY7jkIV0NXzIN\nqBkCgQkt4Lg9W/dGmiKBiRxz/Bd2RM1QF0dtDaAC98NINaghvFdpZaupyLYf\njY03vqQR2FvYfnw/jwc1KR4orlqYQpHrWl3Ve29R4bWzYlo6Z8IdxjXA52As\nVidzdPXtC2oFkYqRFV3WO81O9MWN0N7aoQdtLRuusJaX9sT4T5ntxRklYb30\nT6CO+lDqTYjBeFQBXdvQzw+zAOePsvDPQytgVgdkW0xTAHDAFrUnSY1znvld\nj4Isv0CvSMXULxkepnkBLnbpoU7yEuZQ25OxjFWgbRtw5JIgBrKU7CAz7ISu\nhkzrIDOyQ7NGHumT/unH2n+zH1oOplvGedHDKLyaOFmccyzAVZvNuF/umtJC\nzUFIMBjPrkQVwU41P2CDA/r2tq/vqKFMRSW0FZwT2hVmKuE+dsXWHBpEp29S\nqGbR\r\n=rrBU\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.3.2_1535535328468_0.2700388832646794"},"_hasShrinkwrap":false},"2.3.3":{"name":"@pm2/io","version":"2.3.3","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"^2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"^1.2.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3","vxx":"1.2.2"},"gitHead":"52650483a8fcc1dde35ada116a1b95b5657a2440","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.3.3","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-QBQtfLh7xU/gIFdzH6iuG/lAegVXxgpgB+ocGydF+69ZFJ1Hw4RHsysiz7Ley8b/D4rpzPcOGxQxzEnfeG/0Jg==","shasum":"39f13f8da94a79f11e3e5ea294965ec4cbbb6d83","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.3.3.tgz","fileCount":112,"unpackedSize":533826,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbiUYCCRA9TVsSAnZWagAASdAP/jt6MCOO/EaelaQR6v71\nSFk9Fvt/amw5puJOAgNfLZY56CjbgtIXuMpxR6+ix0vPKNMeWB9lcVaKeSCw\n2Om6DxGSzJiFuXrrYawXygxcCk/y5HStx/eo9QxgoNatTuee0zmIdRVUjewz\npePLEOck2qd89u/kXINKan6g2qX4Kx9jCD/BzL/zjhWZrFfuupJ+FPGaYckq\n/SoPQoBDX6Ekqz9AJOEH5WVBVUAu0GvwrEwmwNngJ8m4TP7cgAgd9p74to9X\n0BJb8y7a756RhYrLIoNn2yJJu7X9icdIXs25LQwhdWkPe6Xftm02HhWbldfj\na3eYCqIIX5QuyYFG92I13zg4bR8ArMq/zsSGTpzGg29JplxqHp+gbGeACHCs\n4Vj0hHyhuL7zXoJIG1kPEZgv8ackTAf3R7rR8y90f9j6WC/hUczVDhW1ZV/5\nzTZE6vXEM02BUsEPscMP53ZnXBnrng/2HScQErVVdgx4JP3kzFdjQdrl37au\nIF/jzBakfh0juXdzoGXAxso4/3SLXT/jpI6gVtpITI5J8MHczKnwtNwIHJfi\nrkeu6oAmHKza/CUC/CIel92WIdcA9tfXLl7xpfXKrSqh/zhBw1Rz4C/5fSGi\nrDswm9JYHAu1t1QxOnTzVSQn+F2YSEuQcCiPz2F2txc6wYgjzK3gmGk6CP3q\n+ouf\r\n=w39K\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.3.3_1535723009427_0.9150134842492645"},"_hasShrinkwrap":false},"2.3.4":{"name":"@pm2/io","version":"2.3.4","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"^2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"^1.2.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3","vxx":"1.2.2"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 part responsible for gathering the metrics, reporting exceptions, exposing remote actions and every outside interaction with your application.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Report Custom Events (deprecated)**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-custom-events-deprecated)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Entrypoint**](https://github.com/keymetrics/pm2-io-apm/tree/master#entrypoint)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in `pm2 monit` or in the Keymetrics dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n});\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **type**: The type of metric (default 'metric', string)\n- **agg_type**: type of aggregation (default 'avg'; string: )\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **metric**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Passive Mode\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n  value: function() {\n    return Object.keys(users).length;\n  }\n});\n```\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst Realtime_Value = io.metric({\n  name: 'Realtime Value'\n});\n\nRealtime_Value.set(23);\n```\n\n#### Inline Mode\n\nIn inline mode, you can create a probe with a simple string.\n\n```javascript\nconst metric = io.metric('Inline');\n\nmetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst Current_req_processed = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  Current_req_processed.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    Current_req_processed.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from Keymetrics.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    /**\n     * cb() must be called at the end of the action\n     */\n     cb({ success: true });\n  });\n});\n```\n\n### Scoped actions (beta)\n\nScoped Actions are advanced remote actions that can be also triggered from Keymetrics.\n\nTwo arguments are passed to the function, data (optional data sent from Keymetrics) and res that allows to emit log data and to end the scoped action.\n\nExample:\n\n```javascript\nio.scopedAction('long running lsof', (data, res) => {\n  const child = spawn('lsof', []);\n\n  child.stdout.on('data', (chunk) => {\n    chunk.toString().split('\\n').forEach(function(line) {\n      res.send(line); // This send log to Keymetrics to be saved (for tracking)\n    });\n  });\n\n  child.stdout.on('end', (chunk) => {\n    res.end('end'); // This end the scoped action\n  });\n\n  child.on('error', (e) => {\n    res.error(e);  // This report an error to Keymetrics\n  });\n\n});\n```\n\n## Report Caught Exceptions\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'));\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    eventLoopActive: true, // (default: true) Monitor active handles and active requests\n    eventLoopDelay: true,  // (default: true) Get event loop's average delay\n\n    // Network monitoring at the application level\n    network: {\n      traffic: true, // (default: true) Allow application level network monitoring\n      ports: true    // (default: false) Shows which ports your app is listening on\n    },\n\n    // Transaction Tracing system configuration\n    transaction: {\n      http: true,               // (default: true) HTTP routes logging\n      tracing: {                // (default: false) Enable transaction tracing\n        http_latency: 1,        // (default: 200) minimum latency in milliseconds to take into account\n        ignore_routes: ['/foo'] // (default: empty) exclude some routes\n      }\n    },\n\n    deepMetrics: {\n      mongo: true,             // (default: true) Mongo connections monitoring\n      mysql: true,             // (default: true) MySQL connections monitoring\n      mqtt: true,              // (default: true) Mqtt connections monitoring\n      socketio: true,          // (default: true) WebSocket monitoring\n      redis: true,             // (default: true) Redis monitoring\n      http: true,              // (default: true) Http incoming requests monitoring\n      https: true,             // (default: true) Https incoming requests monitoring\n      \"http-outbound\": true,   // (default: true) Http outbound requests monitoring\n      \"https-outbound\": true   // (default: true) Https outbound requests monitoring\n    },\n\n    v8: {\n      new_space: true,                    // (default: true) New objects space size\n      old_space: true,                    // (default: true) Old objects space size\n      map_space: true,                    // (default: true) Map space size\n      code_space: true,                   // (default: true) Executable space size\n      large_object_space: true,           // (default: true) Large objects space size\n      total_physical_size: false,         // (default: false) Physical heap size\n      total_heap_size: true,              // (default: true)  Heap size\n      total_available_size: false,        // (default: false) Total available size for the heap\n      total_heap_size_executable: true,   // (default: true)  Executable heap size\n      used_heap_size: true,               // (default: true)  Used heap size\n      heap_size_limit: true,              // (default: true)  Heap size maximum size\n      malloced_memory: false,             // (default: false) Allocated memory\n      peak_malloced_memory: false,        // (default: false) Peak of allocated memory\n      does_zap_garbage: false,            // (default: false) Zap garbage enable/disable\n      GC: {\n        totalHeapSize: true,              // (default: true)  GC heap size\n        totalHeapExecutableSize: true,    // (default: true)  GC executable heap size\n        usedHeapSize: true,               // (default: true)  GC used heap size\n        heapSizeLimit: false,             // (default: false) GC heap size maximum size\n        totalPhysicalSize: false,         // (default: false) GC heap physical size\n        totalAvailableSize: false,        // (default: false) GC available size\n        mallocedMemory: false,            // (default: false) GC allocated memory\n        peakMallocedMemory: false,        // (default: false) GC peak of allocated memory\n        gcType: true,                     // (default: true)  Type of GC (scavenge, mark/sweep/compact, ...)\n        gcPause: true                     // (default: true)  Duration of pause (in milliseconds)\n      }\n    },\n    worker: true, // (default false) : get number of workers and threads\n    fileRequests: true // (default false) : get requests to file system\n  },\n\n  actions: {\n    eventLoopDump: false, // (default: false) Enable event loop dump action\n    profilingCpu: true,   // (default: true) Enable CPU profiling actions\n    profilingHeap: true   // (default: true) Enable Heap profiling actions\n  }\n});\n```\n\n### Custom configuration\n\nIf you want to activate default options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: true\n  }\n})\n```\n\nIf you want to activate all options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: 'all'\n  }\n})\n```\n\nIf you want to customize a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: {\n      new_space: false, // don't take new_space into account\n      ...\n    }\n  }\n})\n```\n**Note** : if you do not disable the default options they will be kept (merged with your configuration)\n\n## Entrypoint\n\n### Usage\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStop (err, cb, code, signal) {\n      console.log(`Application stopped with code ${code} or signal ${signal} !`)\n      cb()\n    }\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n\n      http.listen(process.env.PORT || 3000, function(){\n        console.log('Server express', 'listening on port', http.address().port)\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Configuration\n\nYou can write your own configuration like you do for @pm2/io, just add a conf() method into your entrypoint which returns a json object.\nDetails of configuration can be found in this section : [**Configuration**](#configuration)\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n\n    conf() {\n      return {\n        ...\n      }\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Access @pm2/io features\n\nEntrypoint allow access to an instance of @pm2/io. So you can use all features described above by calling this.io.\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n\n      const counter = this.io.counter('start')\n\n      http.listen(process.env.PORT || 3000, () => {\n        console.log('Server express', 'listening on port', http.address().port)\n        counter.inc()\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Actions et Metrics\n\nYou can group all your actions and all your metrics into one methods.\nUse actions() and metrics(), their will be automatically called by the entrypoint.\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n\n    actions() {\n      this.io.action('db:clean', (cb) => {\n        clean.db(() => {\n          /**\n           * cb() must be called at the end of the action\n           */\n           cb({ success: true });\n        });\n      })\n    }\n\n    metrics() {\n      this.myMetric = io.metric('Inline');\n    }\n}\n\nnew MyEntrypoint()\n```\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Publishing\n\nJust run :\n```bash\n$ npm publish\n```\n\nAnd for beta\n```bash\n$ npm publish --tag beta\n```\n\n\n## License\n\nMIT\n","readmeFilename":"README.md","gitHead":"7f60dd799bce3000d81616394b758717b65a9a4b","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.3.4","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-RoClTZH9cvTuM5ziCbxZP9+Jw41KqtiVcz7x4xQuGoNS/SbqAhAiSVKQC3jwT8c3L17hOXSFgRdxhJH49YTDqg==","shasum":"2423e660e4d53bf254b3555bbf6cdb7893e0f967","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.3.4.tgz","fileCount":116,"unpackedSize":540749,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbjU6rCRA9TVsSAnZWagAArtoP/12oUDxJN45Bgu9VjjLP\nNymwqPOZTEC23Ub6ehbIZwJ1JioIcNdhGAf/4fJkw6406TKLJwQ/CZDba16a\n4cf3FogBSyNrdX4fDoh0BRCtt43F7CzqmSQKab405bhUwSO7EzpZbjxuwPfv\nu142IaTOQTh3Eic5y4bjlny/qcNFA2KazpCzES8RsNA376tjMTFD/xPZ0Bv0\nsliH7SwmdbhiOfDIZLYwwqjnrxD8RJZNHozn+TnQ70U45g07/6/Fnk+tbHnd\nXx27gwqMdFJwrv5eDw9Ue3KeRbZJ4QMhjyuT9kbuGRBngInpw+sOi103DIJl\nN0qGTqoT1QpgMFeokRbLsgcLLiBCBH5JulB5HZ3SiqMVIkh854zifu1Ja1oW\nsulbH0q+IoFt1gcDUtDnmTNh2wYdMfp+enVyx2Cqkud3Tfmi5KeQLK2/Gnsx\nY+11fJsaj1hl2/9oBhUrkIg23jV5JsSDQXphHkpSFXoCqN77V3ImXlOYwVi4\nInbVqcERpKCbQPYDaO8IOn2UTP6cK4w6sWyWgSveq82m8KBH+Jc8fdUFAQlF\n66pvbGe/hE549GPt6/ereNvtMBwwErGnt5bksXpxVHfiUNsgYtZALDeNW48j\nRZK/0kHdlgmamt/aJmF/vVQ30gHnSE2KP0PWovtM6RZGRzkuVLEgerbPMCJ/\nU2eG\r\n=hsgI\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.3.4_1535987370775_0.7442967373398843"},"_hasShrinkwrap":false},"2.3.5":{"name":"@pm2/io","version":"2.3.5","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"^2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"^1.2.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3","vxx":"1.2.2"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 part responsible for gathering the metrics, reporting exceptions, exposing remote actions and every outside interaction with your application.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Report Custom Events (deprecated)**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-custom-events-deprecated)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Entrypoint**](https://github.com/keymetrics/pm2-io-apm/tree/master#entrypoint)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in `pm2 monit` or in the Keymetrics dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n});\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **type**: The type of metric (default 'metric', string)\n- **agg_type**: type of aggregation (default 'avg'; string: )\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **metric**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Passive Mode\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n  value: function() {\n    return Object.keys(users).length;\n  }\n});\n```\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst Realtime_Value = io.metric({\n  name: 'Realtime Value'\n});\n\nRealtime_Value.set(23);\n```\n\n#### Inline Mode\n\nIn inline mode, you can create a probe with a simple string.\n\n```javascript\nconst metric = io.metric('Inline');\n\nmetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst Current_req_processed = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  Current_req_processed.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    Current_req_processed.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from Keymetrics.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    /**\n     * cb() must be called at the end of the action\n     */\n     cb({ success: true });\n  });\n});\n```\n\n### Scoped actions (beta)\n\nScoped Actions are advanced remote actions that can be also triggered from Keymetrics.\n\nTwo arguments are passed to the function, data (optional data sent from Keymetrics) and res that allows to emit log data and to end the scoped action.\n\nExample:\n\n```javascript\nio.scopedAction('long running lsof', (data, res) => {\n  const child = spawn('lsof', []);\n\n  child.stdout.on('data', (chunk) => {\n    chunk.toString().split('\\n').forEach(function(line) {\n      res.send(line); // This send log to Keymetrics to be saved (for tracking)\n    });\n  });\n\n  child.stdout.on('end', (chunk) => {\n    res.end('end'); // This end the scoped action\n  });\n\n  child.on('error', (e) => {\n    res.error(e);  // This report an error to Keymetrics\n  });\n\n});\n```\n\n## Report Caught Exceptions\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'));\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    eventLoopActive: true, // (default: true) Monitor active handles and active requests\n    eventLoopDelay: true,  // (default: true) Get event loop's average delay\n\n    // Network monitoring at the application level\n    network: {\n      traffic: true, // (default: true) Allow application level network monitoring\n      ports: true    // (default: false) Shows which ports your app is listening on\n    },\n\n    // Transaction Tracing system configuration\n    transaction: {\n      http: true,               // (default: true) HTTP routes logging\n      tracing: {                // (default: false) Enable transaction tracing\n        http_latency: 1,        // (default: 200) minimum latency in milliseconds to take into account\n        ignore_routes: ['/foo'] // (default: empty) exclude some routes\n      }\n    },\n\n    deepMetrics: {\n      mongo: true,             // (default: true) Mongo connections monitoring\n      mysql: true,             // (default: true) MySQL connections monitoring\n      mqtt: true,              // (default: true) Mqtt connections monitoring\n      socketio: true,          // (default: true) WebSocket monitoring\n      redis: true,             // (default: true) Redis monitoring\n      http: true,              // (default: true) Http incoming requests monitoring\n      https: true,             // (default: true) Https incoming requests monitoring\n      \"http-outbound\": true,   // (default: true) Http outbound requests monitoring\n      \"https-outbound\": true   // (default: true) Https outbound requests monitoring\n    },\n\n    v8: {\n      new_space: true,                    // (default: true) New objects space size\n      old_space: true,                    // (default: true) Old objects space size\n      map_space: true,                    // (default: true) Map space size\n      code_space: true,                   // (default: true) Executable space size\n      large_object_space: true,           // (default: true) Large objects space size\n      total_physical_size: false,         // (default: false) Physical heap size\n      total_heap_size: true,              // (default: true)  Heap size\n      total_available_size: false,        // (default: false) Total available size for the heap\n      total_heap_size_executable: true,   // (default: true)  Executable heap size\n      used_heap_size: true,               // (default: true)  Used heap size\n      heap_size_limit: true,              // (default: true)  Heap size maximum size\n      malloced_memory: false,             // (default: false) Allocated memory\n      peak_malloced_memory: false,        // (default: false) Peak of allocated memory\n      does_zap_garbage: false,            // (default: false) Zap garbage enable/disable\n      GC: {\n        totalHeapSize: true,              // (default: true)  GC heap size\n        totalHeapExecutableSize: true,    // (default: true)  GC executable heap size\n        usedHeapSize: true,               // (default: true)  GC used heap size\n        heapSizeLimit: false,             // (default: false) GC heap size maximum size\n        totalPhysicalSize: false,         // (default: false) GC heap physical size\n        totalAvailableSize: false,        // (default: false) GC available size\n        mallocedMemory: false,            // (default: false) GC allocated memory\n        peakMallocedMemory: false,        // (default: false) GC peak of allocated memory\n        gcType: true,                     // (default: true)  Type of GC (scavenge, mark/sweep/compact, ...)\n        gcPause: true                     // (default: true)  Duration of pause (in milliseconds)\n      }\n    },\n    worker: true, // (default false) : get number of workers and threads\n    fileRequests: true // (default false) : get requests to file system\n  },\n\n  actions: {\n    eventLoopDump: false, // (default: false) Enable event loop dump action\n    profilingCpu: true,   // (default: true) Enable CPU profiling actions\n    profilingHeap: true   // (default: true) Enable Heap profiling actions\n  }\n});\n```\n\n### Custom configuration\n\nIf you want to activate default options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: true\n  }\n})\n```\n\nIf you want to activate all options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: 'all'\n  }\n})\n```\n\nIf you want to customize a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: {\n      new_space: false, // don't take new_space into account\n      ...\n    }\n  }\n})\n```\n**Note** : if you do not disable the default options they will be kept (merged with your configuration)\n\n## Entrypoint\n\n### Usage\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStop (err, cb, code, signal) {\n      console.log(`Application stopped with code ${code} or signal ${signal} !`)\n      cb()\n    }\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n\n      http.listen(process.env.PORT || 3000, function(){\n        console.log('Server express', 'listening on port', http.address().port)\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Configuration\n\nYou can write your own configuration like you do for @pm2/io, just add a conf() method into your entrypoint which returns a json object.\nDetails of configuration can be found in this section : [**Configuration**](#configuration)\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n\n    conf() {\n      return {\n        ...\n      }\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Access @pm2/io features\n\nEntrypoint allow access to an instance of @pm2/io. So you can use all features described above by calling this.io.\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n\n      const counter = this.io.counter('start')\n\n      http.listen(process.env.PORT || 3000, () => {\n        console.log('Server express', 'listening on port', http.address().port)\n        counter.inc()\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Actions et Metrics\n\nYou can group all your actions and all your metrics into one methods.\nUse actions() and metrics(), their will be automatically called by the entrypoint.\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n\n    actions() {\n      this.io.action('db:clean', (cb) => {\n        clean.db(() => {\n          /**\n           * cb() must be called at the end of the action\n           */\n           cb({ success: true });\n        });\n      })\n    }\n\n    metrics() {\n      this.myMetric = io.metric('Inline');\n    }\n}\n\nnew MyEntrypoint()\n```\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Publishing\n\nJust run :\n```bash\n$ npm publish\n```\n\nAnd for beta\n```bash\n$ npm publish --tag beta\n```\n\n\n## License\n\nMIT\n","readmeFilename":"README.md","gitHead":"20ddc8ac47a3b7ac28b6b9b269cfeddbdbd0a222","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.3.5","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-o6hpsWgh9PyAB9fkS3gQW9xDaGfNSojewkzbkj+RuQgCfUfGdTbbgZ97ckYN6DO5GwvsNmfzcq/XJqSiHkiT6A==","shasum":"a666df3426c93aa13d2c3769276fdb26f6a5cc4e","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.3.5.tgz","fileCount":116,"unpackedSize":540907,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbjVo+CRA9TVsSAnZWagAAGwMP/iQ0DamFNu2lHOrvtZqM\nm11kmDEQqVmzb+WreNOBOR/y1qMvEx7miBthvuea3Inu7nv5xVFHlKRB9um1\nAc4VX9VbbMuetglMn4DSU3pX4atx/oapBxQ6SOYAzboKUzcvmmrr47ejasSM\ndiuptZAaIp30L5FICLqVejrFinKWrhTSdq2s5d08gkBov5KmWGkdTGfUAvey\npZvwQKfrKArSaz3ywJPwltRjOBjX8vuVtQY0jAzy7IubfU+ccpxI1ujyOacy\nZTXqX/wN+65ZZhIS7a/DYyUBJe+zrZS8ANRVikhgqi2WlMpGRVHT+zdQEwSj\n0y03BleyX0Nd9CDke2mviaaJ+7ea/JXP8p5Pf8LICOFRmTOYgMi7GdzrU8v0\nnrnqTlRVvgL+Oc2D7Teq4mMFoJZUS8C2aa6ezKZeUIcBnjhooNe9S4Q5l7W5\nNAepOnOjtcl57cXFA2JzECjsL8WpD6MmYXqv+gs0TXe2PdHpjvNIPiqBF27f\nxhVep+j+QH+U+oV+gUBHYupWqtYAdm0lkHXAdobjRNx6lKbQKyLD9WVhF4U1\nwbQIxJNk5xJ5ipYt/J5j0ix2xnmtbhO4Pkj4lwGRGnBJ/qo4+wQ+a8Af9Z4m\n8Zd7hUtk8C+6JtIhtVw9q18XHJmW1+v3tgpFMs7y3DCE2doXk9HbJH3jlbTd\nTtUv\r\n=oKMd\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.3.5_1535990333502_0.13349273013924012"},"_hasShrinkwrap":false},"2.3.6":{"name":"@pm2/io","version":"2.3.6","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"^2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"^1.2.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3","vxx":"1.2.2"},"gitHead":"125d5512193950656494732a3966e96e98666461","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.3.6","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-LRehGL9OUBXssi/27X1mZMJFmf2HCqAoyqTwRqffJqFYBbLTHepxOMZccz3xcvIVNCo1yZ4z+UHQFy0kDRnLQg==","shasum":"c49b9d2509297725c0599b44d99ed84595d091cf","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.3.6.tgz","fileCount":116,"unpackedSize":540002,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbjloQCRA9TVsSAnZWagAAWpIP/2HEt2J1DH4ZxAu2dEyT\n2OnpNJSO9wH1XyznAltn7snw4tCK21JRjYzuOGgGGmbflVjmv2oOiFDC175/\nfpQx7xzv37EV7eGYpo62CjILA0x2G7nzoDbBqATeRmoY8fIJyILrRfRMwJey\nl7Ioq+z6H7sXtJd1pWwRotcBqMLWYE2Lni4wZLcJnPoD+XdJfM758EjgNidL\nvy/JSs+yIzP7qlwiGnfh42VAMhAUatrHOFESrLh/kY5yHbWfbSgN+vNlMsSQ\nPViNm05R3WlDCpZiBW3oyHO4oTPWBlSoUL+le2Dpk9O7sTOP5swBdlYYpqHA\nOWA6nA6Lr1X+M1xrfvhSqWmAqvL/y47bOuzqJHxWXO4QSweINfTVvBYGcTFJ\n5eqTlkAKb5BPZjPWwxRBrFGAJ9aVsvV5KjN3tXme6HbS7jywX26fgnGTmkQ+\nyO6tS2DicPVLChAy+C3RlxeC3BV/p1lYXBl43NMuDvIj5MZB62W8q32Yhu5s\nbjbQ0XjbTBisoSaKHw093YTk8bDaL8x/aLf9MW6KHxC4MtFswgbX7wC+4Mz6\nilxuR5vPevWUaO0zrx+ek8kecaye7+YkKLfX8CgOQEjQt1yEUMK2QOVaSeI7\n4qpzxtJyDILQo/c1lM6Ketruq8esn0bpjl4SKu0S4nBE0+mACGfl3vSwpiZv\n2jdn\r\n=t1bz\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.3.6_1536055823642_0.8041278480605594"},"_hasShrinkwrap":false},"2.3.7":{"name":"@pm2/io","version":"2.3.7","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","mono":"mocha --require ts-node/register --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"^2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"^1.2.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3","vxx":"1.2.2"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 part responsible for gathering the metrics, reporting exceptions, exposing remote actions and every outside interaction with your application.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Report Custom Events (deprecated)**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-custom-events-deprecated)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Entrypoint**](https://github.com/keymetrics/pm2-io-apm/tree/master#entrypoint)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in `pm2 monit` or in the Keymetrics dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n});\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **type**: The type of metric (default 'metric', string)\n- **agg_type**: type of aggregation (default 'avg'; string: )\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **metric**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Passive Mode\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n  value: function() {\n    return Object.keys(users).length;\n  }\n});\n```\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst Realtime_Value = io.metric({\n  name: 'Realtime Value'\n});\n\nRealtime_Value.set(23);\n```\n\n#### Inline Mode\n\nIn inline mode, you can create a probe with a simple string.\n\n```javascript\nconst metric = io.metric('Inline');\n\nmetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst Current_req_processed = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  Current_req_processed.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    Current_req_processed.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from Keymetrics.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    /**\n     * cb() must be called at the end of the action\n     */\n     cb({ success: true });\n  });\n});\n```\n\n### Scoped actions (beta)\n\nScoped Actions are advanced remote actions that can be also triggered from Keymetrics.\n\nTwo arguments are passed to the function, data (optional data sent from Keymetrics) and res that allows to emit log data and to end the scoped action.\n\nExample:\n\n```javascript\nio.scopedAction('long running lsof', (data, res) => {\n  const child = spawn('lsof', []);\n\n  child.stdout.on('data', (chunk) => {\n    chunk.toString().split('\\n').forEach(function(line) {\n      res.send(line); // This send log to Keymetrics to be saved (for tracking)\n    });\n  });\n\n  child.stdout.on('end', (chunk) => {\n    res.end('end'); // This end the scoped action\n  });\n\n  child.on('error', (e) => {\n    res.error(e);  // This report an error to Keymetrics\n  });\n\n});\n```\n\n## Report Caught Exceptions\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'));\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    eventLoopActive: true, // (default: true) Monitor active handles and active requests\n    eventLoopDelay: true,  // (default: true) Get event loop's average delay\n\n    // Network monitoring at the application level\n    network: {\n      traffic: true, // (default: true) Allow application level network monitoring\n      ports: true    // (default: false) Shows which ports your app is listening on\n    },\n\n    // Transaction Tracing system configuration\n    transaction: {\n      http: true,               // (default: true) HTTP routes logging\n      tracing: {                // (default: false) Enable transaction tracing\n        http_latency: 1,        // (default: 200) minimum latency in milliseconds to take into account\n        ignore_routes: ['/foo'] // (default: empty) exclude some routes\n      }\n    },\n\n    deepMetrics: {\n      mongo: true,             // (default: true) Mongo connections monitoring\n      mysql: true,             // (default: true) MySQL connections monitoring\n      mqtt: true,              // (default: true) Mqtt connections monitoring\n      socketio: true,          // (default: true) WebSocket monitoring\n      redis: true,             // (default: true) Redis monitoring\n      http: true,              // (default: true) Http incoming requests monitoring\n      https: true,             // (default: true) Https incoming requests monitoring\n      \"http-outbound\": true,   // (default: true) Http outbound requests monitoring\n      \"https-outbound\": true   // (default: true) Https outbound requests monitoring\n    },\n\n    v8: {\n      new_space: true,                    // (default: true) New objects space size\n      old_space: true,                    // (default: true) Old objects space size\n      map_space: true,                    // (default: true) Map space size\n      code_space: true,                   // (default: true) Executable space size\n      large_object_space: true,           // (default: true) Large objects space size\n      total_physical_size: false,         // (default: false) Physical heap size\n      total_heap_size: true,              // (default: true)  Heap size\n      total_available_size: false,        // (default: false) Total available size for the heap\n      total_heap_size_executable: true,   // (default: true)  Executable heap size\n      used_heap_size: true,               // (default: true)  Used heap size\n      heap_size_limit: true,              // (default: true)  Heap size maximum size\n      malloced_memory: false,             // (default: false) Allocated memory\n      peak_malloced_memory: false,        // (default: false) Peak of allocated memory\n      does_zap_garbage: false,            // (default: false) Zap garbage enable/disable\n      GC: {\n        totalHeapSize: true,              // (default: true)  GC heap size\n        totalHeapExecutableSize: true,    // (default: true)  GC executable heap size\n        usedHeapSize: true,               // (default: true)  GC used heap size\n        heapSizeLimit: false,             // (default: false) GC heap size maximum size\n        totalPhysicalSize: false,         // (default: false) GC heap physical size\n        totalAvailableSize: false,        // (default: false) GC available size\n        mallocedMemory: false,            // (default: false) GC allocated memory\n        peakMallocedMemory: false,        // (default: false) GC peak of allocated memory\n        gcType: true,                     // (default: true)  Type of GC (scavenge, mark/sweep/compact, ...)\n        gcPause: true                     // (default: true)  Duration of pause (in milliseconds)\n      }\n    },\n    worker: true, // (default false) : get number of workers and threads\n    fileRequests: true // (default false) : get requests to file system\n  },\n\n  actions: {\n    eventLoopDump: false, // (default: false) Enable event loop dump action\n    profilingCpu: true,   // (default: true) Enable CPU profiling actions\n    profilingHeap: true   // (default: true) Enable Heap profiling actions\n  }\n});\n```\n\n### Custom configuration\n\nIf you want to activate default options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: true\n  }\n})\n```\n\nIf you want to activate all options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: 'all'\n  }\n})\n```\n\nIf you want to customize a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: {\n      new_space: false, // don't take new_space into account\n      ...\n    }\n  }\n})\n```\n**Note** : if you do not disable the default options they will be kept (merged with your configuration)\n\n## Entrypoint\n\n### Usage\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStop (err, cb, code, signal) {\n      console.log(`Application stopped with code ${code} or signal ${signal} !`)\n      cb()\n    }\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n\n      http.listen(process.env.PORT || 3000, function(){\n        console.log('Server express', 'listening on port', http.address().port)\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Configuration\n\nYou can write your own configuration like you do for @pm2/io, just add a conf() method into your entrypoint which returns a json object.\nDetails of configuration can be found in this section : [**Configuration**](#configuration)\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n\n    conf() {\n      return {\n        ...\n      }\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Access @pm2/io features\n\nEntrypoint allow access to an instance of @pm2/io. So you can use all features described above by calling this.io.\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n\n      const counter = this.io.counter('start')\n\n      http.listen(process.env.PORT || 3000, () => {\n        console.log('Server express', 'listening on port', http.address().port)\n        counter.inc()\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Actions et Metrics\n\nYou can group all your actions and all your metrics into one methods.\nUse actions() and metrics(), their will be automatically called by the entrypoint.\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n\n    actions() {\n      this.io.action('db:clean', (cb) => {\n        clean.db(() => {\n          /**\n           * cb() must be called at the end of the action\n           */\n           cb({ success: true });\n        });\n      })\n    }\n\n    metrics() {\n      this.myMetric = io.metric('Inline');\n    }\n}\n\nnew MyEntrypoint()\n```\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Publishing\n\nJust run :\n```bash\n$ npm publish\n```\n\nAnd for beta\n```bash\n$ npm publish --tag beta\n```\n\n\n## License\n\nMIT\n","readmeFilename":"README.md","gitHead":"d4fa09eeae939008741339c96a903bc40d9e6880","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.3.7","_npmVersion":"5.6.0","_nodeVersion":"10.0.0","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-Agn6uKOCIMpJIe6vUbBcL+8cjnjcCD9bhesd3VVJ3g57c9hIp0q2QHquu0iZxtKrFPubH9vIAkcAKmnxh9cd6A==","shasum":"5d49e9111d565cb36999e8c9fc7394a5a1bb209b","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.3.7.tgz","fileCount":116,"unpackedSize":540501,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbj9urCRA9TVsSAnZWagAAINwP/RnKGyDT8gHJB0QbMoku\nkOC7MN50y+Az0/auhBw0gcq0SE/97xLGTQgC2V6nnN2sMwNdl0XqR6spi4jo\n5Xr03DftCfqpp8ALhy4c+TpgPWFfGwkuxdr1spwd/8q/oawpa59LxRbp3fEc\neiKOtXQ+Us6GO7teK3BR9VFqR+E+n4tBmXVLM8W39r15QGVnQ6JiVOkF537P\nlkfe9sfPaA/NDaagPur5RM5S0ph/8CPm7tCW4zG2ZMvF6SKOpeUhOr3Iwa8l\nu7kxC59io+tsWXaGbiUZq3ufmOrSML2OpY30xwzSWBLM0eGLNLAE8xmgW6mE\nsrKOgQ8AizlcRn+9lmdKK2w4xKhAKr1+U5GVSVyUhBoJHLB+iVkJd23Lf5hI\nMCng+q547pG2FyrGDK34cqPbZzBKZGUh4ALSar7kqZ17G/+ReA4Mf09oa5or\n05wr4eYlek3D/cn2o7l/px2LXZUXNzW6RYm7CULrCzAHkSt79qluwavDNGz4\nUYy/x02I9S6fTCuU0UTFka52HDZ9iW4dDRfHNX3pwAijUWYt/feLHqglGRI/\ntAQ/64MusF0tquqmeRo9eviCEFeO8hDLZtoSTR2hfaGVLknpnNQcdiFB7msf\nPtpiBqwLLDbvuafR8ZfjuTyTvGxINbnDd+1iTMeqCBOhgdUvNYrrugSh8uir\nr2L3\r\n=OPqh\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.3.7_1536154539059_0.2346102943068593"},"_hasShrinkwrap":false},"2.3.8":{"name":"@pm2/io","version":"2.3.8","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","mono":"mocha --require ts-node/register --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"^2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"^1.2.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3","vxx":"1.2.2"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 part responsible for gathering the metrics, reporting exceptions, exposing remote actions and every outside interaction with your application.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Report Custom Events (deprecated)**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-custom-events-deprecated)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Entrypoint**](https://github.com/keymetrics/pm2-io-apm/tree/master#entrypoint)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in `pm2 monit` or in the Keymetrics dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n});\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **type**: The type of metric (default 'metric', string)\n- **agg_type**: type of aggregation (default 'avg'; string: )\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **metric**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Passive Mode\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n  value: function() {\n    return Object.keys(users).length;\n  }\n});\n```\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst Realtime_Value = io.metric({\n  name: 'Realtime Value'\n});\n\nRealtime_Value.set(23);\n```\n\n#### Inline Mode\n\nIn inline mode, you can create a probe with a simple string.\n\n```javascript\nconst metric = io.metric('Inline');\n\nmetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst Current_req_processed = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  Current_req_processed.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    Current_req_processed.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from Keymetrics.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    /**\n     * cb() must be called at the end of the action\n     */\n     cb({ success: true });\n  });\n});\n```\n\n### Scoped actions (beta)\n\nScoped Actions are advanced remote actions that can be also triggered from Keymetrics.\n\nTwo arguments are passed to the function, data (optional data sent from Keymetrics) and res that allows to emit log data and to end the scoped action.\n\nExample:\n\n```javascript\nio.scopedAction('long running lsof', (data, res) => {\n  const child = spawn('lsof', []);\n\n  child.stdout.on('data', (chunk) => {\n    chunk.toString().split('\\n').forEach(function(line) {\n      res.send(line); // This send log to Keymetrics to be saved (for tracking)\n    });\n  });\n\n  child.stdout.on('end', (chunk) => {\n    res.end('end'); // This end the scoped action\n  });\n\n  child.on('error', (e) => {\n    res.error(e);  // This report an error to Keymetrics\n  });\n\n});\n```\n\n## Report Caught Exceptions\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'));\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    eventLoopActive: true, // (default: true) Monitor active handles and active requests\n    eventLoopDelay: true,  // (default: true) Get event loop's average delay\n\n    // Network monitoring at the application level\n    network: {\n      traffic: true, // (default: true) Allow application level network monitoring\n      ports: true    // (default: false) Shows which ports your app is listening on\n    },\n\n    // Transaction Tracing system configuration\n    transaction: {\n      http: true,               // (default: true) HTTP routes logging\n      tracing: {                // (default: false) Enable transaction tracing\n        http_latency: 1,        // (default: 200) minimum latency in milliseconds to take into account\n        ignore_routes: ['/foo'] // (default: empty) exclude some routes\n      }\n    },\n\n    deepMetrics: {\n      mongo: true,             // (default: true) Mongo connections monitoring\n      mysql: true,             // (default: true) MySQL connections monitoring\n      mqtt: true,              // (default: true) Mqtt connections monitoring\n      socketio: true,          // (default: true) WebSocket monitoring\n      redis: true,             // (default: true) Redis monitoring\n      http: true,              // (default: true) Http incoming requests monitoring\n      https: true,             // (default: true) Https incoming requests monitoring\n      \"http-outbound\": true,   // (default: true) Http outbound requests monitoring\n      \"https-outbound\": true   // (default: true) Https outbound requests monitoring\n    },\n\n    v8: {\n      new_space: true,                    // (default: true) New objects space size\n      old_space: true,                    // (default: true) Old objects space size\n      map_space: true,                    // (default: true) Map space size\n      code_space: true,                   // (default: true) Executable space size\n      large_object_space: true,           // (default: true) Large objects space size\n      total_physical_size: false,         // (default: false) Physical heap size\n      total_heap_size: true,              // (default: true)  Heap size\n      total_available_size: false,        // (default: false) Total available size for the heap\n      total_heap_size_executable: true,   // (default: true)  Executable heap size\n      used_heap_size: true,               // (default: true)  Used heap size\n      heap_size_limit: true,              // (default: true)  Heap size maximum size\n      malloced_memory: false,             // (default: false) Allocated memory\n      peak_malloced_memory: false,        // (default: false) Peak of allocated memory\n      does_zap_garbage: false,            // (default: false) Zap garbage enable/disable\n      GC: {\n        totalHeapSize: true,              // (default: true)  GC heap size\n        totalHeapExecutableSize: true,    // (default: true)  GC executable heap size\n        usedHeapSize: true,               // (default: true)  GC used heap size\n        heapSizeLimit: false,             // (default: false) GC heap size maximum size\n        totalPhysicalSize: false,         // (default: false) GC heap physical size\n        totalAvailableSize: false,        // (default: false) GC available size\n        mallocedMemory: false,            // (default: false) GC allocated memory\n        peakMallocedMemory: false,        // (default: false) GC peak of allocated memory\n        gcType: true,                     // (default: true)  Type of GC (scavenge, mark/sweep/compact, ...)\n        gcPause: true                     // (default: true)  Duration of pause (in milliseconds)\n      }\n    },\n    worker: true, // (default false) : get number of workers and threads\n    fileRequests: true // (default false) : get requests to file system\n  },\n\n  actions: {\n    eventLoopDump: false, // (default: false) Enable event loop dump action\n    profilingCpu: true,   // (default: true) Enable CPU profiling actions\n    profilingHeap: true   // (default: true) Enable Heap profiling actions\n  }\n});\n```\n\n### Custom configuration\n\nIf you want to activate default options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: true\n  }\n})\n```\n\nIf you want to activate all options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: 'all'\n  }\n})\n```\n\nIf you want to customize a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: {\n      new_space: false, // don't take new_space into account\n      ...\n    }\n  }\n})\n```\n**Note** : if you do not disable the default options they will be kept (merged with your configuration)\n\n## Entrypoint\n\n### Usage\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStop (err, cb, code, signal) {\n      console.log(`Application stopped with code ${code} or signal ${signal} !`)\n      cb()\n    }\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n\n      http.listen(process.env.PORT || 3000, function(){\n        console.log('Server express', 'listening on port', http.address().port)\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Configuration\n\nYou can write your own configuration like you do for @pm2/io, just add a conf() method into your entrypoint which returns a json object.\nDetails of configuration can be found in this section : [**Configuration**](#configuration)\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n\n    conf() {\n      return {\n        ...\n      }\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Access @pm2/io features\n\nEntrypoint allow access to an instance of @pm2/io. So you can use all features described above by calling this.io.\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n\n      const counter = this.io.counter('start')\n\n      http.listen(process.env.PORT || 3000, () => {\n        console.log('Server express', 'listening on port', http.address().port)\n        counter.inc()\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Actions et Metrics\n\nYou can group all your actions and all your metrics into one methods.\nUse actions() and metrics(), their will be automatically called by the entrypoint.\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n\n    actions() {\n      this.io.action('db:clean', (cb) => {\n        clean.db(() => {\n          /**\n           * cb() must be called at the end of the action\n           */\n           cb({ success: true });\n        });\n      })\n    }\n\n    metrics() {\n      this.myMetric = io.metric('Inline');\n    }\n}\n\nnew MyEntrypoint()\n```\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Publishing\n\nJust run :\n```bash\n$ npm publish\n```\n\nAnd for beta\n```bash\n$ npm publish --tag beta\n```\n\n\n## License\n\nMIT\n","readmeFilename":"README.md","gitHead":"6ced378c1d577c0f89dd82f72d35bfad059a4456","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.3.8","_npmVersion":"5.5.1","_nodeVersion":"9.0.0","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-b3sV6ya1BAlDm8GLBnLwak0gkyWbMx6AkAlQ1PI19UGmlImev/VJ0e7Q6dYApGc9TI+b4LUB/L009X5Rag6mrg==","shasum":"fd0b999315ab75c784d68e15c2cfe721204df2e7","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.3.8.tgz","fileCount":116,"unpackedSize":541057,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbj/iMCRA9TVsSAnZWagAAUjoP/0MUIF4B+rfNYgStZMW8\ncP0WAoSakk0KdWk/GlniXjWj1yM94TfxJcuYRmnYSOxkk/MNPsbzOqLmKNC/\nG/AF2nQpJR+WoaLrvyYCXZr0pCR55QD18PovDMyxjy/i/RJdNxuz9JSwEret\n7ddkhwPyws7C4oJuLWDSVwgDgTstO24jBuD8bvBMvzP3q2jea3Tx23soG0Hg\nepm8LvzuNebHvhfNkhBl7XkOr/3wB+G4tC2WSQpBjV7xm4flt6gkbZJJMsNK\nFkAZwH8tLxLq/rUMNzbZ97Tg5vrz8j9PRtVoDXy1YbvfTUxmwJloszCAGeyd\nJIi925zXuLcJKUvusBoBuE4J8v3PjFSE2rAiO5WKdXjrrYno+JyQGImvBTFp\nmomH6skZHhwiefE8dK6+f8nLIJDzxNHgym0gql4ERqc6UFrngLdsUprvhHOL\n3wYcry58MaoK+3mmq5PWkLAmJ/RzAo/AmmEN4ENmXcq4cUzcYCLvQx/dD3LI\n83/J5d4hDBu/32OJht8vKoLcXz8Q8+aO5KiIBLpYqe7acLuNI/cBTmKzuaJh\nZrju+J7wrOdraxzXZkYtMev2fYGuRhWFENw+O3+IZy/TOtON0g30vgAfLCW7\nbUgdAxjzviO7V8TkD3PGkJdNA2SYxfwIeHzgKwwGeV8XQfQcJTKUY2BFWQ0J\nujCg\r\n=2RHU\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.3.8_1536161931826_0.23175594867700888"},"_hasShrinkwrap":false},"2.3.9":{"name":"@pm2/io","version":"2.3.9","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","mono":"mocha --require ts-node/register --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"^2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"^1.2.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3","vxx":"1.2.2"},"gitHead":"42868cf4016d1df5b305213ae729989b595ba732","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.3.9","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-OgyLH3k11FOBLyYkRBDC5WaeLpap6+JhiJqNBt9EypacJ987axi28W9oe/1ifpxaX3HxQ8SPdUe04sHlratLug==","shasum":"d6399178d898e09051ed4439f9179bb320f10280","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.3.9.tgz","fileCount":116,"unpackedSize":541018,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbkkV7CRA9TVsSAnZWagAAvjYP/0gFkbXdMSx2JOZWsX91\njy3kcQ32Vq5WJ2wA2fiACfutxwaw0Dnu5/KEtjk6g4fjLSHuc6PbVNqDLYUG\nHHv3awH7iDazlYPDVOx/3VT/L+1YSvDlAwEfciP2Hhkw/uIrfmu9wIn/GRRn\nU+6S5iqyy3ejwIFhfW7fmngymrWXFgaIbR1CtXuDvQdE6hrZHx32otGfVV/B\nBwLP0tzZYhrkclmS9dgLL3Z6S2D0dYS8kq0S7K2WLZfEidowozjRhQHFpfrw\nX9FclUln7FVPgZoJu1hTEFPwLn4kurZIZCg0K75aRHVcorWmf3d8/BVHkd/l\ngzQ+uZ32/bA/ScOCrik4rumOfFS4rqbdsaBxEKhueytZMjtR59UAcL6rYf50\n8ffe9xHO5sHu/Ic5sTtqCYX0gq6i5d5gaykvWBBwSMhwvJVaNLTE4vzAsME/\nYc8+hpnIOoTqISEUUvDM9UsLb385dVrl+rUJFN6rbZb9A0G+0N1fkebu4Fjy\nRknxwW69dTH1jfT1WtcDel/Zs49YYI7BOo+tef6c/ZFeMzSPVqn2s47MbNpc\n3XD1ukp6knTiP4eg9pDb70ZNoC+X9sa3ko0AsKmCAO85n6GlYzmDwpqMa2li\n7iOPnSTUNO+ngxO+/f2h04geUUYdzO52GOrg72jKabI5ufgM2nb6C9ormm0/\nsR+s\r\n=aCO8\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.3.9_1536312698899_0.19772489434049412"},"_hasShrinkwrap":false},"2.3.10":{"name":"@pm2/io","version":"2.3.10","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","mono":"mocha --require ts-node/register --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"^2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"^1.2.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3","vxx":"1.2.2"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 part responsible for gathering the metrics, reporting exceptions, exposing remote actions and every outside interaction with your application.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Report Custom Events (deprecated)**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-custom-events-deprecated)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Entrypoint**](https://github.com/keymetrics/pm2-io-apm/tree/master#entrypoint)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in `pm2 monit` or in the Keymetrics dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n});\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **type**: The type of metric (default 'metric', string)\n- **agg_type**: type of aggregation (default 'avg'; string: )\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **metric**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Passive Mode\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n  value: function() {\n    return Object.keys(users).length;\n  }\n});\n```\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst Realtime_Value = io.metric({\n  name: 'Realtime Value'\n});\n\nRealtime_Value.set(23);\n```\n\n#### Inline Mode\n\nIn inline mode, you can create a probe with a simple string.\n\n```javascript\nconst metric = io.metric('Inline');\n\nmetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst Current_req_processed = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  Current_req_processed.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    Current_req_processed.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from Keymetrics.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    /**\n     * cb() must be called at the end of the action\n     */\n     cb({ success: true });\n  });\n});\n```\n\n### Scoped actions (beta)\n\nScoped Actions are advanced remote actions that can be also triggered from Keymetrics.\n\nTwo arguments are passed to the function, data (optional data sent from Keymetrics) and res that allows to emit log data and to end the scoped action.\n\nExample:\n\n```javascript\nio.scopedAction('long running lsof', (data, res) => {\n  const child = spawn('lsof', []);\n\n  child.stdout.on('data', (chunk) => {\n    chunk.toString().split('\\n').forEach(function(line) {\n      res.send(line); // This send log to Keymetrics to be saved (for tracking)\n    });\n  });\n\n  child.stdout.on('end', (chunk) => {\n    res.end('end'); // This end the scoped action\n  });\n\n  child.on('error', (e) => {\n    res.error(e);  // This report an error to Keymetrics\n  });\n\n});\n```\n\n## Report Caught Exceptions\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'));\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    eventLoopActive: true, // (default: true) Monitor active handles and active requests\n    eventLoopDelay: true,  // (default: true) Get event loop's average delay\n\n    // Network monitoring at the application level\n    network: {\n      traffic: true, // (default: true) Allow application level network monitoring\n      ports: true    // (default: false) Shows which ports your app is listening on\n    },\n\n    // Transaction Tracing system configuration\n    transaction: {\n      http: true,               // (default: true) HTTP routes logging\n      tracing: {                // (default: false) Enable transaction tracing\n        http_latency: 1,        // (default: 200) minimum latency in milliseconds to take into account\n        ignore_routes: ['/foo'] // (default: empty) exclude some routes\n      }\n    },\n\n    deepMetrics: {\n      mongo: true,             // (default: true) Mongo connections monitoring\n      mysql: true,             // (default: true) MySQL connections monitoring\n      mqtt: true,              // (default: true) Mqtt connections monitoring\n      socketio: true,          // (default: true) WebSocket monitoring\n      redis: true,             // (default: true) Redis monitoring\n      http: true,              // (default: true) Http incoming requests monitoring\n      https: true,             // (default: true) Https incoming requests monitoring\n      \"http-outbound\": true,   // (default: true) Http outbound requests monitoring\n      \"https-outbound\": true   // (default: true) Https outbound requests monitoring\n    },\n\n    v8: {\n      new_space: true,                    // (default: true) New objects space size\n      old_space: true,                    // (default: true) Old objects space size\n      map_space: true,                    // (default: true) Map space size\n      code_space: true,                   // (default: true) Executable space size\n      large_object_space: true,           // (default: true) Large objects space size\n      total_physical_size: false,         // (default: false) Physical heap size\n      total_heap_size: true,              // (default: true)  Heap size\n      total_available_size: false,        // (default: false) Total available size for the heap\n      total_heap_size_executable: true,   // (default: true)  Executable heap size\n      used_heap_size: true,               // (default: true)  Used heap size\n      heap_size_limit: true,              // (default: true)  Heap size maximum size\n      malloced_memory: false,             // (default: false) Allocated memory\n      peak_malloced_memory: false,        // (default: false) Peak of allocated memory\n      does_zap_garbage: false,            // (default: false) Zap garbage enable/disable\n      GC: {\n        totalHeapSize: true,              // (default: true)  GC heap size\n        totalHeapExecutableSize: true,    // (default: true)  GC executable heap size\n        usedHeapSize: true,               // (default: true)  GC used heap size\n        heapSizeLimit: false,             // (default: false) GC heap size maximum size\n        totalPhysicalSize: false,         // (default: false) GC heap physical size\n        totalAvailableSize: false,        // (default: false) GC available size\n        mallocedMemory: false,            // (default: false) GC allocated memory\n        peakMallocedMemory: false,        // (default: false) GC peak of allocated memory\n        gcType: true,                     // (default: true)  Type of GC (scavenge, mark/sweep/compact, ...)\n        gcPause: true                     // (default: true)  Duration of pause (in milliseconds)\n      }\n    },\n    worker: true, // (default false) : get number of workers and threads\n    fileRequests: true // (default false) : get requests to file system\n  },\n\n  actions: {\n    eventLoopDump: false, // (default: false) Enable event loop dump action\n    profilingCpu: true,   // (default: true) Enable CPU profiling actions\n    profilingHeap: true   // (default: true) Enable Heap profiling actions\n  }\n});\n```\n\n### Custom configuration\n\nIf you want to activate default options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: true\n  }\n})\n```\n\nIf you want to activate all options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: 'all'\n  }\n})\n```\n\nIf you want to customize a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: {\n      new_space: false, // don't take new_space into account\n      ...\n    }\n  }\n})\n```\n**Note** : if you do not disable the default options they will be kept (merged with your configuration)\n\n## Entrypoint\n\n### Usage\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStop (err, cb, code, signal) {\n      console.log(`Application stopped with code ${code} or signal ${signal} !`)\n      cb()\n    }\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n\n      http.listen(process.env.PORT || 3000, function(){\n        console.log('Server express', 'listening on port', http.address().port)\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Configuration\n\nYou can write your own configuration like you do for @pm2/io, just add a conf() method into your entrypoint which returns a json object.\nDetails of configuration can be found in this section : [**Configuration**](#configuration)\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n\n    conf() {\n      return {\n        ...\n      }\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Access @pm2/io features\n\nEntrypoint allow access to an instance of @pm2/io. So you can use all features described above by calling this.io.\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n\n      const counter = this.io.counter('start')\n\n      http.listen(process.env.PORT || 3000, () => {\n        console.log('Server express', 'listening on port', http.address().port)\n        counter.inc()\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Actions et Metrics\n\nYou can group all your actions and all your metrics into one methods.\nUse actions() and metrics(), their will be automatically called by the entrypoint.\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n\n    actions() {\n      this.io.action('db:clean', (cb) => {\n        clean.db(() => {\n          /**\n           * cb() must be called at the end of the action\n           */\n           cb({ success: true });\n        });\n      })\n    }\n\n    metrics() {\n      this.myMetric = io.metric('Inline');\n    }\n}\n\nnew MyEntrypoint()\n```\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Publishing\n\nJust run :\n```bash\n$ npm publish\n```\n\nAnd for beta\n```bash\n$ npm publish --tag beta\n```\n\n\n## License\n\nMIT\n","readmeFilename":"README.md","gitHead":"71320d59a8c69a7eab5e7a819d3d47a329e5b9fa","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.3.10","_npmVersion":"6.2.0","_nodeVersion":"10.9.0","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-WA93WnLTyT7oRlkljifr+zQAMeNz89JghhIZAaRzIU+VPrAbZLP+pSw49/MTYhJ2bf7oOg3cqMV5T3UAEXIifw==","shasum":"f61de53cd7e9e66619e7decbf4e0b5e3c89f029a","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.3.10.tgz","fileCount":115,"unpackedSize":542359,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbklZJCRA9TVsSAnZWagAApakP/0Fd4NIYZh+UvSwSoPGL\ndgd6YmPDDslprmaCHz3BK0Un6MMPlYvTAng5Vy0yLjk+Ql3ug2SMa8f3JpMy\nGQtImS0ajUcdDzG2p8JqAZkVYHj+BZUKM1kCwx0PNfko31gwOwjLXPwtmHV2\nPUdcIxk6JZCZJVv9q9uMkieT5tVnNZixgQsrvx9EXYfG2ZGBN4IjA93VOQVd\nd53aTpVLSf+Sflakbzzi0hqu4REv/ze8ebjDwVjjTNl1uEUdnqansl3Pt9uB\nwcTxfK6duxNjT8nQNBkk3x4iReLg0JHqwnuPu/GI+u1AVD8xrxFOlOrk+vF3\n8Z5HPVRFCxEyht5SHQfXPbXb1Iu3qRwJEc1yKSCa8dAyyWtLaIPEWYERJXaV\n0ZaL4sHPQuq8ZwYdzeQDEXPkxDXHJ/qJui3fUOEjZM0j5dMVKZfpGFwMQU2b\nD6uTzCND+MMjVz4AC9ZwQrdkfNeHJ+5euAR9qo8HPxM4og7u5Bt+au0Ls73P\nCEj8e6PH8uKU4sLn05nVA7rudGeVQpj4Pzfi4bX/aEQnSL2036cuhMx7l1d+\nYPZVVhodLJZqHCyXzt/hDxOrDAFurGUpbule3S0DTlt5ThP2dMZ3m/T5p6U4\n1AXnYThb2uXgIAtn4GtkNmIdnCAH9cj17D84MoN8MUh4nLSn/BF4Zm7OhUQI\n4rZE\r\n=P2dO\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.3.10_1536317000044_0.23261227308891064"},"_hasShrinkwrap":false},"2.3.11":{"name":"@pm2/io","version":"2.3.11","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","mono":"mocha --require ts-node/register --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"async":"^2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"^1.2.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3","vxx":"1.2.2"},"gitHead":"9ab63e44f82606761f99332dd4eba1db25b67b8f","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.3.11","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-pYJbEyEyzftjm2ckUZOc9Iubuu8FykCar0jJXNIemgI1FSRAFiK7CPdxWQIOQOrnoxcC+oiqbiowH3a0DkNdKw==","shasum":"f9b14b8acc9af816dcbeee6c2d027eb89355d8d1","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.3.11.tgz","fileCount":116,"unpackedSize":543488,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbkmx5CRA9TVsSAnZWagAA9VkP/A6DbfVyCCXXSxMmFjtP\nC7QZXrN9dHc8/nm3YtUS0T3av8+ytP4x3wkQrhZezFlAg8lL3RyzjPsDUrUL\nngpehE8xHYMeRRRiEnYNBbyhd3SphlYy+WaK3Tk5R9D9Z7u52tV4lLieCfny\nOv6fgrHBwq8NzhUlIXLkMbCw5OWXGPxLFgwz4Bdt9PI7hbi+m7aZTZezCwzt\n+X7uNGnORfaeeaMNV37QNe9wY5vf3bVdAvj6pLJnQcbK/mipwgDhnxKDQ79l\nCBwdBQ9Nztw38hnm7Ybqm0bYrH4q1d1tK9zq/LIglgmr3YtiMEywb6mdE1np\nqIgLi6gcNK7eHMsQM3yRV4esvULy+NjJe0sN1Nyx+g/PQ/5e/h1Wg+xwqHPS\nfmtbp6ps0vwIlmum8hRgvEzanX9Xux9/sJAiz3PnowrxtMDS5vLV4tDbtPL+\nijlZiW82WkWyg5RntpNzLPAnNB7uMepkJRFyw73PQyyOSANTvLWx0yrlaGro\nvZ5oQtyWwcWeOnoMbOw46vqEbJMFxuLmVOeQw/oKXZLxKsLDWi+krblE8Pvt\nf+RwAu848hbBDySxsNNZBWxo7wqrhu+s+6o30PB2eEIxIWN6k/rCGv/Jk5Jd\nrLv2lKnDuf5xKeF+bIC6qRVZyu8M7xvmsZGO1FdIaVo5vIUm8yNtsjXE2aaT\nEyTo\r\n=8aDU\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.3.11_1536322680534_0.31272124236537424"},"_hasShrinkwrap":false},"2.4.0":{"name":"@pm2/io","version":"2.4.0","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","mono":"mocha --require ts-node/register --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"@pm2/agent-node":"^1.0.2","async":"^2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"^1.2.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3","vxx":"1.2.2"},"gitHead":"7dd61b4b8cf91b2d93a561c7978b27b153fd535f","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.4.0","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-FYo+ak1D3YtH5Nvfcku9QBnWnI1Q61R1fkC4IADohj3N7zn+v+4QCUTHcRP+HKeDRm50TgueFbBcTXFmfKPxEg==","shasum":"932e0d9f1484f5cc4213e9a6e3f8f7d9c9a52e43","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.4.0.tgz","fileCount":114,"unpackedSize":555046,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbmh77CRA9TVsSAnZWagAAOHgP/Rd4APS0O9LNs2G1HNe+\nKcnzyK3KANwE8kaFKUwitUC69lzy8v8Z0po5Bth7OTV4jxdk8kcPkTZFONTV\nUDIuomxEnC87e5Zg+/aEToWabmh7Rtpg/JQGY8GIBgx0ivqFFdUX/SIndPz9\nh6RtUaZNioDRSWnxdsqWn7V0+jp0J15hEn6BDNo3lXk3Z38HRtUQCKh2ym2d\nVyxDn5sbwB0Ffflue9dUOjfc5OZmH4EKuNYkMACXtqqbHwW4WqBjkfXw1pu8\nBP8VhXzDGBZG4D1SN28CVGCwqa/J+o+H+JkNWzbIB+mFAn78Iu1l633BwwAh\nDj6hswyJBGM4lgoSIhSI2w3Z5DCmz+m1cRgPfJYFXI+ZP0gXPYSdutXMr2u/\n+KMiDRWJ5ZcgainB4zmyNikdnkhRLrzwDseIrVIFqwggTVcvF5c+b9xZxRna\nCQpdb9+KUi/WR3bK5deibrGaaguN0QjaFJ3sUrJa0RsDiYuChT0NufHlTbGt\nfY22SaXscSC85KoosSzK2fwRaTL8uxmiYvJ/sxYdR91LDnkNZx7jlAjt7vNv\nvo3stpzcdibiM+QMAHU/ynzy0HoTkanu0SKj1V/g59kDJm8bzzICtMI4ZkU1\nMzsMx7pBcBHWX8FNalt5ZnF7dipMMKwnX+Kics03BdjTGgCOkUHzFZiORRwy\n6rp2\r\n=+BQ9\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.4.0_1536827130050_0.316496999110468"},"_hasShrinkwrap":false},"2.4.1":{"name":"@pm2/io","version":"2.4.1","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","mono":"mocha --require ts-node/register --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"@pm2/agent-node":"^1.0.2","async":"^2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"^1.2.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3","vxx":"1.2.2"},"gitHead":"f509975a21dd2467b5a11d1e8956356a350decb2","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.4.1","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"wallet77","email":"wallet77@gmail.com"},"dist":{"integrity":"sha512-avTAdatqC+MGIPqC0wAVwaGn3grpW47fY7J95x4ItCWw5wM3Vh2YfmVz+fXaC070UYLSS6pPKyzQ7pAzOTyTgA==","shasum":"58682d495b975c279a851f736db4779984754315","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.4.1.tgz","fileCount":114,"unpackedSize":553242,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbmmYyCRA9TVsSAnZWagAAGIcP/AseIRT41gqr4Jh2ipd9\nL3IfQiWPLGNa2RgFsZ3GD4JUL393k1y/0EF3J9E3P7MnChlMSGWmXtuL6XqB\nv7blclX8qF/eJveRX1ea6b4whRFiwei43v863JNHR78aO4H60v0bN3pkuD7A\nLd2mKuscZJ8HbyItn0s8x2khDphOscKn7Sb2hV8Vii4zym9CNYhGS3hb8lTS\njL3iq8IeCKxM/8I//lXl6P0jcQS+kPL9hWkGOUxaFk/t3poSfFpU1QNO6RH4\ntEO6+G4KvvLYEciT9jT7MxdzBpCr1/sR5Ti/Oa2ukWogMRWjYDsjWiJrUQX/\nHZ0pd4aDpvJbNWjfl/NNoO058B5ASYvZdghK799GZULHFQ2hDTa5gWUBjWUc\nN/DO3xP4H4l8ALUEo1VUkpp4Lpkg0jtkKidjMfNPvxdqrsNyRNbL6byMggJw\npeZ0tMgTNEhQDKIJh0HXKxftYV4CVxS8HvBrR1PmTqt6kbtDv35LDNGr2N6i\ngnmcrlVRcO8mjKXCzSR3XnhlM4e1+3FD3HnEaXFsx4E3qdi/Ikq8TxDN6ADJ\nfMhhA0pOG4hryZwbF/OPk7zrUc422JbFV1ySUBJN0ITwk+T2WSvWmkonHU8R\nA7g+fOec+oD1ObwnOCPIZo/VHHIYgDyyAyFyULf8WRRcMLezzfh/Jzt5v+sM\n+Kt+\r\n=QL3C\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.4.1_1536845361634_0.6993485715950243"},"_hasShrinkwrap":false},"2.5.0-rc1":{"name":"@pm2/io","version":"2.5.0-rc1","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","mono":"mocha --require ts-node/register --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"@pm2/agent-node":"^1.0.2","async":"^2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"^1.2.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3","vxx":"1.2.2"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 part responsible for gathering the metrics, reporting exceptions, exposing remote actions and every outside interaction with your application.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Report Custom Events (deprecated)**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-custom-events-deprecated)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Entrypoint**](https://github.com/keymetrics/pm2-io-apm/tree/master#entrypoint)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in `pm2 monit` or in the Keymetrics dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n});\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **type**: The type of metric (default 'metric', string)\n- **agg_type**: type of aggregation (default 'avg'; string: )\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **metric**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Passive Mode\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n  value: function() {\n    return Object.keys(users).length;\n  }\n});\n```\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst Realtime_Value = io.metric({\n  name: 'Realtime Value'\n});\n\nRealtime_Value.set(23);\n```\n\n#### Inline Mode\n\nIn inline mode, you can create a probe with a simple string.\n\n```javascript\nconst metric = io.metric('Inline');\n\nmetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst Current_req_processed = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  Current_req_processed.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    Current_req_processed.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from Keymetrics.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    /**\n     * cb() must be called at the end of the action\n     */\n     cb({ success: true });\n  });\n});\n```\n\n### Scoped actions (beta)\n\nScoped Actions are advanced remote actions that can be also triggered from Keymetrics.\n\nTwo arguments are passed to the function, data (optional data sent from Keymetrics) and res that allows to emit log data and to end the scoped action.\n\nExample:\n\n```javascript\nio.scopedAction('long running lsof', (data, res) => {\n  const child = spawn('lsof', []);\n\n  child.stdout.on('data', (chunk) => {\n    chunk.toString().split('\\n').forEach(function(line) {\n      res.send(line); // This send log to Keymetrics to be saved (for tracking)\n    });\n  });\n\n  child.stdout.on('end', (chunk) => {\n    res.end('end'); // This end the scoped action\n  });\n\n  child.on('error', (e) => {\n    res.error(e);  // This report an error to Keymetrics\n  });\n\n});\n```\n\n## Report Caught Exceptions\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'));\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    eventLoopActive: true, // (default: true) Monitor active handles and active requests\n    eventLoopDelay: true,  // (default: true) Get event loop's average delay\n\n    // Network monitoring at the application level\n    network: {\n      traffic: true, // (default: true) Allow application level network monitoring\n      ports: true    // (default: false) Shows which ports your app is listening on\n    },\n\n    // Transaction Tracing system configuration\n    transaction: {\n      http: true,               // (default: true) HTTP routes logging\n      tracing: {                // (default: false) Enable transaction tracing\n        http_latency: 1,        // (default: 200) minimum latency in milliseconds to take into account\n        ignore_routes: ['/foo'] // (default: empty) exclude some routes\n      }\n    },\n\n    deepMetrics: {\n      mongo: true,             // (default: true) Mongo connections monitoring\n      mysql: true,             // (default: true) MySQL connections monitoring\n      mqtt: true,              // (default: true) Mqtt connections monitoring\n      socketio: true,          // (default: true) WebSocket monitoring\n      redis: true,             // (default: true) Redis monitoring\n      http: true,              // (default: true) Http incoming requests monitoring\n      https: true,             // (default: true) Https incoming requests monitoring\n      \"http-outbound\": true,   // (default: true) Http outbound requests monitoring\n      \"https-outbound\": true   // (default: true) Https outbound requests monitoring\n    },\n\n    v8: {\n      new_space: true,                    // (default: true) New objects space size\n      old_space: true,                    // (default: true) Old objects space size\n      map_space: true,                    // (default: true) Map space size\n      code_space: true,                   // (default: true) Executable space size\n      large_object_space: true,           // (default: true) Large objects space size\n      total_physical_size: false,         // (default: false) Physical heap size\n      total_heap_size: true,              // (default: true)  Heap size\n      total_available_size: false,        // (default: false) Total available size for the heap\n      total_heap_size_executable: true,   // (default: true)  Executable heap size\n      used_heap_size: true,               // (default: true)  Used heap size\n      heap_size_limit: true,              // (default: true)  Heap size maximum size\n      malloced_memory: false,             // (default: false) Allocated memory\n      peak_malloced_memory: false,        // (default: false) Peak of allocated memory\n      does_zap_garbage: false,            // (default: false) Zap garbage enable/disable\n      GC: {\n        totalHeapSize: true,              // (default: true)  GC heap size\n        totalHeapExecutableSize: true,    // (default: true)  GC executable heap size\n        usedHeapSize: true,               // (default: true)  GC used heap size\n        heapSizeLimit: false,             // (default: false) GC heap size maximum size\n        totalPhysicalSize: false,         // (default: false) GC heap physical size\n        totalAvailableSize: false,        // (default: false) GC available size\n        mallocedMemory: false,            // (default: false) GC allocated memory\n        peakMallocedMemory: false,        // (default: false) GC peak of allocated memory\n        gcType: true,                     // (default: true)  Type of GC (scavenge, mark/sweep/compact, ...)\n        gcPause: true                     // (default: true)  Duration of pause (in milliseconds)\n      }\n    },\n    worker: true, // (default false) : get number of workers and threads\n    fileRequests: true // (default false) : get requests to file system\n  },\n\n  actions: {\n    eventLoopDump: false, // (default: false) Enable event loop dump action\n    profilingCpu: true,   // (default: true) Enable CPU profiling actions\n    profilingHeap: true   // (default: true) Enable Heap profiling actions\n  }\n});\n```\n\n### Custom configuration\n\nIf you want to activate default options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: true\n  }\n})\n```\n\nIf you want to activate all options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: 'all'\n  }\n})\n```\n\nIf you want to customize a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: {\n      new_space: false, // don't take new_space into account\n      ...\n    }\n  }\n})\n```\n**Note** : if you do not disable the default options they will be kept (merged with your configuration)\n\n## Entrypoint\n\n### Usage\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStop (err, cb, code, signal) {\n      console.log(`Application stopped with code ${code} or signal ${signal} !`)\n      cb()\n    }\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n\n      http.listen(process.env.PORT || 3000, function(){\n        console.log('Server express', 'listening on port', http.address().port)\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Configuration\n\nYou can write your own configuration like you do for @pm2/io, just add a conf() method into your entrypoint which returns a json object.\nDetails of configuration can be found in this section : [**Configuration**](#configuration)\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n\n    conf() {\n      return {\n        ...\n      }\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Access @pm2/io features\n\nEntrypoint allow access to an instance of @pm2/io. So you can use all features described above by calling this.io.\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n\n      const counter = this.io.counter('start')\n\n      http.listen(process.env.PORT || 3000, () => {\n        console.log('Server express', 'listening on port', http.address().port)\n        counter.inc()\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Actions et Metrics\n\nYou can group all your actions and all your metrics into one methods.\nUse actions() and metrics(), their will be automatically called by the entrypoint.\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n\n    actions() {\n      this.io.action('db:clean', (cb) => {\n        clean.db(() => {\n          /**\n           * cb() must be called at the end of the action\n           */\n           cb({ success: true });\n        });\n      })\n    }\n\n    metrics() {\n      this.myMetric = io.metric('Inline');\n    }\n}\n\nnew MyEntrypoint()\n```\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Publishing\n\nJust run :\n```bash\n$ npm publish\n```\n\nAnd for beta\n```bash\n$ npm publish --tag beta\n```\n\n\n## License\n\nMIT\n","readmeFilename":"README.md","gitHead":"dcb167ccf51c2cdaa3f66e0453c0f828c8456cc4","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.5.0-rc1","_npmVersion":"6.4.1","_nodeVersion":"10.11.0","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-pTK5sqGGBxGZhEw+tpABklWI6ZO0BCN/ZqJPa8JO0+cjBgNh6tJ5SUFWbYWK/hWzqrh83eFmQ0CcazcKoXvyQA==","shasum":"7609aff0204c49cd4e9c2ec80a03302b1fcada3d","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.5.0-rc1.tgz","fileCount":117,"unpackedSize":568186,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbsLMSCRA9TVsSAnZWagAARrYP/jFeI1/yDk0C5dR9XFy2\nv4HuDrRPW+Xfbtrv6VfL1ketgb+RBLthq0kE5jTTNuDYmehAM5SHPzapVU3l\nhJGr1rIu2xCZQ/4Wig5l83WePNkt+P/2MuMcMX0g0eYDcTiw6zlrXvgWaIeW\nBVTh/zQELsvEozkiG8AdZfPMAsmGevfDh96u09RQxqnHBfcPaxpydAsUlh+F\nCapCfqROotVK1FjO3fB7MjgpGkcZKpg8FOd+D1hr6QLL1834AIIl8F1YBZIt\notVmEvCgU4bHmC09EMWZXA7vYffQz7U/c870l8gjfVb2zj/AT8x+6Kla/UnK\nkk2kIYNbVCtTtnd4maqv/NuiGi10N1/vI8RjKRrFwGsMlDFLK6Ytgp8Jje2O\n4hLQwpuozlQlPN2/Lhg64Q8jKrV2jPxGBSsBTkRHadx5RjW5pWPS3ATWwaSX\ndfIJU/SzDKGEvT0im9eyJS7niOZpEoUkkrxIpSHFagRiikzSJYJNTsHsrIPr\n26PVxx8sSthEUYI6m6nE+5s1ar15aodDRQlxypkxSoHVnuB37MVuB8jLTfiq\nUB88eVSWHdvK4/51pKduLyBbqnCmkn+a84TSLo+tFvaOkGaAHwoRZ82VCbPH\nd/0cIA1Ku4lpFwH41oR6IdiFossMKvQcKpODS4rIH3uJVQ5f8QWrJGZrs+R5\nHglK\r\n=9sbO\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.5.0-rc1_1538306834046_0.26344513791596347"},"_hasShrinkwrap":false},"2.5.0-rc2":{"name":"@pm2/io","version":"2.5.0-rc2","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","mono":"mocha --require ts-node/register --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"@pm2/agent-node":"^1.0.2","async":"^2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"^1.2.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3","vxx":"1.2.2"},"gitHead":"35396cca2207f573228df612096cbbe6c68b897c","readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 part responsible for gathering the metrics, reporting exceptions, exposing remote actions and every outside interaction with your application.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Report Custom Events (deprecated)**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-custom-events-deprecated)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Entrypoint**](https://github.com/keymetrics/pm2-io-apm/tree/master#entrypoint)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in `pm2 monit` or in the Keymetrics dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n});\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **type**: The type of metric (default 'metric', string)\n- **agg_type**: type of aggregation (default 'avg'; string: )\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **metric**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Passive Mode\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n  value: function() {\n    return Object.keys(users).length;\n  }\n});\n```\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst Realtime_Value = io.metric({\n  name: 'Realtime Value'\n});\n\nRealtime_Value.set(23);\n```\n\n#### Inline Mode\n\nIn inline mode, you can create a probe with a simple string.\n\n```javascript\nconst metric = io.metric('Inline');\n\nmetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst Current_req_processed = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  Current_req_processed.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    Current_req_processed.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from Keymetrics.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    /**\n     * cb() must be called at the end of the action\n     */\n     cb({ success: true });\n  });\n});\n```\n\n### Scoped actions (beta)\n\nScoped Actions are advanced remote actions that can be also triggered from Keymetrics.\n\nTwo arguments are passed to the function, data (optional data sent from Keymetrics) and res that allows to emit log data and to end the scoped action.\n\nExample:\n\n```javascript\nio.scopedAction('long running lsof', (data, res) => {\n  const child = spawn('lsof', []);\n\n  child.stdout.on('data', (chunk) => {\n    chunk.toString().split('\\n').forEach(function(line) {\n      res.send(line); // This send log to Keymetrics to be saved (for tracking)\n    });\n  });\n\n  child.stdout.on('end', (chunk) => {\n    res.end('end'); // This end the scoped action\n  });\n\n  child.on('error', (e) => {\n    res.error(e);  // This report an error to Keymetrics\n  });\n\n});\n```\n\n## Report Caught Exceptions\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'));\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    eventLoopActive: true, // (default: true) Monitor active handles and active requests\n    eventLoopDelay: true,  // (default: true) Get event loop's average delay\n\n    // Network monitoring at the application level\n    network: {\n      traffic: true, // (default: true) Allow application level network monitoring\n      ports: true    // (default: false) Shows which ports your app is listening on\n    },\n\n    // Transaction Tracing system configuration\n    transaction: {\n      http: true,               // (default: true) HTTP routes logging\n      tracing: {                // (default: false) Enable transaction tracing\n        http_latency: 1,        // (default: 200) minimum latency in milliseconds to take into account\n        ignore_routes: ['/foo'] // (default: empty) exclude some routes\n      }\n    },\n\n    deepMetrics: {\n      mongo: true,             // (default: true) Mongo connections monitoring\n      mysql: true,             // (default: true) MySQL connections monitoring\n      mqtt: true,              // (default: true) Mqtt connections monitoring\n      socketio: true,          // (default: true) WebSocket monitoring\n      redis: true,             // (default: true) Redis monitoring\n      http: true,              // (default: true) Http incoming requests monitoring\n      https: true,             // (default: true) Https incoming requests monitoring\n      \"http-outbound\": true,   // (default: true) Http outbound requests monitoring\n      \"https-outbound\": true   // (default: true) Https outbound requests monitoring\n    },\n\n    v8: {\n      new_space: true,                    // (default: true) New objects space size\n      old_space: true,                    // (default: true) Old objects space size\n      map_space: true,                    // (default: true) Map space size\n      code_space: true,                   // (default: true) Executable space size\n      large_object_space: true,           // (default: true) Large objects space size\n      total_physical_size: false,         // (default: false) Physical heap size\n      total_heap_size: true,              // (default: true)  Heap size\n      total_available_size: false,        // (default: false) Total available size for the heap\n      total_heap_size_executable: true,   // (default: true)  Executable heap size\n      used_heap_size: true,               // (default: true)  Used heap size\n      heap_size_limit: true,              // (default: true)  Heap size maximum size\n      malloced_memory: false,             // (default: false) Allocated memory\n      peak_malloced_memory: false,        // (default: false) Peak of allocated memory\n      does_zap_garbage: false,            // (default: false) Zap garbage enable/disable\n      GC: {\n        totalHeapSize: true,              // (default: true)  GC heap size\n        totalHeapExecutableSize: true,    // (default: true)  GC executable heap size\n        usedHeapSize: true,               // (default: true)  GC used heap size\n        heapSizeLimit: false,             // (default: false) GC heap size maximum size\n        totalPhysicalSize: false,         // (default: false) GC heap physical size\n        totalAvailableSize: false,        // (default: false) GC available size\n        mallocedMemory: false,            // (default: false) GC allocated memory\n        peakMallocedMemory: false,        // (default: false) GC peak of allocated memory\n        gcType: true,                     // (default: true)  Type of GC (scavenge, mark/sweep/compact, ...)\n        gcPause: true                     // (default: true)  Duration of pause (in milliseconds)\n      }\n    },\n    worker: true, // (default false) : get number of workers and threads\n    fileRequests: true // (default false) : get requests to file system\n  },\n\n  actions: {\n    eventLoopDump: false, // (default: false) Enable event loop dump action\n    profilingCpu: true,   // (default: true) Enable CPU profiling actions\n    profilingHeap: true   // (default: true) Enable Heap profiling actions\n  }\n});\n```\n\n### Custom configuration\n\nIf you want to activate default options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: true\n  }\n})\n```\n\nIf you want to activate all options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: 'all'\n  }\n})\n```\n\nIf you want to customize a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: {\n      new_space: false, // don't take new_space into account\n      ...\n    }\n  }\n})\n```\n**Note** : if you do not disable the default options they will be kept (merged with your configuration)\n\n## Entrypoint\n\n### Usage\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStop (err, cb, code, signal) {\n      console.log(`Application stopped with code ${code} or signal ${signal} !`)\n      cb()\n    }\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n\n      http.listen(process.env.PORT || 3000, function(){\n        console.log('Server express', 'listening on port', http.address().port)\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Configuration\n\nYou can write your own configuration like you do for @pm2/io, just add a conf() method into your entrypoint which returns a json object.\nDetails of configuration can be found in this section : [**Configuration**](#configuration)\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n\n    conf() {\n      return {\n        ...\n      }\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Access @pm2/io features\n\nEntrypoint allow access to an instance of @pm2/io. So you can use all features described above by calling this.io.\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n\n      const counter = this.io.counter('start')\n\n      http.listen(process.env.PORT || 3000, () => {\n        console.log('Server express', 'listening on port', http.address().port)\n        counter.inc()\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Actions et Metrics\n\nYou can group all your actions and all your metrics into one methods.\nUse actions() and metrics(), their will be automatically called by the entrypoint.\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n\n    actions() {\n      this.io.action('db:clean', (cb) => {\n        clean.db(() => {\n          /**\n           * cb() must be called at the end of the action\n           */\n           cb({ success: true });\n        });\n      })\n    }\n\n    metrics() {\n      this.myMetric = io.metric('Inline');\n    }\n}\n\nnew MyEntrypoint()\n```\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Publishing\n\nJust run :\n```bash\n$ npm publish\n```\n\nAnd for beta\n```bash\n$ npm publish --tag beta\n```\n\n\n## License\n\nMIT\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.5.0-rc2","_npmVersion":"6.4.1","_nodeVersion":"10.11.0","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-x9ercPyx9DXsAtcRBKDE9gJjr87mGDwz5gyCoG46etpiLqPlnPgOOMxwarB3m5y0/X/4pkKTUbgjLhhMPO+Kcw==","shasum":"7deabfc9b28cf7d880f8123745ef21949a10a7b6","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.5.0-rc2.tgz","fileCount":117,"unpackedSize":568263,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbsLgnCRA9TVsSAnZWagAA8JkP+wXviSBE3cvAt/XL7KOU\nynt30VuFvZccWAgNA3eKTv3KznVBar88nCUpYNmL11CM9pLxGT/7hYHDsbm+\nD2LdBsZ2NsgW9sdayHOsXi5nb+CQJDWgb4eQLx1O+S7IFARIVpeSPi38W6mA\nxGT5WP7G93IpUQP/nA3H67sX8Yj7968u7rlGDPB69ZX3YiUDKSkg6QkpLkbo\nprW17pxgBGm1U1sIkI3sfYjA1fg3sgIfQhu9Tvm+3V+RmWpOeZcH3j3eha2D\nsU/BWIq2lE8z7eUj2lbtlIesc7UeDGHOWQ33ueeJGApDHXRDdtRSkgBNqD6n\n9qNkRdPl5hrjjApjVHEuVQ6iz3XLld5Ldg5BZRRnAxDMTKSNreN7Tm+8GMZh\nwcy7LAdcmSNNFsYD8ZMh9Z7cStIkAJLAJTxlsihhRm195tAmzjHtwxIQgeVI\n8n7LMoxibUXSymNoilVVrEEcq/TnXn+K4aCNaJfYdBtlp2lHc6c36X+aL/Uc\nxJofDGsbZ2UyLoNAXiul/BlO3aqCslLCtR5B5wWlfHodcoU8Q+9oF/UuVlyc\ndECm6NDamrQIc8Hvo1Tf1/gD0g7qPZqLXaOIix0wml2ih7r8EnS4PosSb2hk\nTOYqWb8vb7DC/1PW9SNydlIUMVX8Cfs4O7UNWpfsuW6fvViAlP4b06nWlee2\nNXId\r\n=Cohw\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.5.0-rc2_1538308134630_0.6629704179588172"},"_hasShrinkwrap":false},"2.4.2":{"name":"@pm2/io","version":"2.4.2","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","mono":"mocha --require ts-node/register --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"@pm2/agent-node":"^1.0.2","async":"^2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"^1.2.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3","vxx":"1.2.2"},"gitHead":"353f21959bded662c6c6aadcba91a22b36451ab1","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.4.2","_npmVersion":"6.4.1","_nodeVersion":"10.11.0","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-ogn7gzUQyl+MyE5+E/K7TIpdNlfzjUCCCdf5yeB1dn4sJbNjHm4ixCdPUlsQ6ifq+2463L9EU7umQO52nCeiqg==","shasum":"356764183160da3fcca89466bcb546ea3bf119a1","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.4.2.tgz","fileCount":113,"unpackedSize":552100,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbseIKCRA9TVsSAnZWagAA6A8P/Rv3pV7HkylcCp/iffTh\nwe43UY2712DPCt5NuxYAZ2ui9u+9QPMuNun+IVCr5pRgMvJff8AfUSZjF+Ww\nI+2Ca0E48cj0xfxAi10cDS1WhBqiVT6GvhGs1fCx+m6+VYSWouvg1s3nv4WI\n+QaCp0BASeqPHB0tLixl1/BPNFKy35MtdCwcIyuqBCWK8K/fOsds5Qprku+A\nbeMYvXjFcWztYxc3lC4omLtskc5EOlRB7CoKYLFVqSA/bSDyGRjSS/ysreXn\nEZM5j7+mzBGFDZoUmkE9d6BGwC4PkKMBh4bHnmRjeVgBhhJS/8iQ6SuTahG0\npdaVCGb53oz71laMVQmDDpkcA6TfWt5Avih+1o73jthFdgZCNoQ57+0B2waN\nl/JbdNT3rYYUoqD3H4VHEOiHyOP5e/ty6TTClgqwhfZdWuQflbbV7xUpzu3l\nbUjL5NGUytJNC5mEa/uW7aBCF+2m2/PviTkbT7HOyUQR2dxVW/dhBhL6MgNi\n6OazN5XNSGt4r/iLPQ2SFJr6wnB1Xo0iYjp8Z175CTnPEuvFvMr5MRGZUQAT\nH5KX68HQREftukyfpnWzEe8FbYv07Z7dWggQi5tsRuRoWpDBF+82iuhwQrS6\nN41CgC3hDbzzCCMqxwrh67tFLwT2TBMjLwcQdRVOdB1jKM2tY5+JQqcZM8E2\n5UdN\r\n=JFic\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.4.2_1538384393879_0.6920168860425602"},"_hasShrinkwrap":false},"2.4.3":{"name":"@pm2/io","version":"2.4.3","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","mono":"mocha --require ts-node/register --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"@pm2/agent-node":"^1.0.2","async":"^2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"^1.2.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3","vxx":"1.2.2"},"gitHead":"408353fe676b8525ab24937d0698a9601ea3ea6d","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.4.3","_npmVersion":"6.4.1","_nodeVersion":"10.11.0","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-u4qrFVKci8js81QXYDFAdrniOXasxWTJObXUrwOxJgtXDxITPG3h4tz3GrvvYddR7HJO+UF01x1XDhY6xOirOg==","shasum":"8a58d46f30a64f3eaec834f1f732d241fe2c7aa2","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.4.3.tgz","fileCount":113,"unpackedSize":552019,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbsffICRA9TVsSAnZWagAAg0AP/iOb0b6nQ8pIPaLzWaFU\neLRmpcHOM1B7So/+MZSeybkWPPK55DW0iZbuZkbuI7JABldQii9bZ6Dn9jRc\nB8Yz9xv7x936ZKzJl3HcLtKvHN6Nflw8iDRABXOfCkQCdaRk29b++Ult5F0n\nzELHVLPh3YfOkHL4xPTTDVJsUJIfCjfvmr/xdp+YJw4IGlE/aemzT10YUXIX\nqaJsPpqj7M1XmZI8F0/uKVggkjdezHhDbbrOk5MWrc83WPOfTlkbcXfKOpT+\nkfhVHURwmQlypux2O8cUkEjo02Mwx8F6/5WDW87u5+CnH6ztdSlISNoQqRoE\nZpK/mpxZJX8jtzUaxTw3x814QgeAwkb/xALjuq05VgIMTzrX4af4m5AuFQlV\nKbyd2gWA3ll1lyKUMNE9/stU2YdMH0hWI0QNVagVOTZT4hADkuBmBfn5Ono/\ncabFOlvOjJuZ2HhkIk4d+Pu95LdYGkN5/HnZWaBv/sCY6eIHv5iA8yMC34U+\nN9C30SbVwDjW2Qr0q5CGjP4EgaIuC6e1nC/OlJDPV5nO7PJBBLW7lhQLAuAM\nJoF/N8r29+dxwYqAE69XTmAqI3/ImJJ/Lx9teJLPe1i6tVm/VZSWd15JBJXB\n25WQw7UIaFqIjApth3qtZSt4rqXfSuQT7PB5vjKqDZufzIUvLwCjUabkqThJ\nuVWT\r\n=NBN8\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.4.3_1538389958990_0.415190745059248"},"_hasShrinkwrap":false},"2.5.0-rc3":{"name":"@pm2/io","version":"2.5.0-rc3","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","mono":"mocha --require ts-node/register --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"@opencensus/core":"^0.0.4","@opencensus/nodejs":"^0.0.4","@opencensus/propagation-tracecontext":"^0.0.4","@pm2/agent-node":"^1.0.2","async":"^2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"^1.2.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 part responsible for gathering the metrics, reporting exceptions, exposing remote actions and every outside interaction with your application.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Report Custom Events (deprecated)**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-custom-events-deprecated)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Entrypoint**](https://github.com/keymetrics/pm2-io-apm/tree/master#entrypoint)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in `pm2 monit` or in the Keymetrics dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n});\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **type**: The type of metric (default 'metric', string)\n- **agg_type**: type of aggregation (default 'avg'; string: )\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **metric**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Passive Mode\n\n```javascript\nconst io = require('@pm2/io');\n\nio.metric({\n  name: 'Realtime user',\n  value: function() {\n    return Object.keys(users).length;\n  }\n});\n```\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst Realtime_Value = io.metric({\n  name: 'Realtime Value'\n});\n\nRealtime_Value.set(23);\n```\n\n#### Inline Mode\n\nIn inline mode, you can create a probe with a simple string.\n\n```javascript\nconst metric = io.metric('Inline');\n\nmetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst Current_req_processed = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  Current_req_processed.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    Current_req_processed.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from Keymetrics.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    /**\n     * cb() must be called at the end of the action\n     */\n     cb({ success: true });\n  });\n});\n```\n\n### Scoped actions (beta)\n\nScoped Actions are advanced remote actions that can be also triggered from Keymetrics.\n\nTwo arguments are passed to the function, data (optional data sent from Keymetrics) and res that allows to emit log data and to end the scoped action.\n\nExample:\n\n```javascript\nio.scopedAction('long running lsof', (data, res) => {\n  const child = spawn('lsof', []);\n\n  child.stdout.on('data', (chunk) => {\n    chunk.toString().split('\\n').forEach(function(line) {\n      res.send(line); // This send log to Keymetrics to be saved (for tracking)\n    });\n  });\n\n  child.stdout.on('end', (chunk) => {\n    res.end('end'); // This end the scoped action\n  });\n\n  child.on('error', (e) => {\n    res.error(e);  // This report an error to Keymetrics\n  });\n\n});\n```\n\n## Report Caught Exceptions\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'));\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    eventLoopActive: true, // (default: true) Monitor active handles and active requests\n    eventLoopDelay: true,  // (default: true) Get event loop's average delay\n\n    // Network monitoring at the application level\n    network: {\n      traffic: true, // (default: true) Allow application level network monitoring\n      ports: true    // (default: false) Shows which ports your app is listening on\n    },\n\n    // Transaction Tracing system configuration\n    transaction: {\n      http: true,               // (default: true) HTTP routes logging\n      tracing: {                // (default: false) Enable transaction tracing\n        http_latency: 1,        // (default: 200) minimum latency in milliseconds to take into account\n        ignore_routes: ['/foo'] // (default: empty) exclude some routes\n      }\n    },\n\n    deepMetrics: {\n      mongo: true,             // (default: true) Mongo connections monitoring\n      mysql: true,             // (default: true) MySQL connections monitoring\n      mqtt: true,              // (default: true) Mqtt connections monitoring\n      socketio: true,          // (default: true) WebSocket monitoring\n      redis: true,             // (default: true) Redis monitoring\n      http: true,              // (default: true) Http incoming requests monitoring\n      https: true,             // (default: true) Https incoming requests monitoring\n      \"http-outbound\": true,   // (default: true) Http outbound requests monitoring\n      \"https-outbound\": true   // (default: true) Https outbound requests monitoring\n    },\n\n    v8: {\n      new_space: true,                    // (default: true) New objects space size\n      old_space: true,                    // (default: true) Old objects space size\n      map_space: true,                    // (default: true) Map space size\n      code_space: true,                   // (default: true) Executable space size\n      large_object_space: true,           // (default: true) Large objects space size\n      total_physical_size: false,         // (default: false) Physical heap size\n      total_heap_size: true,              // (default: true)  Heap size\n      total_available_size: false,        // (default: false) Total available size for the heap\n      total_heap_size_executable: true,   // (default: true)  Executable heap size\n      used_heap_size: true,               // (default: true)  Used heap size\n      heap_size_limit: true,              // (default: true)  Heap size maximum size\n      malloced_memory: false,             // (default: false) Allocated memory\n      peak_malloced_memory: false,        // (default: false) Peak of allocated memory\n      does_zap_garbage: false,            // (default: false) Zap garbage enable/disable\n      GC: {\n        totalHeapSize: true,              // (default: true)  GC heap size\n        totalHeapExecutableSize: true,    // (default: true)  GC executable heap size\n        usedHeapSize: true,               // (default: true)  GC used heap size\n        heapSizeLimit: false,             // (default: false) GC heap size maximum size\n        totalPhysicalSize: false,         // (default: false) GC heap physical size\n        totalAvailableSize: false,        // (default: false) GC available size\n        mallocedMemory: false,            // (default: false) GC allocated memory\n        peakMallocedMemory: false,        // (default: false) GC peak of allocated memory\n        gcType: true,                     // (default: true)  Type of GC (scavenge, mark/sweep/compact, ...)\n        gcPause: true                     // (default: true)  Duration of pause (in milliseconds)\n      }\n    },\n    worker: true, // (default false) : get number of workers and threads\n    fileRequests: true // (default false) : get requests to file system\n  },\n\n  actions: {\n    eventLoopDump: false, // (default: false) Enable event loop dump action\n    profilingCpu: true,   // (default: true) Enable CPU profiling actions\n    profilingHeap: true   // (default: true) Enable Heap profiling actions\n  }\n});\n```\n\n### Custom configuration\n\nIf you want to activate default options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: true\n  }\n})\n```\n\nIf you want to activate all options of a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: 'all'\n  }\n})\n```\n\nIf you want to customize a section :\n```javascript\nconst io = require('@pm2/io')\n\nio.init({\n  metrics: {\n    v8: {\n      new_space: false, // don't take new_space into account\n      ...\n    }\n  }\n})\n```\n**Note** : if you do not disable the default options they will be kept (merged with your configuration)\n\n## Entrypoint\n\n### Usage\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStop (err, cb, code, signal) {\n      console.log(`Application stopped with code ${code} or signal ${signal} !`)\n      cb()\n    }\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n\n      http.listen(process.env.PORT || 3000, function(){\n        console.log('Server express', 'listening on port', http.address().port)\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Configuration\n\nYou can write your own configuration like you do for @pm2/io, just add a conf() method into your entrypoint which returns a json object.\nDetails of configuration can be found in this section : [**Configuration**](#configuration)\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n\n    conf() {\n      return {\n        ...\n      }\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Access @pm2/io features\n\nEntrypoint allow access to an instance of @pm2/io. So you can use all features described above by calling this.io.\n\n```javascript\nconst app = require('express')()\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    onStart (cb) {\n\n      const http = require('http').Server(app)\n\n      app.get('/ok', function(req, res) {\n        res.send('Ok')\n      });\n\n      const counter = this.io.counter('start')\n\n      http.listen(process.env.PORT || 3000, () => {\n        console.log('Server express', 'listening on port', http.address().port)\n        counter.inc()\n        cb()\n      });\n    }\n}\n\nnew MyEntrypoint()\n```\n\n### Actions et Metrics\n\nYou can group all your actions and all your metrics into one methods.\nUse actions() and metrics(), their will be automatically called by the entrypoint.\n\n```javascript\nconst io = require('@pm2/io')\n\nclass MyEntrypoint extends io.Entrypoint {\n\n    ...\n\n    actions() {\n      this.io.action('db:clean', (cb) => {\n        clean.db(() => {\n          /**\n           * cb() must be called at the end of the action\n           */\n           cb({ success: true });\n        });\n      })\n    }\n\n    metrics() {\n      this.myMetric = io.metric('Inline');\n    }\n}\n\nnew MyEntrypoint()\n```\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Publishing\n\nJust run :\n```bash\n$ npm publish\n```\n\nAnd for beta\n```bash\n$ npm publish --tag beta\n```\n\n\n## License\n\nMIT\n","readmeFilename":"README.md","gitHead":"8d05f9d9b306cad5579c4222ea8efbace67f2bf8","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.5.0-rc3","_npmVersion":"6.4.1","_nodeVersion":"10.11.0","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-doynO665vXgW+D2hdd7z9O+RHDH0QISu2w9vCw0PHRZjQZWgPbsfXALTJS8gvOy/3/VC4sn/zOdV4pmVb584Hw==","shasum":"e1f0a2a651ef0f473b02fab65ab7799049853d85","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.5.0-rc3.tgz","fileCount":117,"unpackedSize":615131,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbs2C+CRA9TVsSAnZWagAAO1EQAJ03S4NK6mB20HaqWGpK\n+D0D5E+xkh0qSauIlerJlwv5f9+BxOU7p5mEwEXNCc7batEwlz42D/AVtTDt\n0xXjWM1pJOvklOJFER73SSWee8G6Ob517PGayuyII63Nu2YiLaa7NpQ+VmIm\nJn15RtKMZ7F0cqdYp1iMdEJfW2wgOtd2X3RhUdnWekgDT3WNrZuB6rtkvRwP\n6ApNJPUUM9MPNz3/N6XEKId0pSru3IuzF7XTKS55tHmYQTQnOlBub98t2AkI\n911WpXRDf3D9mPx7d57DU7zVeFe2nFTvsc+K0wcEBmRmAMc8tELr/3j9X73j\nVIo+Ol26Vyb0w7ITE2BE/bRqzUtlTISuzgfj5BETiSWiL/jnX5TXkHyQfEFA\nxXHL+1EYk/arultyeNzg6+u6r+bn9hVqGGyj6Gzul3vNdaLh1IMZ0nb7ZmVZ\nSlIfz2dQb1TS85CvQ5IgbuipAMqU1tPKbOsaH23Qeti8cpQ1IbpQ7CA2CYOG\nPwOQb4IXRzzYBr2g6tePEfU/5J5EFW/t/8GqYqXPRjgRHPBkbAl7NTf3ywBU\nJbQVEmG1I0IApKGh1Z2SFUJigdS6UvtgFwXOx+QgDJD+OCkmDY29riKE+3O9\nzqcjw/3BqfQCAexrbeqrBsP48a3/sBq5sJraVR+MunhFIs39Gmzwk8jyrD6L\n95wJ\r\n=QtKz\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.5.0-rc3_1538482365977_0.3558262464234634"},"_hasShrinkwrap":false},"2.4.4":{"name":"@pm2/io","version":"2.4.4","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","mono":"mocha --require ts-node/register --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"@pm2/agent-node":"^1.0.5","async":"^2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"^1.2.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3","vxx":"1.2.2"},"gitHead":"a5623c12955a74d5140d4bf050360f607935ad91","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.4.4","_npmVersion":"6.2.0","_nodeVersion":"10.9.0","_npmUser":{"name":"eywek","email":"contact@eywek.fr"},"dist":{"integrity":"sha512-AcOUJhVc6uaxj9gTz/mcHrR0hKg5dUI/ijfq2DInuEsN1x/8ZEbWJB3sHM80WbN9BpwzA9CVG1uvdoH32ARIHQ==","shasum":"62d673327d4b75f6115634cfaec8aa272f9a64c5","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.4.4.tgz","fileCount":113,"unpackedSize":552266,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbtikHCRA9TVsSAnZWagAABPoP/j6XBxaa9hirFxVLB60u\nb7l+xhc2qYDgsSJmeh2HosXG5WKWsVzneXVTj7LvFDRb5KpVfcOh6DhnouMy\nGfcNL72Pk7sJ27Pm+Q2IF5dzws1V7W2tgVfpqGe2zlCSjOOJz+R2UFZMtBtU\nB80aFRDSYreGwUsSvuLV5sVmYoLG5e39nfHWh54dF9cOFRniuXCQjCzxFp8R\nZUGZdcf38HT/MZ9Yycxvzg+MLMSB8OUFUn8Hv16mV3vKzKM5blkFmP6KShTb\nK3Pyr+KNcBTCmP/cQmLrrLTJVIjx2PiWOdYGuThz6L3bXGOYvF3cKktRZBFe\nclV6mKB5NYYxCh4KbMhXYuSWCpn69+PYaNUDnuXN5fEAu9ApOpg/MhGtuVsi\nol7oDPSOtcONki/uAH48I4g/0GDu5+uXd5v39+PUFn9oyllBs7Vr6rAWqeuA\nrs5BqLBxYjp+68JTeGjWwuw0tKwsBt8cRvTzMz6wtHV0C5KLrAWqMLRDJx8/\nSiiQamgvtZixcKOxgXNa6LEMxshYrtu7+xmtxA2beqRsRSy041QL86/kPgrS\nAHui0Ykffx6abkaZv9Fbo5ABcKo8Th2O4p70JYAcIKqWE60Xc0va1r9sb7VN\nnMOReFq94UnUwABTqYSS7WGqOYNOYgzvmfTca3Xrz0EW2I/9a/ad6rUKD/kx\nuVzA\r\n=qDmH\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.4.4_1538664710562_0.8219397585920896"},"_hasShrinkwrap":false},"2.4.5":{"name":"@pm2/io","version":"2.4.5","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","mono":"mocha --require ts-node/register --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"@pm2/agent-node":"^1.0.6","async":"^2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"^1.2.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3","vxx":"1.2.2"},"gitHead":"bb3347576d6e614adaa64276d235b441b55706f2","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.4.5","_npmVersion":"6.1.0","_nodeVersion":"10.6.0","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-+JPRL7T/5uoLzUnYV5SlrU1jWNOVfSRBeX386cx68EpotWRH0qS9HjGwh+DjBTeMRdvI9aVyhiBYqqRq8Lb6eg==","shasum":"17971da22ff716ded4a3db5e0372daf5c1e2f851","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.4.5.tgz","fileCount":113,"unpackedSize":552272,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbvKdDCRA9TVsSAnZWagAAn+0P/0hj+Q3OuBHa3HPuAwsl\njN4LVZokEu1b/cZE9bNRSAUjBVKF7TCEnyqqtakjWAQnHgYLLid0/PVKNF0X\nKbUgErfCfwDbrZ0G5vIQLXIm5p2BHBFFftgd32Pn+JTkCScnbZV6eRKBnENA\nyXQTUEjv0KWdW+iwRynAJXsDiXwal3qyo7dzzCk9GZ+0j+nBcKH488I/k9KC\n6/EktbLt+Z6u+9CDLHvTmwE2C4Pc9jGny7kg+AVD2sBL7tT7KzujyvjN2lLl\nmo+LnTU8rzsNcyA427nNt3svFblBN0Z9TFnp+ZB5++x9Xbgh/scVnItdj5dk\nCOBI2L3W8+mLa4UNJ/5KFsdlsQxRH9UO3EjsgOBD9yZxijq/6Jgyh1Dhh4ky\n9fcp51e/FQzXvycf+INsUsIxHNsZvOd0Ij2XiYs2JXrPEluSdOFaO0HuZ7bV\nIGI1jt36iJjSGhiaNylTUDDhg1wrZ3lgTr9i7/Qw/gX+v8QyhPQBneAyssEo\nOE1cyAfwfoW+LY9/Q/HGYatlBxV5pBosiAXX4tPUzcEZ/TkRZkwo6YLxQ5CI\noJ70Nr1HoQW/EbB1yh1G0h7CYtK41RGVVz1/Kei7sj2PwmAeLZ7KpEqni8cn\nRBvAYvkE73xOkejr9bMPU/JY+cVumrgEVzgvHWfHkVKWb5wOb8zhzHZm1j2R\np8+t\r\n=qgHx\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"},{"email":"wallet77@gmail.com","name":"wallet77"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.4.5_1539090242601_0.8998667343190725"},"_hasShrinkwrap":false},"2.4.6":{"name":"@pm2/io","version":"2.4.6","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","mono":"mocha --require ts-node/register --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"@pm2/agent-node":"^1.0.9","async":"^2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"^1.2.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3","vxx":"1.2.2"},"gitHead":"aee5e0691246862741239f147edb66fe0b45b363","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.4.6","_npmVersion":"6.4.1","_nodeVersion":"10.13.0","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-hI3rl8u4XKQXbDzXYAdlzDYxds0gOCEMUaeSXCt/LmVyKtLeF88T+Oy2JryfQYmSqu06EdkI9xA1AUkedwhkhw==","shasum":"3bf44fd8396f9058cd2fd2a282e2c95f240f9658","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.4.6.tgz","fileCount":113,"unpackedSize":562992,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb8tfICRA9TVsSAnZWagAA3bUP/1WzdFUNvsCh78qKRnPo\ni5eMsOqtdsSzwVt2ck+Ot1K5cf8rv50YKjL25UzaixTQANDYf6HIhT0DM8yr\n96MalRvhLDCFYMbf8qEs9ZhS1e0H24RguvZ4K65fXr0zPFMCoBEUuPIJmYNO\nHYFmXftGr3W7Z/k67SL5Ww4eAC4UZnnQRUQVe82xDebwnTsfS1d81haFN2EW\nQ2wSnBBd7YXYPwioajwda7JZdHCoDdXM7/Jx1psbnJ9OOOCbBamfQo84aMqg\n8r+ZIjyVL6A10xEL6LhM7q4zFJX3S8q29k55ElzAGSIJF/1DwZhJZMFJejgH\ngKpL21FSltSD9Wa1a4xwTcawUNshlZjpBBAlNky65StJe5pz/TPHjB0CkJ7+\n87pC4RPMZtJhJV5s2k6tR6fpkjYHveKNrXpE1dY9Ju8QPqLYh0kWRqB1BWdL\nJ6ufjb5WieM08ty1k7TjeJHASja6wJCo1fDXW+v3Skk+R8BO85TSC/j5w4D1\nP74rPpZMw5sZ/uxmOmxBUZoYOdFZX2yG4lTZgZqzXVoLt1w8Fa8DDhInUBgX\n1NSSx32qO4AEeKGjpI1RMQG+NCMymfUknur7gHvr5fbq90xUT72TGDpScH4D\naJkWiZ0XQEk0EmSRhQ5+6FEnqHKO8Wop1pVCP/hnLjvoIssYXlXYigr5pLUu\nSK0C\r\n=fa/w\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.4.6_1542641607347_0.5780316905416039"},"_hasShrinkwrap":false},"2.4.7":{"name":"@pm2/io","version":"2.4.7","description":"<div align=\"center\">   <a href=\"http://pm2.keymetrics.io\">     <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">   </a>   <br/>   <br/>   <a href=\"https://github.com/keymetrics/pm2-io-apm\">     <img s","main":"build/main/src/index.js","typings":"build/main/src/index.d.ts","types":"build/main/src/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"Vincent Vallet","email":"vincent@pm2.io","url":"https://pm2.io"},"license":"MIT","scripts":{"info":"npm-scripts-info","build":"trash build && yarn build:main","build:main":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && yarn copy && nyc mocha -r ts-node/register ./test/**/*.spec.ts ./test/*.spec.ts --expose-gc","mono":"mocha --require ts-node/register --expose-gc","copy":"copyfiles test/**/*.json build/main/","test":"yarn lint && yarn unit","watch":"tsc -w","cov":"yarn unit && yarn html-coverage && opn coverage/index.html","html-coverage":"nyc report --reporter=html","send-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov -t $CODECOV_TOKEN","docs":"yarn docs:html && opn build/docs/index.html","docs:html":"typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs","docs:json":"typedoc --mode file --json build/docs/typedoc.json src/index.ts","docs:publish":"yarn docs:html && gh-pages -d build/docs","prepublishOnly":"yarn build"},"scripts-info":{"info":"Display information about the scripts","build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests","cov":"Run tests, generate the HTML coverage report, and open it in a browser","docs":"Generate HTML API documentation and open it in a browser","docs:publish":"Generate HTML API documentation and push it to GitHub Pages","docs:json":"Generate API documentation in typedoc JSON format"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","codecov":"3.0.4","concurrently":"3.6.0","copyfiles":"2.0.0","express":"4.16.3","gh-pages":"1.2.0","mocha":"5.2.0","npm-scripts-info":"0.3.7","nyc":"12.0.2","trash-cli":"1.4.0","ts-node":"7.0.0","tslint":"5.11.0","tslint-config-standard":"7.1.0","typedoc":"0.11.1","typescript":"2.9.2","typings":"2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/main/test/**/*","test/**/*"]},"dependencies":{"@pm2/agent-node":"^1.0.9","async":"^2.6.1","debug":"3.1.0","deep-metrics":"0.0.2","deepmerge":"2.1.1","event-loop-inspector":"^1.2.0","json-stringify-safe":"5.0.1","semver":"5.5.0","signal-exit":"3.0.2","tslib":"1.9.3","vxx":"1.2.2"},"gitHead":"4d894dc5b0226830338455221e376fd39c824ccf","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@2.4.7","_npmVersion":"6.4.1","_nodeVersion":"10.13.0","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-01IQBBeIFUO6Gs3mVDfoDYcZ3cbaN66gPo6guVQTfhiTv1+ftQlSuZH64dO+41wKbUYgDrXnIvFHR99bnpqj8Q==","shasum":"153ce2a3827a115c8437315d9da71aae36fc5558","tarball":"https://registry.npmjs.org/@pm2/io/-/io-2.4.7.tgz","fileCount":113,"unpackedSize":563006,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb8uW4CRA9TVsSAnZWagAAsHAP/RiaQLRoZx79diHfXa+R\n3P3R4kLuTCK/4VxfYCvucxyoH5ztuGAxOKI2ixdWvlzdDEA7mJKAF1n5zHhN\nM+1sXP9Yx+Kl8vVcOiaBg6qaeg594KikC/5rC3M+ugCU2ke1BMwKE6D89ED8\nBzlkvyzbRvmQP7jrvCCCD8xN2hK8wVYRqroQsY5kioetFJYWw4yWdmLLJx7f\nLlEkmR5MU7mRGMN+u/L5viGXtQMxGD4punNcjJWgu1gTlZtHrKTixeyXVQYD\nLd+5AfdTgoFTbAnKhbMXFP7+tWo6K7EzPhDIMRhxjKNBLTqJvwfBG2hRzevJ\nEEyQkdUbMsDztvdNs6k/f7REjNWfWJ9ycpWMiNjRIWOYtRzLGo0YpZnZDd3P\nirwweOA26XLPj+Sun8POY86d2E/G3PGrfUEg3YIislg4ixzw7epSYm9/nmN/\nzNkbOKxE0Z5lgRAc5JTRow2gwwktxtCpVJcBlPuvxmY7jo/t9bXJLOAMe+4q\n5l+aT6CK2HLvgSyZYeD+7rCRS/zh/UWSj7qChhxako+nKfhrWYyNlDjtgw6g\nx0ZO/Jr3bQcHz49ru/aLEEgRYzp/MVwSu8TKsi7FtPnTNtRHsGHc/neHksTe\nffwXAPNIxBzLmrQ9ff9F5slDjcbzHSgkvS0Vd3ggPY2sFI+han8qpsRGJwc6\nVRLp\r\n=9BMc\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_2.4.7_1542645175408_0.7505398196323614"},"_hasShrinkwrap":false},"3.0.0-alpha.1":{"name":"@pm2/io","version":"3.0.0-alpha.1","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"MIT","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","mocha":"^5.2.0","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2","typings":"^2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@pm2/agent-node":"^1.0.13","@pm2/legacy-tracing":"^1.4.2","async":"^2.6.1","debug":"3.1.0","event-loop-inspector":"^1.2.0","eventemitter2":"^5.0.1","semver":"5.5.0","shimmer":"^1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 library responsible for gathering the metrics, reporting exceptions, exposing remote actions and every interaction with your application.\n\nYou can also use it as a standalone agent, if you want to connect your nodejs process to PM2 Enterprise but without having to launch your application with PM2.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n- [**Notes**](https://github.com/keymetrics/pm2-io-apm/tree/master#notes)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in the PM2 Plus/Enterprise dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst users = io.metric({\n  name: 'Realtime user',\n});\nusers.set(10)\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **id**: The type of metric (default 'metric', string)\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **gauge**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst myMetric = io.metric({\n  name: 'Realtime Value'\n});\n\nmyMetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst currentReq = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  currentReq.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    currentReq.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from PM2 Plus or Enterprise.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    // cb must be called at the end of the action\n    return cb({ success: true });\n  });\n});\n```\n\n## Report user error\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'), {\n  // you can some http context that will be reported in the UI\n  http: {\n    url: req.url\n  },\n  // or anything that you can like an user id\n  custom: {\n    user: req.user.id\n  }\n});\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nexport class IOConfig {\n  /**\n   * Automatically catch unhandled errors\n   */\n  catchExceptions?: boolean = true\n  /**\n   * Configure the metrics to add automatically to your process\n   */\n  metrics?: {\n    eventLoop: boolean = true,\n    network: boolean = false,\n    http: boolean = true,\n    gc: boolean = true,\n    v8: boolean = true\n  }\n  /**\n   * Configure the default actions that you can run\n   */\n  actions?: {\n    eventLoopDump?: boolean = true\n  }\n  /**\n   * Configure availables profilers that will be exposed\n   */\n  profiling?: {\n    /**\n     * Toggle the CPU profiling actions\n     */\n    cpuJS: boolean = true\n    /**\n     * Toggle the heap snapshot actions\n     */\n    heapSnapshot: boolean = true\n    /**\n     * Toggle the heap sampling actions\n     */\n    heapSampling: boolean = true\n    /**\n     * Force a specific implementation of profiler\n     * \n     * available: \n     *  - 'addon' (using the v8-profiler-node8 addon)\n     *  - 'inspector' (using the \"inspector\" api from node core)\n     *  - 'none' (disable the profilers)\n     *  - 'both' (will try to use inspector and fallback on addon if available)\n     */\n    implementation: string = 'both'\n  }\n  /**\n   * Configure the transaction tracing options\n   */\n  tracing?: {\n    /**\n     * Choose to enable the HTTP tracing system\n     * \n     * default is false\n     */\n    enabled: boolean = false\n    /**\n     * Specify specific urls to ignore\n     */\n    ignoreFilter?: {\n      url?: string[]\n      method?: string[]\n    }\n    // Log levels: 0-disabled,1-error,2-warn,3-info,4-debug\n    logLevel?: number\n    /**\n     * To disable a plugin in this list, you may override its path with a falsy\n     * value. Disabling any of the default plugins may cause unwanted behavior,\n     * so use caution.\n     */\n    plugins?: {\n      connect?: boolean\n      express?: boolean\n      'generic-pool'?: boolean\n      hapi?: boolean\n      http?: boolean\n      knex?: boolean\n      koa?: boolean\n      'mongodb-core'?: boolean\n      mysql?: boolean\n      pg?: boolean\n      redis?: boolean\n      restify?: boolean\n    }\n    /**\n     * An upper bound on the number of traces to gather each second. If set to 0,\n     * sampling is disabled and all traces are recorded. Sampling rates greater\n     * than 1000 are not supported and will result in at most 1000 samples per\n     * second.\n     */\n    samplingRate?: number\n  }\n  /**\n   * If you want to connect to PM2 Enterprise without using PM2, you should enable\n   * the standalone mode\n   * \n   * default is false\n   */\n  standalone?: boolean = false\n  /**\n   * Define custom options for the standalone mode\n   */\n  apmOptions?: {\n    /**\n     * public key of the bucket to which the agent need to connect\n     */\n    publicKey: string\n    /**\n     * Secret key of the bucket to which the agent need to connect\n     */\n    secretKey: string\n    /**\n     * The name of the application/service that will be reported to PM2 Enterprise\n     */\n    appName: string\n    /**\n     * The name of the server as reported in PM2 Enterprise\n     *\n     * default is os.hostname()\n     */\n    serverName?: string\n    /**\n     * Broadcast all the logs from your application to our backend\n     */\n    sendLogs?: Boolean\n    /**\n     * Since logs can be forwared to our backend you may want to ignore specific\n     * logs (containing sensitive data for example)\n     */\n    logFilter?: string | RegExp\n    /**\n     * Proxy URI to use when reaching internet\n     * Supporting socks5,http,https,pac,socks4\n     * see https://github.com/TooTallNate/node-proxy-agent\n     *\n     * example: socks5://username:password@some-socks-proxy.com:9050\n     */\n    proxy?: string\n  }\n}\n```\n\nYou can pass whatever options you want to `io.init`, it will automatically update its configuration.\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Notes\n\nCurently this package isn't compatible with `amqp` if you use the `network` metrics. We recommend to disable the metrics with the following configuration in this case :\n\n```javascript\nio.init({\n  metrics: {\n    network: false\n  }\n})\n```\n\n## Publishing\n\nJust run :\n```bash\n$ npm publish\n```\n\nAnd for beta\n```bash\n$ npm publish --tag beta\n```\n\n\n## License\n\nMIT\n","readmeFilename":"README.md","gitHead":"3369dc12ac1dfc9e34529e0df53b31dc656dad08","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@3.0.0-alpha.1","_npmVersion":"6.4.1","_nodeVersion":"10.14.1","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-KDP0jiKknRrh02+1ZAXUz1hWS6FWDklzD3Nks9BlsqiJQTRQLkBZQ7vi9TCUuggLHHdf2UUFRls/qoM6EY6yHg==","shasum":"92db003a811979046da4e901e212cb0aae5950b5","tarball":"https://registry.npmjs.org/@pm2/io/-/io-3.0.0-alpha.1.tgz","fileCount":83,"unpackedSize":442479,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcD9SbCRA9TVsSAnZWagAAwCQP/RsvabBCcWxZeEMPo0d7\nbbm+vGFCqZYEbv6Te0lj7HSWygkNortNBYQDR1rtVae5VSlNnRRaqIWf3KQr\nuQTzE6Sq5QNtpy2Wm/IQSCvIb+jhAkMOlNbDVOdvkg91GQ3LX07q0MzFgE+w\nU6o/HrjZ6o4afH3cH1hrtxYSBs51/hlKrPRwxThevslffAh1+k5c+513JPR+\nZeMbwNcVo7ZYmHwUkhJkCWp5NMOV3jsOdcm/N5gGGswcDSXt8xOX36feDlBf\nLsrZMWuQ3WBM7EdFn5ju7+wyTFKGA2REMwq7kzN3jGkI6R9MRP4BiXdVOW7y\nG8NMllE14OBy0vCXOft1ifFU4Gt3s9MYQ2rBmGu7JrI+e2GZ3S/CUiktibdU\nJIrLfA3LVJ1T60ZTWuCqinG/z/42mCuMo2xigppKvePn9teB3lMsm3rH46HI\nug9uExux4yMz+prywiVhCk0JeEbZKvz6/Fnlc28sLnw5+7Q/iHwiD78vx1H2\n7VqDGzMJW6y7x1YUkqWll1klraqOBJMN0BMC0G/Dx1dO0+GKwRxTz+iXw9UQ\ni2pFJLzMIdAlHPj+BGMsZwjPX06eS6EMk2ur+Cj7aDF4b55cxo1zAFCNtFv+\nL3sxS6BzpfX0DGlhfL2ahWNlNOb3mG1DB0uJRPWp+zvbNiJy3TBRKUl57JPD\nCW5L\r\n=6MIO\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_3.0.0-alpha.1_1544541338619_0.5960816616315026"},"_hasShrinkwrap":false},"3.0.0-alpha.2":{"name":"@pm2/io","version":"3.0.0-alpha.2","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"MIT","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","mocha":"^5.2.0","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2","typings":"^2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@pm2/agent-node":"^1.0.13","@pm2/legacy-tracing":"^1.4.2","async":"^2.6.1","debug":"3.1.0","event-loop-inspector":"^1.2.0","eventemitter2":"^5.0.1","semver":"5.5.0","shimmer":"^1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 library responsible for gathering the metrics, reporting exceptions, exposing remote actions and every interaction with your application.\n\nYou can also use it as a standalone agent, if you want to connect your nodejs process to PM2 Enterprise but without having to launch your application with PM2.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n- [**Notes**](https://github.com/keymetrics/pm2-io-apm/tree/master#notes)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in the PM2 Plus/Enterprise dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst users = io.metric({\n  name: 'Realtime user',\n});\nusers.set(10)\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **id**: The type of metric (default 'metric', string)\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **gauge**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst myMetric = io.metric({\n  name: 'Realtime Value'\n});\n\nmyMetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst currentReq = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  currentReq.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    currentReq.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from PM2 Plus or Enterprise.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    // cb must be called at the end of the action\n    return cb({ success: true });\n  });\n});\n```\n\n## Report user error\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'), {\n  // you can some http context that will be reported in the UI\n  http: {\n    url: req.url\n  },\n  // or anything that you can like an user id\n  custom: {\n    user: req.user.id\n  }\n});\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nexport class IOConfig {\n  /**\n   * Automatically catch unhandled errors\n   */\n  catchExceptions?: boolean = true\n  /**\n   * Configure the metrics to add automatically to your process\n   */\n  metrics?: {\n    eventLoop: boolean = true,\n    network: boolean = false,\n    http: boolean = true,\n    gc: boolean = true,\n    v8: boolean = true\n  }\n  /**\n   * Configure the default actions that you can run\n   */\n  actions?: {\n    eventLoopDump?: boolean = true\n  }\n  /**\n   * Configure availables profilers that will be exposed\n   */\n  profiling?: {\n    /**\n     * Toggle the CPU profiling actions\n     */\n    cpuJS: boolean = true\n    /**\n     * Toggle the heap snapshot actions\n     */\n    heapSnapshot: boolean = true\n    /**\n     * Toggle the heap sampling actions\n     */\n    heapSampling: boolean = true\n    /**\n     * Force a specific implementation of profiler\n     * \n     * available: \n     *  - 'addon' (using the v8-profiler-node8 addon)\n     *  - 'inspector' (using the \"inspector\" api from node core)\n     *  - 'none' (disable the profilers)\n     *  - 'both' (will try to use inspector and fallback on addon if available)\n     */\n    implementation: string = 'both'\n  }\n  /**\n   * Configure the transaction tracing options\n   */\n  tracing?: {\n    /**\n     * Choose to enable the HTTP tracing system\n     * \n     * default is false\n     */\n    enabled: boolean = false\n    /**\n     * Specify specific urls to ignore\n     */\n    ignoreFilter?: {\n      url?: string[]\n      method?: string[]\n    }\n    // Log levels: 0-disabled,1-error,2-warn,3-info,4-debug\n    logLevel?: number\n    /**\n     * To disable a plugin in this list, you may override its path with a falsy\n     * value. Disabling any of the default plugins may cause unwanted behavior,\n     * so use caution.\n     */\n    plugins?: {\n      connect?: boolean\n      express?: boolean\n      'generic-pool'?: boolean\n      hapi?: boolean\n      http?: boolean\n      knex?: boolean\n      koa?: boolean\n      'mongodb-core'?: boolean\n      mysql?: boolean\n      pg?: boolean\n      redis?: boolean\n      restify?: boolean\n    }\n    /**\n     * An upper bound on the number of traces to gather each second. If set to 0,\n     * sampling is disabled and all traces are recorded. Sampling rates greater\n     * than 1000 are not supported and will result in at most 1000 samples per\n     * second.\n     */\n    samplingRate?: number\n  }\n  /**\n   * If you want to connect to PM2 Enterprise without using PM2, you should enable\n   * the standalone mode\n   * \n   * default is false\n   */\n  standalone?: boolean = false\n  /**\n   * Define custom options for the standalone mode\n   */\n  apmOptions?: {\n    /**\n     * public key of the bucket to which the agent need to connect\n     */\n    publicKey: string\n    /**\n     * Secret key of the bucket to which the agent need to connect\n     */\n    secretKey: string\n    /**\n     * The name of the application/service that will be reported to PM2 Enterprise\n     */\n    appName: string\n    /**\n     * The name of the server as reported in PM2 Enterprise\n     *\n     * default is os.hostname()\n     */\n    serverName?: string\n    /**\n     * Broadcast all the logs from your application to our backend\n     */\n    sendLogs?: Boolean\n    /**\n     * Since logs can be forwared to our backend you may want to ignore specific\n     * logs (containing sensitive data for example)\n     */\n    logFilter?: string | RegExp\n    /**\n     * Proxy URI to use when reaching internet\n     * Supporting socks5,http,https,pac,socks4\n     * see https://github.com/TooTallNate/node-proxy-agent\n     *\n     * example: socks5://username:password@some-socks-proxy.com:9050\n     */\n    proxy?: string\n  }\n}\n```\n\nYou can pass whatever options you want to `io.init`, it will automatically update its configuration.\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Notes\n\nCurently this package isn't compatible with `amqp` if you use the `network` metrics. We recommend to disable the metrics with the following configuration in this case :\n\n```javascript\nio.init({\n  metrics: {\n    network: false\n  }\n})\n```\n\n## Publishing\n\nJust run :\n```bash\n$ npm publish\n```\n\nAnd for beta\n```bash\n$ npm publish --tag beta\n```\n\n\n## License\n\nMIT\n","readmeFilename":"README.md","gitHead":"7a344a42ebb47b6426cc02f0610e6dbf2239bc6d","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@3.0.0-alpha.2","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-4aWF5WMq/njeO89OMqF3ps93B6CXxw1XT5c3VLNuZSNZNNL8RmMposfjKSkzTzRW8VRbB+I1BMtLKBTWgcTr5w==","shasum":"e4d0dfbaf3890cc0ae5e7151f46e915c9aa8b540","tarball":"https://registry.npmjs.org/@pm2/io/-/io-3.0.0-alpha.2.tgz","fileCount":83,"unpackedSize":442606,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcENyfCRA9TVsSAnZWagAAlfcP/jG2z8cMAjcDeITE6zIq\npR8WppPrjJty+yzzKs7+7m0fP79yJxcKik1tmxu+o7VNJtDDLAyap+WgzD9U\n1XV2qpxhJ1i9ZahXIHBpHiqUSXlFAHmwF9hcNw9aF6ZTSQO0uj3uvc3Rmj7D\n1hBg6DveDfyg4mCnxjefrvU3ZZkBsvGpHSmgovX/fDG0g91DbKER3l6qNwaC\nolxBz2AlvQ9/5YBEoAvcu3LavoO8gi1HKKaFLIGHlo+J2tw/Nj2UeRLVqzb0\nv039BcFy2vCkNWxgfkNmJvoR45kH12qHT2c5nB36I9zrAqkUbBIkM4WyhkZQ\ngzZXFfPVv4b6OTi1ViPxNT2Rgy1DC74kEDzCaVXzUSvETa+LDmCpidbMyCGu\nLsLpamF+5RC4/zRLn1NzaUhYJpIvGjSv9cHZugbJPSDqu6x/7Ez3yJtFuOP+\n6q6OaYDXMTxwLiMEazetoSGH7Q1Q1lYywjtlRzE2Vk7y5KQ6WH8wFhaNSz/Q\nl7aIcgQVsaNbL+cyhChTiPoUUF222elziLixLiKspe2ybbTX1PLnojlmq1+H\nDgtXUWtEFkoPd028bOVpcG6QCEiArz9EvBdvCo1Lz4vFD/j3oG7/rKGXQfW5\n+u0WkE1OXZr1o+bsSsRUrwvubSEzyXsqph+tis0mlJYocV9N6cb4UfyWu4RD\nEzch\r\n=QXw6\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_3.0.0-alpha.2_1544608927000_0.933987854473971"},"_hasShrinkwrap":false},"3.0.0-alpha.3":{"name":"@pm2/io","version":"3.0.0-alpha.3","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"MIT","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","mocha":"^5.2.0","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2","typings":"^2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@pm2/agent-node":"^1.0.13","@pm2/legacy-tracing":"^1.4.2","async":"^2.6.1","debug":"3.1.0","event-loop-inspector":"^1.2.0","eventemitter2":"^5.0.1","semver":"5.5.0","shimmer":"^1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 library responsible for gathering the metrics, reporting exceptions, exposing remote actions and every interaction with your application.\n\nYou can also use it as a standalone agent, if you want to connect your nodejs process to PM2 Enterprise but without having to launch your application with PM2.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n- [**Notes**](https://github.com/keymetrics/pm2-io-apm/tree/master#notes)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in the PM2 Plus/Enterprise dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst users = io.metric({\n  name: 'Realtime user',\n});\nusers.set(10)\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **id**: The type of metric (default 'metric', string)\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **gauge**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst myMetric = io.metric({\n  name: 'Realtime Value'\n});\n\nmyMetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst currentReq = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  currentReq.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    currentReq.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from PM2 Plus or Enterprise.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    // cb must be called at the end of the action\n    return cb({ success: true });\n  });\n});\n```\n\n## Report user error\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'), {\n  // you can some http context that will be reported in the UI\n  http: {\n    url: req.url\n  },\n  // or anything that you can like an user id\n  custom: {\n    user: req.user.id\n  }\n});\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nexport class IOConfig {\n  /**\n   * Automatically catch unhandled errors\n   */\n  catchExceptions?: boolean = true\n  /**\n   * Configure the metrics to add automatically to your process\n   */\n  metrics?: {\n    eventLoop: boolean = true,\n    network: boolean = false,\n    http: boolean = true,\n    gc: boolean = true,\n    v8: boolean = true\n  }\n  /**\n   * Configure the default actions that you can run\n   */\n  actions?: {\n    eventLoopDump?: boolean = true\n  }\n  /**\n   * Configure availables profilers that will be exposed\n   */\n  profiling?: {\n    /**\n     * Toggle the CPU profiling actions\n     */\n    cpuJS: boolean = true\n    /**\n     * Toggle the heap snapshot actions\n     */\n    heapSnapshot: boolean = true\n    /**\n     * Toggle the heap sampling actions\n     */\n    heapSampling: boolean = true\n    /**\n     * Force a specific implementation of profiler\n     * \n     * available: \n     *  - 'addon' (using the v8-profiler-node8 addon)\n     *  - 'inspector' (using the \"inspector\" api from node core)\n     *  - 'none' (disable the profilers)\n     *  - 'both' (will try to use inspector and fallback on addon if available)\n     */\n    implementation: string = 'both'\n  }\n  /**\n   * Configure the transaction tracing options\n   */\n  tracing?: {\n    /**\n     * Choose to enable the HTTP tracing system\n     * \n     * default is false\n     */\n    enabled: boolean = false\n    /**\n     * Specify specific urls to ignore\n     */\n    ignoreFilter?: {\n      url?: string[]\n      method?: string[]\n    }\n    // Log levels: 0-disabled,1-error,2-warn,3-info,4-debug\n    logLevel?: number\n    /**\n     * To disable a plugin in this list, you may override its path with a falsy\n     * value. Disabling any of the default plugins may cause unwanted behavior,\n     * so use caution.\n     */\n    plugins?: {\n      connect?: boolean\n      express?: boolean\n      'generic-pool'?: boolean\n      hapi?: boolean\n      http?: boolean\n      knex?: boolean\n      koa?: boolean\n      'mongodb-core'?: boolean\n      mysql?: boolean\n      pg?: boolean\n      redis?: boolean\n      restify?: boolean\n    }\n    /**\n     * An upper bound on the number of traces to gather each second. If set to 0,\n     * sampling is disabled and all traces are recorded. Sampling rates greater\n     * than 1000 are not supported and will result in at most 1000 samples per\n     * second.\n     */\n    samplingRate?: number\n  }\n  /**\n   * If you want to connect to PM2 Enterprise without using PM2, you should enable\n   * the standalone mode\n   * \n   * default is false\n   */\n  standalone?: boolean = false\n  /**\n   * Define custom options for the standalone mode\n   */\n  apmOptions?: {\n    /**\n     * public key of the bucket to which the agent need to connect\n     */\n    publicKey: string\n    /**\n     * Secret key of the bucket to which the agent need to connect\n     */\n    secretKey: string\n    /**\n     * The name of the application/service that will be reported to PM2 Enterprise\n     */\n    appName: string\n    /**\n     * The name of the server as reported in PM2 Enterprise\n     *\n     * default is os.hostname()\n     */\n    serverName?: string\n    /**\n     * Broadcast all the logs from your application to our backend\n     */\n    sendLogs?: Boolean\n    /**\n     * Since logs can be forwared to our backend you may want to ignore specific\n     * logs (containing sensitive data for example)\n     */\n    logFilter?: string | RegExp\n    /**\n     * Proxy URI to use when reaching internet\n     * Supporting socks5,http,https,pac,socks4\n     * see https://github.com/TooTallNate/node-proxy-agent\n     *\n     * example: socks5://username:password@some-socks-proxy.com:9050\n     */\n    proxy?: string\n  }\n}\n```\n\nYou can pass whatever options you want to `io.init`, it will automatically update its configuration.\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Notes\n\nCurently this package isn't compatible with `amqp` if you use the `network` metrics. We recommend to disable the metrics with the following configuration in this case :\n\n```javascript\nio.init({\n  metrics: {\n    network: false\n  }\n})\n```\n\n## Publishing\n\nJust run :\n```bash\n$ npm publish\n```\n\nAnd for beta\n```bash\n$ npm publish --tag beta\n```\n\n\n## License\n\nMIT\n","readmeFilename":"README.md","gitHead":"f5d594a1298327f3e403a493313799809237a45a","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@3.0.0-alpha.3","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-Yg9085i/VC+lbSdG5gjjCFLvjfrLWZpBsGPMZmxBC8yztoySPIyytLortpYC16PGs0L+6x2heLNMu+0Cu7jJYA==","shasum":"79a88a905e83479e41ae8886f679da7ba6f96b73","tarball":"https://registry.npmjs.org/@pm2/io/-/io-3.0.0-alpha.3.tgz","fileCount":83,"unpackedSize":442650,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcEP8SCRA9TVsSAnZWagAA1c4QAJQBviEzOM0KZyTn7fS8\nncub1xTLAUOwmqLecvb9w6qYRkPNhrwhvnqKh1epGmQ9rlSbs23ItQmZ3ikj\ni2kU6bvtY4r4+VS0WP0uoJPoVg9ANspLuKcjQj1Gx2nfjyXfWXO+zEhD6Hqv\nuME40x05z9KNmkEQFzA6zVll84ZxsmuLn6aX79BKhCXtqAafvp3YxhFWJ58p\nKaggy8+1SCl+/xLtzUDE+/rVpUMvfl9HjuxtIr0u9BebjrMHJToZT/JAX66H\n9S8tY5DspQxQDARnkJhN0LIbNmTmSx5+njH2adkYmEjzU/zMtNqBk9L073Vd\n9L2ypsq5vNpMPGP10u2b9+AwYqOd0uygGwRUv9yboqCvD+aXbTRGFCU/dfrL\nLztFwgqVdpaBqVNzon/rTwd8vVm7dL7Vd7ocLIRlyOiIODwP79eTBDsBfQy5\n3YPl/aF9ymnoGeJvC/N5nFUVuAhR/+qY/NkbBDUKfsXJVblfKorzVTVV6XN7\nsc79EpgvfDiCNY9ucSRugaWGNROCmvnrHDX+c14m2+IVx+OU7xOY+fvQqx2l\n/zyXlNQWxmVmHXOJ0B8xi97i7ZD8hIVeWYIpF0lfQkviJN1/4tRLs3tlIUhy\nvnbVtDWZ5eYFvVNNRH8rdTPWAkS4o/SevsjQXbE2+zcbVxm2y8xZ7sasfRoX\no6DH\r\n=AVK5\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_3.0.0-alpha.3_1544617745673_0.06559646571564359"},"_hasShrinkwrap":false},"3.0.0-alpha.4":{"name":"@pm2/io","version":"3.0.0-alpha.4","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"MIT","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","mocha":"^5.2.0","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2","typings":"^2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@pm2/agent-node":"~1.1.0","@pm2/legacy-tracing":"~1.4.2","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 library responsible for gathering the metrics, reporting exceptions, exposing remote actions and every interaction with your application.\n\nYou can also use it as a standalone agent, if you want to connect your nodejs process to PM2 Enterprise but without having to launch your application with PM2.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n- [**Notes**](https://github.com/keymetrics/pm2-io-apm/tree/master#notes)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in the PM2 Plus/Enterprise dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst users = io.metric({\n  name: 'Realtime user',\n});\nusers.set(10)\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **id**: The type of metric (default 'metric', string)\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **gauge**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst myMetric = io.metric({\n  name: 'Realtime Value'\n});\n\nmyMetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst currentReq = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  currentReq.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    currentReq.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from PM2 Plus or Enterprise.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    // cb must be called at the end of the action\n    return cb({ success: true });\n  });\n});\n```\n\n## Report user error\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'), {\n  // you can some http context that will be reported in the UI\n  http: {\n    url: req.url\n  },\n  // or anything that you can like an user id\n  custom: {\n    user: req.user.id\n  }\n});\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nexport class IOConfig {\n  /**\n   * Automatically catch unhandled errors\n   */\n  catchExceptions?: boolean = true\n  /**\n   * Configure the metrics to add automatically to your process\n   */\n  metrics?: {\n    eventLoop: boolean = true,\n    network: boolean = false,\n    http: boolean = true,\n    gc: boolean = true,\n    v8: boolean = true\n  }\n  /**\n   * Configure the default actions that you can run\n   */\n  actions?: {\n    eventLoopDump?: boolean = true\n  }\n  /**\n   * Configure availables profilers that will be exposed\n   */\n  profiling?: {\n    /**\n     * Toggle the CPU profiling actions\n     */\n    cpuJS: boolean = true\n    /**\n     * Toggle the heap snapshot actions\n     */\n    heapSnapshot: boolean = true\n    /**\n     * Toggle the heap sampling actions\n     */\n    heapSampling: boolean = true\n    /**\n     * Force a specific implementation of profiler\n     * \n     * available: \n     *  - 'addon' (using the v8-profiler-node8 addon)\n     *  - 'inspector' (using the \"inspector\" api from node core)\n     *  - 'none' (disable the profilers)\n     *  - 'both' (will try to use inspector and fallback on addon if available)\n     */\n    implementation: string = 'both'\n  }\n  /**\n   * Configure the transaction tracing options\n   */\n  tracing?: {\n    /**\n     * Choose to enable the HTTP tracing system\n     * \n     * default is false\n     */\n    enabled: boolean = false\n    /**\n     * Specify specific urls to ignore\n     */\n    ignoreFilter?: {\n      url?: string[]\n      method?: string[]\n    }\n    // Log levels: 0-disabled,1-error,2-warn,3-info,4-debug\n    logLevel?: number\n    /**\n     * To disable a plugin in this list, you may override its path with a falsy\n     * value. Disabling any of the default plugins may cause unwanted behavior,\n     * so use caution.\n     */\n    plugins?: {\n      connect?: boolean\n      express?: boolean\n      'generic-pool'?: boolean\n      hapi?: boolean\n      http?: boolean\n      knex?: boolean\n      koa?: boolean\n      'mongodb-core'?: boolean\n      mysql?: boolean\n      pg?: boolean\n      redis?: boolean\n      restify?: boolean\n    }\n    /**\n     * An upper bound on the number of traces to gather each second. If set to 0,\n     * sampling is disabled and all traces are recorded. Sampling rates greater\n     * than 1000 are not supported and will result in at most 1000 samples per\n     * second.\n     */\n    samplingRate?: number\n  }\n  /**\n   * If you want to connect to PM2 Enterprise without using PM2, you should enable\n   * the standalone mode\n   * \n   * default is false\n   */\n  standalone?: boolean = false\n  /**\n   * Define custom options for the standalone mode\n   */\n  apmOptions?: {\n    /**\n     * public key of the bucket to which the agent need to connect\n     */\n    publicKey: string\n    /**\n     * Secret key of the bucket to which the agent need to connect\n     */\n    secretKey: string\n    /**\n     * The name of the application/service that will be reported to PM2 Enterprise\n     */\n    appName: string\n    /**\n     * The name of the server as reported in PM2 Enterprise\n     *\n     * default is os.hostname()\n     */\n    serverName?: string\n    /**\n     * Broadcast all the logs from your application to our backend\n     */\n    sendLogs?: Boolean\n    /**\n     * Since logs can be forwared to our backend you may want to ignore specific\n     * logs (containing sensitive data for example)\n     */\n    logFilter?: string | RegExp\n    /**\n     * Proxy URI to use when reaching internet\n     * Supporting socks5,http,https,pac,socks4\n     * see https://github.com/TooTallNate/node-proxy-agent\n     *\n     * example: socks5://username:password@some-socks-proxy.com:9050\n     */\n    proxy?: string\n  }\n}\n```\n\nYou can pass whatever options you want to `io.init`, it will automatically update its configuration.\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Notes\n\nCurently this package isn't compatible with `amqp` if you use the `network` metrics. We recommend to disable the metrics with the following configuration in this case :\n\n```javascript\nio.init({\n  metrics: {\n    network: false\n  }\n})\n```\n\n## Publishing\n\nJust run :\n```bash\n$ npm publish\n```\n\nAnd for beta\n```bash\n$ npm publish --tag beta\n```\n\n\n## License\n\nMIT\n","readmeFilename":"README.md","gitHead":"63499f053b386983a3e4c2849576677d3c15969f","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@3.0.0-alpha.4","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-OoPpaCYUcgzqwr09yWq1NoNsEyCMdCdtOtS502NfqxTGAcIyUtC3oBEmCLoKyAkxgPRIr/GMs0D2El+NDZvFlQ==","shasum":"3ad9f45b068937c4da92fdcc165ed576ca31f226","tarball":"https://registry.npmjs.org/@pm2/io/-/io-3.0.0-alpha.4.tgz","fileCount":85,"unpackedSize":462228,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcESiuCRA9TVsSAnZWagAAWz0P/1lVIws+NjC4KHYYSx5n\nnLKvDexCH6YMcDGkUdTwyZXSjliAus7wXss7QFoh6INBeHspCutXIVlV5Kmq\naFrTC7U2U38yIyBTXooAT//e87ogMx4hms+DW+oscxUNiET9aJXO/HJZ3f3X\nrWYrCP8/fH16yndG6AkWMfkjD+zg1UWSuZTwahb3fCMJDDJ0AadEd58r970C\nBoBvAzunLXs+Z4NnDZBFnAVHPf7LrIyFDXSB0/impYEix9ILczrv4Lian9lu\n/wvL2kJdsSs81zywAnjFTq2Cqi6fz3AlQPNxR8mrvp4a+c/58TpKD86ehTKm\ncEOu8fUafARwL+bQKpt9wASGRhfg1mAa/XSxvIwFgo/HEHQddITwnvgx3SiY\nlTwpe90qfcxZ4vE+9BPuYbCti1mwlMfE2FLe9W7h7jWQbPtoogZkXPEpRotU\nTMahuZXRIpfjN0Y2628CWrf5Z48PNldf1Rk4d6xsblI+VzbnIpsqJWpIx8VG\n7FMEhALegDD6Qlx0G4SBPrPDrTtvbztN0bGpPeaqRIPnyO1WCwnZumxN/H2p\nzMUkWsnUixL/lCAUDcOXCzJaaT0nSp+56WYSeQsBJqB10dqHsmbUCRy7N2O2\nbPRYJvVTzzdOk8AeDojnlKoN8F6oLAdgvivf6sml8dwqMKsxqFaejnmkOJR1\nZbRc\r\n=nwux\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_3.0.0-alpha.4_1544628397153_0.5345585843654461"},"_hasShrinkwrap":false},"3.0.0-alpha.5":{"name":"@pm2/io","version":"3.0.0-alpha.5","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"MIT","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","mocha":"^5.2.0","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2","typings":"^2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@pm2/agent-node":"~1.1.0","@pm2/legacy-tracing":"~1.4.2","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 library responsible for gathering the metrics, reporting exceptions, exposing remote actions and every interaction with your application.\n\nYou can also use it as a standalone agent, if you want to connect your nodejs process to PM2 Enterprise but without having to launch your application with PM2.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n- [**Notes**](https://github.com/keymetrics/pm2-io-apm/tree/master#notes)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in the PM2 Plus/Enterprise dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst users = io.metric({\n  name: 'Realtime user',\n});\nusers.set(10)\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **id**: The type of metric (default 'metric', string)\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **gauge**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst myMetric = io.metric({\n  name: 'Realtime Value'\n});\n\nmyMetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst currentReq = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  currentReq.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    currentReq.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from PM2 Plus or Enterprise.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    // cb must be called at the end of the action\n    return cb({ success: true });\n  });\n});\n```\n\n## Report user error\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'), {\n  // you can some http context that will be reported in the UI\n  http: {\n    url: req.url\n  },\n  // or anything that you can like an user id\n  custom: {\n    user: req.user.id\n  }\n});\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nexport class IOConfig {\n  /**\n   * Automatically catch unhandled errors\n   */\n  catchExceptions?: boolean = true\n  /**\n   * Configure the metrics to add automatically to your process\n   */\n  metrics?: {\n    eventLoop: boolean = true,\n    network: boolean = false,\n    http: boolean = true,\n    gc: boolean = true,\n    v8: boolean = true\n  }\n  /**\n   * Configure the default actions that you can run\n   */\n  actions?: {\n    eventLoopDump?: boolean = true\n  }\n  /**\n   * Configure availables profilers that will be exposed\n   */\n  profiling?: {\n    /**\n     * Toggle the CPU profiling actions\n     */\n    cpuJS: boolean = true\n    /**\n     * Toggle the heap snapshot actions\n     */\n    heapSnapshot: boolean = true\n    /**\n     * Toggle the heap sampling actions\n     */\n    heapSampling: boolean = true\n    /**\n     * Force a specific implementation of profiler\n     * \n     * available: \n     *  - 'addon' (using the v8-profiler-node8 addon)\n     *  - 'inspector' (using the \"inspector\" api from node core)\n     *  - 'none' (disable the profilers)\n     *  - 'both' (will try to use inspector and fallback on addon if available)\n     */\n    implementation: string = 'both'\n  }\n  /**\n   * Configure the transaction tracing options\n   */\n  tracing?: {\n    /**\n     * Choose to enable the HTTP tracing system\n     * \n     * default is false\n     */\n    enabled: boolean = false\n    /**\n     * Specify specific urls to ignore\n     */\n    ignoreFilter?: {\n      url?: string[]\n      method?: string[]\n    }\n    // Log levels: 0-disabled,1-error,2-warn,3-info,4-debug\n    logLevel?: number\n    /**\n     * To disable a plugin in this list, you may override its path with a falsy\n     * value. Disabling any of the default plugins may cause unwanted behavior,\n     * so use caution.\n     */\n    plugins?: {\n      connect?: boolean\n      express?: boolean\n      'generic-pool'?: boolean\n      hapi?: boolean\n      http?: boolean\n      knex?: boolean\n      koa?: boolean\n      'mongodb-core'?: boolean\n      mysql?: boolean\n      pg?: boolean\n      redis?: boolean\n      restify?: boolean\n    }\n    /**\n     * An upper bound on the number of traces to gather each second. If set to 0,\n     * sampling is disabled and all traces are recorded. Sampling rates greater\n     * than 1000 are not supported and will result in at most 1000 samples per\n     * second.\n     */\n    samplingRate?: number\n  }\n  /**\n   * If you want to connect to PM2 Enterprise without using PM2, you should enable\n   * the standalone mode\n   * \n   * default is false\n   */\n  standalone?: boolean = false\n  /**\n   * Define custom options for the standalone mode\n   */\n  apmOptions?: {\n    /**\n     * public key of the bucket to which the agent need to connect\n     */\n    publicKey: string\n    /**\n     * Secret key of the bucket to which the agent need to connect\n     */\n    secretKey: string\n    /**\n     * The name of the application/service that will be reported to PM2 Enterprise\n     */\n    appName: string\n    /**\n     * The name of the server as reported in PM2 Enterprise\n     *\n     * default is os.hostname()\n     */\n    serverName?: string\n    /**\n     * Broadcast all the logs from your application to our backend\n     */\n    sendLogs?: Boolean\n    /**\n     * Since logs can be forwared to our backend you may want to ignore specific\n     * logs (containing sensitive data for example)\n     */\n    logFilter?: string | RegExp\n    /**\n     * Proxy URI to use when reaching internet\n     * Supporting socks5,http,https,pac,socks4\n     * see https://github.com/TooTallNate/node-proxy-agent\n     *\n     * example: socks5://username:password@some-socks-proxy.com:9050\n     */\n    proxy?: string\n  }\n}\n```\n\nYou can pass whatever options you want to `io.init`, it will automatically update its configuration.\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Notes\n\nCurently this package isn't compatible with `amqp` if you use the `network` metrics. We recommend to disable the metrics with the following configuration in this case :\n\n```javascript\nio.init({\n  metrics: {\n    network: false\n  }\n})\n```\n\n## Publishing\n\nJust run :\n```bash\n$ npm publish\n```\n\nAnd for beta\n```bash\n$ npm publish --tag beta\n```\n\n\n## License\n\nMIT\n","readmeFilename":"README.md","gitHead":"80c1b15811fe631691b9e82f1e66f64228c46fe8","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@3.0.0-alpha.5","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-Ic8FwP8eApApb9szngI+q0wVSgKdE1OarxuMQco5h2lQ8Ao9geh5uw403l2PI0xqmcALmzsa4HMsBLAB5GDCOw==","shasum":"ab3fb5f6e106c15dd18fbb199cef01b565493a18","tarball":"https://registry.npmjs.org/@pm2/io/-/io-3.0.0-alpha.5.tgz","fileCount":85,"unpackedSize":459829,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcETenCRA9TVsSAnZWagAAyAQQAIdeQuGhMMsCpS6yUOhJ\nEywCh0I+/rWOLo97Xbe1Y+/IErurSSDFNvMDZRubGhNRAfAm9OrjahcKfbLR\nnkXtEw7MO8+5aEiGV541IocxOfaUBLH3FFQhJoHslpgOctOchbBXZnOlYlFm\nj3N0xhLGtVp29hHWuy8/RNBOyuaYvN6bdLusovkx9yjux4AjHCR17GPskoTW\nPifaLZivlob49VMpIQ4f9wU2KyR7w8U32bgkDTDF4h24DcOVgdQLWDjp+c+k\nyPi4yuF0NPWQlbhvM0qzm3Aae+ZN3Z9Zh/n2ZmWHOH2Xn527s9sOwV8pHHGt\nwdFl+lh89D1Ib60zjJjNzdtQrKca6TUKUDT8KFCCmPpLkGHXd0qSTsteKDeH\nxETrtDDHwVPMElDw49REdjdXEI+OT05pI9QSySjONIl9v/YVgpbXaPb91cX7\nrJM4bwhjCWpCEFcS785u7P9d6UVkiPtepOLqd27cm/GflcHv/rYVf5y8gg5y\nvdtvOjP5YFaYrf1kCzJiem0wZdGpPgdjpYwAnThk0HEeA4ou5+p4BEF/j+dO\njNG5pBfnX5Kc1j57mQDZ4gufHdkYAND/XSMyX5BBW2JFALLsZG95eZJ2Iw5O\nSLZxUBAPPUShv1McS9qEj/5Qjzg9SQ7Xrpc5bs+pLRbXrlL4YSL5D5V6u8BC\nTChV\r\n=kVR6\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_3.0.0-alpha.5_1544632230434_0.9053289021376156"},"_hasShrinkwrap":false},"3.0.0-alpha.6":{"name":"@pm2/io","version":"3.0.0-alpha.6","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"MIT","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","mocha":"^5.2.0","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2","typings":"^2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@pm2/agent-node":"~1.1.0","@pm2/legacy-tracing":"~1.4.2","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 library responsible for gathering the metrics, reporting exceptions, exposing remote actions and every interaction with your application.\n\nYou can also use it as a standalone agent, if you want to connect your nodejs process to PM2 Enterprise but without having to launch your application with PM2.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n- [**Notes**](https://github.com/keymetrics/pm2-io-apm/tree/master#notes)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in the PM2 Plus/Enterprise dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst users = io.metric({\n  name: 'Realtime user',\n});\nusers.set(10)\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **id**: The type of metric (default 'metric', string)\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **gauge**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst myMetric = io.metric({\n  name: 'Realtime Value'\n});\n\nmyMetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst currentReq = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  currentReq.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    currentReq.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from PM2 Plus or Enterprise.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    // cb must be called at the end of the action\n    return cb({ success: true });\n  });\n});\n```\n\n## Report user error\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'), {\n  // you can some http context that will be reported in the UI\n  http: {\n    url: req.url\n  },\n  // or anything that you can like an user id\n  custom: {\n    user: req.user.id\n  }\n});\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nexport class IOConfig {\n  /**\n   * Automatically catch unhandled errors\n   */\n  catchExceptions?: boolean = true\n  /**\n   * Configure the metrics to add automatically to your process\n   */\n  metrics?: {\n    eventLoop: boolean = true,\n    network: boolean = false,\n    http: boolean = true,\n    gc: boolean = true,\n    v8: boolean = true\n  }\n  /**\n   * Configure the default actions that you can run\n   */\n  actions?: {\n    eventLoopDump?: boolean = true\n  }\n  /**\n   * Configure availables profilers that will be exposed\n   */\n  profiling?: {\n    /**\n     * Toggle the CPU profiling actions\n     */\n    cpuJS: boolean = true\n    /**\n     * Toggle the heap snapshot actions\n     */\n    heapSnapshot: boolean = true\n    /**\n     * Toggle the heap sampling actions\n     */\n    heapSampling: boolean = true\n    /**\n     * Force a specific implementation of profiler\n     * \n     * available: \n     *  - 'addon' (using the v8-profiler-node8 addon)\n     *  - 'inspector' (using the \"inspector\" api from node core)\n     *  - 'none' (disable the profilers)\n     *  - 'both' (will try to use inspector and fallback on addon if available)\n     */\n    implementation: string = 'both'\n  }\n  /**\n   * Configure the transaction tracing options\n   */\n  tracing?: {\n    /**\n     * Choose to enable the HTTP tracing system\n     * \n     * default is false\n     */\n    enabled: boolean = false\n    /**\n     * Specify specific urls to ignore\n     */\n    ignoreFilter?: {\n      url?: string[]\n      method?: string[]\n    }\n    // Log levels: 0-disabled,1-error,2-warn,3-info,4-debug\n    logLevel?: number\n    /**\n     * To disable a plugin in this list, you may override its path with a falsy\n     * value. Disabling any of the default plugins may cause unwanted behavior,\n     * so use caution.\n     */\n    plugins?: {\n      connect?: boolean\n      express?: boolean\n      'generic-pool'?: boolean\n      hapi?: boolean\n      http?: boolean\n      knex?: boolean\n      koa?: boolean\n      'mongodb-core'?: boolean\n      mysql?: boolean\n      pg?: boolean\n      redis?: boolean\n      restify?: boolean\n    }\n    /**\n     * An upper bound on the number of traces to gather each second. If set to 0,\n     * sampling is disabled and all traces are recorded. Sampling rates greater\n     * than 1000 are not supported and will result in at most 1000 samples per\n     * second.\n     */\n    samplingRate?: number\n  }\n  /**\n   * If you want to connect to PM2 Enterprise without using PM2, you should enable\n   * the standalone mode\n   * \n   * default is false\n   */\n  standalone?: boolean = false\n  /**\n   * Define custom options for the standalone mode\n   */\n  apmOptions?: {\n    /**\n     * public key of the bucket to which the agent need to connect\n     */\n    publicKey: string\n    /**\n     * Secret key of the bucket to which the agent need to connect\n     */\n    secretKey: string\n    /**\n     * The name of the application/service that will be reported to PM2 Enterprise\n     */\n    appName: string\n    /**\n     * The name of the server as reported in PM2 Enterprise\n     *\n     * default is os.hostname()\n     */\n    serverName?: string\n    /**\n     * Broadcast all the logs from your application to our backend\n     */\n    sendLogs?: Boolean\n    /**\n     * Since logs can be forwared to our backend you may want to ignore specific\n     * logs (containing sensitive data for example)\n     */\n    logFilter?: string | RegExp\n    /**\n     * Proxy URI to use when reaching internet\n     * Supporting socks5,http,https,pac,socks4\n     * see https://github.com/TooTallNate/node-proxy-agent\n     *\n     * example: socks5://username:password@some-socks-proxy.com:9050\n     */\n    proxy?: string\n  }\n}\n```\n\nYou can pass whatever options you want to `io.init`, it will automatically update its configuration.\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Notes\n\nCurently this package isn't compatible with `amqp` if you use the `network` metrics. We recommend to disable the metrics with the following configuration in this case :\n\n```javascript\nio.init({\n  metrics: {\n    network: false\n  }\n})\n```\n\n## Publishing\n\nJust run :\n```bash\n$ npm publish\n```\n\nAnd for beta\n```bash\n$ npm publish --tag beta\n```\n\n\n## License\n\nMIT\n","readmeFilename":"README.md","gitHead":"7197cea6220968aca4d66d512359ea9537d7b086","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@3.0.0-alpha.6","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-UPd6NFTwjI37QuEuPSVm391KUeAZqtOWdxe1q2J/7JGeyBiJn3QH39umTZ0dj0JLt8Y9Nf4e3CDwN7+rA+Rp7w==","shasum":"86a2de19108d2e78142bd4327de0f620b752505c","tarball":"https://registry.npmjs.org/@pm2/io/-/io-3.0.0-alpha.6.tgz","fileCount":85,"unpackedSize":460289,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcET7nCRA9TVsSAnZWagAAejIQAJGoUZ4xkg/Bt8H14Qnc\nimsZioEZpIrF1CdceOAxlJwWK+j4Gau3uNEL/yjMnezBhdvO00k05BiEPW3m\nwLlVHmoh4axyXwOvmewh1bE4HyS8JR9c3pwZ6rFvMrHGm2bAOW66/7uKjQN/\nbsrD21S1eZeoJPRLRggLhqdEnXKQ1FmDO0D2E/TgJfhkzbSduBaRyatz11HM\nfhSh2umFS3m0yG3oY8YJq6NsyRSe8uNWlPjAkoNwIUKXtebpegvMvY62hLtn\nBfuUYEZIR6a1T5CHfUaYt5yRTmlbr3f6SyczLPsTNCi9dtvMr69TKV/J0+Ru\nzjZJUsrEJfoJpTpzYfbOaTh2xlEDy7OzQ40RZkPtbL2SMxd8NHc39z1ammgF\nF5KUGV8AhgR69Qz9dL3DI/XgIMF49fnMmmGoyOSO3Z+BI60RDkC7HAy8QNcl\nyWkACd4afA3XzkmQvAG3wEfyzSmCqDj9/5eUMbt+WNF4IeaKzGN1E3P+6yhe\nAQ/t789lTZ93iPMHZQD3fGBu2HMdIAPToXXfvWS07OGsmCK6bz1h5wB6Wnvu\nTvt8J3G0lqmkBzI7KOUZ1QI5aX28FbOJHqJHxKzJfiDB9Vtt1LAy07n/wgh/\nRAKQ3uKHQm2WFC/Eg4P2ANwzDZ5uxyb5WeC5RwxtncQWeUT7mJUOH03aYcgU\nm2oK\r\n=tZSc\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_3.0.0-alpha.6_1544634087096_0.4666680200276685"},"_hasShrinkwrap":false},"3.0.0-alpha.7":{"name":"@pm2/io","version":"3.0.0-alpha.7","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"MIT","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","mocha":"^5.2.0","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2","typings":"^2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@pm2/agent-node":"~1.1.0","@pm2/legacy-tracing":"~1.4.2","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 library responsible for gathering the metrics, reporting exceptions, exposing remote actions and every interaction with your application.\n\nYou can also use it as a standalone agent, if you want to connect your nodejs process to PM2 Enterprise but without having to launch your application with PM2.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n- [**Notes**](https://github.com/keymetrics/pm2-io-apm/tree/master#notes)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in the PM2 Plus/Enterprise dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst users = io.metric({\n  name: 'Realtime user',\n});\nusers.set(10)\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **id**: The type of metric (default 'metric', string)\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **gauge**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst myMetric = io.metric({\n  name: 'Realtime Value'\n});\n\nmyMetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst currentReq = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  currentReq.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    currentReq.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from PM2 Plus or Enterprise.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    // cb must be called at the end of the action\n    return cb({ success: true });\n  });\n});\n```\n\n## Report user error\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'), {\n  // you can some http context that will be reported in the UI\n  http: {\n    url: req.url\n  },\n  // or anything that you can like an user id\n  custom: {\n    user: req.user.id\n  }\n});\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nexport class IOConfig {\n  /**\n   * Automatically catch unhandled errors\n   */\n  catchExceptions?: boolean = true\n  /**\n   * Configure the metrics to add automatically to your process\n   */\n  metrics?: {\n    eventLoop: boolean = true,\n    network: boolean = false,\n    http: boolean = true,\n    gc: boolean = true,\n    v8: boolean = true\n  }\n  /**\n   * Configure the default actions that you can run\n   */\n  actions?: {\n    eventLoopDump?: boolean = true\n  }\n  /**\n   * Configure availables profilers that will be exposed\n   */\n  profiling?: {\n    /**\n     * Toggle the CPU profiling actions\n     */\n    cpuJS: boolean = true\n    /**\n     * Toggle the heap snapshot actions\n     */\n    heapSnapshot: boolean = true\n    /**\n     * Toggle the heap sampling actions\n     */\n    heapSampling: boolean = true\n    /**\n     * Force a specific implementation of profiler\n     * \n     * available: \n     *  - 'addon' (using the v8-profiler-node8 addon)\n     *  - 'inspector' (using the \"inspector\" api from node core)\n     *  - 'none' (disable the profilers)\n     *  - 'both' (will try to use inspector and fallback on addon if available)\n     */\n    implementation: string = 'both'\n  }\n  /**\n   * Configure the transaction tracing options\n   */\n  tracing?: {\n    /**\n     * Choose to enable the HTTP tracing system\n     * \n     * default is false\n     */\n    enabled: boolean = false\n    /**\n     * Specify specific urls to ignore\n     */\n    ignoreFilter?: {\n      url?: string[]\n      method?: string[]\n    }\n    // Log levels: 0-disabled,1-error,2-warn,3-info,4-debug\n    logLevel?: number\n    /**\n     * To disable a plugin in this list, you may override its path with a falsy\n     * value. Disabling any of the default plugins may cause unwanted behavior,\n     * so use caution.\n     */\n    plugins?: {\n      connect?: boolean\n      express?: boolean\n      'generic-pool'?: boolean\n      hapi?: boolean\n      http?: boolean\n      knex?: boolean\n      koa?: boolean\n      'mongodb-core'?: boolean\n      mysql?: boolean\n      pg?: boolean\n      redis?: boolean\n      restify?: boolean\n    }\n    /**\n     * An upper bound on the number of traces to gather each second. If set to 0,\n     * sampling is disabled and all traces are recorded. Sampling rates greater\n     * than 1000 are not supported and will result in at most 1000 samples per\n     * second.\n     */\n    samplingRate?: number\n  }\n  /**\n   * If you want to connect to PM2 Enterprise without using PM2, you should enable\n   * the standalone mode\n   * \n   * default is false\n   */\n  standalone?: boolean = false\n  /**\n   * Define custom options for the standalone mode\n   */\n  apmOptions?: {\n    /**\n     * public key of the bucket to which the agent need to connect\n     */\n    publicKey: string\n    /**\n     * Secret key of the bucket to which the agent need to connect\n     */\n    secretKey: string\n    /**\n     * The name of the application/service that will be reported to PM2 Enterprise\n     */\n    appName: string\n    /**\n     * The name of the server as reported in PM2 Enterprise\n     *\n     * default is os.hostname()\n     */\n    serverName?: string\n    /**\n     * Broadcast all the logs from your application to our backend\n     */\n    sendLogs?: Boolean\n    /**\n     * Since logs can be forwared to our backend you may want to ignore specific\n     * logs (containing sensitive data for example)\n     */\n    logFilter?: string | RegExp\n    /**\n     * Proxy URI to use when reaching internet\n     * Supporting socks5,http,https,pac,socks4\n     * see https://github.com/TooTallNate/node-proxy-agent\n     *\n     * example: socks5://username:password@some-socks-proxy.com:9050\n     */\n    proxy?: string\n  }\n}\n```\n\nYou can pass whatever options you want to `io.init`, it will automatically update its configuration.\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Notes\n\nCurently this package isn't compatible with `amqp` if you use the `network` metrics. We recommend to disable the metrics with the following configuration in this case :\n\n```javascript\nio.init({\n  metrics: {\n    network: false\n  }\n})\n```\n\n## Publishing\n\nJust run :\n```bash\n$ npm publish\n```\n\nAnd for beta\n```bash\n$ npm publish --tag beta\n```\n\n\n## License\n\nMIT\n","readmeFilename":"README.md","gitHead":"6897532c71c580c064c0c5a67edd6ec2ea940a4f","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@3.0.0-alpha.7","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-0g555WMp3JiDZhuuJPNdv7gK2teCqIyZq5EZ2S00xkNNPeAi5LtUHPVff2hfQrDFnOx+1xqzqh00yvjTZ119iA==","shasum":"48b84f8ecc0e2dae517482e0a55af0935717998f","tarball":"https://registry.npmjs.org/@pm2/io/-/io-3.0.0-alpha.7.tgz","fileCount":85,"unpackedSize":460954,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcEpDFCRA9TVsSAnZWagAAJS4QAII7iPD+kpnB44NKvj6o\nBCV/DA1euHmjkVMKM4bOOcSpo+SNmaMx2+RyBlD3lX7U35PX+g7Cn460HKj5\nhB2Qmd7veibOoAhUuVS9gm8PS0lbya1JpXThBnewg6iqlfDWfM8XJKc+cPuN\n7EBIMLtuE+KvQYFje2vPR9U8kWXTE41mDDNSSQy7sRYRJaSNOdR7Ln0kTink\nCRpF6B1NetqHZATIZeosqiz9xrnzslF6zu6wNAN1+xtwYfBVUY/TC9ncLAme\nWkCMPwfnRCRGhA4ARVNkeQrjAxNwfKXvtBf1MRo1fGbg3krphrkn/zzjPdpZ\nxX3MPt6ECZhx3wRscaFmr3cOoF7cewxG4Qwx5Jt53Z4Z+YHiYZgdvOtG8LKX\nN2Z4CAA0E2NYwLqhJYUgeCGo0d/vsyirBnxWhEV/aXSR731LNoVQdkqXLHpM\n+j2/TabpdQ2cFTw2MJdrE2XMN1q5wtSdXoy6cxhZl86M1H5tp6UQoS+oPDbY\n49cLgVZF/mkCTqf2GHkW2E4w1OixZ+iCK4bdkFeaqWSeNTdNIj64uozbcHTa\nwQqiVoAzCwMs7m/yCoT7LNv+DXTC3NoP7MD980HBbOHxSLGRsw45ORmShOlb\nCoGXM6HiajVHNSaYZTseL9YHqw+Ah6E+c6/Mv/hD19nNV0U1z9xKZ2hONdFS\n8wSI\r\n=i4AD\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_3.0.0-alpha.7_1544720580716_0.475302200322572"},"_hasShrinkwrap":false},"3.0.0-alpha.8":{"name":"@pm2/io","version":"3.0.0-alpha.8","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"MIT","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","mocha":"^5.2.0","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2","typings":"^2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@pm2/agent-node":"~1.1.0","@pm2/legacy-tracing":"~1.4.2","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 library responsible for gathering the metrics, reporting exceptions, exposing remote actions and every interaction with your application.\n\nYou can also use it as a standalone agent, if you want to connect your nodejs process to PM2 Enterprise but without having to launch your application with PM2.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n- [**Notes**](https://github.com/keymetrics/pm2-io-apm/tree/master#notes)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in the PM2 Plus/Enterprise dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst users = io.metric({\n  name: 'Realtime user',\n});\nusers.set(10)\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **id**: The type of metric (default 'metric', string)\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **gauge**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst myMetric = io.metric({\n  name: 'Realtime Value'\n});\n\nmyMetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst currentReq = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  currentReq.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    currentReq.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from PM2 Plus or Enterprise.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    // cb must be called at the end of the action\n    return cb({ success: true });\n  });\n});\n```\n\n## Report user error\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'), {\n  // you can some http context that will be reported in the UI\n  http: {\n    url: req.url\n  },\n  // or anything that you can like an user id\n  custom: {\n    user: req.user.id\n  }\n});\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nexport class IOConfig {\n  /**\n   * Automatically catch unhandled errors\n   */\n  catchExceptions?: boolean = true\n  /**\n   * Configure the metrics to add automatically to your process\n   */\n  metrics?: {\n    eventLoop: boolean = true,\n    network: boolean = false,\n    http: boolean = true,\n    gc: boolean = true,\n    v8: boolean = true\n  }\n  /**\n   * Configure the default actions that you can run\n   */\n  actions?: {\n    eventLoopDump?: boolean = true\n  }\n  /**\n   * Configure availables profilers that will be exposed\n   */\n  profiling?: {\n    /**\n     * Toggle the CPU profiling actions\n     */\n    cpuJS: boolean = true\n    /**\n     * Toggle the heap snapshot actions\n     */\n    heapSnapshot: boolean = true\n    /**\n     * Toggle the heap sampling actions\n     */\n    heapSampling: boolean = true\n    /**\n     * Force a specific implementation of profiler\n     * \n     * available: \n     *  - 'addon' (using the v8-profiler-node8 addon)\n     *  - 'inspector' (using the \"inspector\" api from node core)\n     *  - 'none' (disable the profilers)\n     *  - 'both' (will try to use inspector and fallback on addon if available)\n     */\n    implementation: string = 'both'\n  }\n  /**\n   * Configure the transaction tracing options\n   */\n  tracing?: {\n    /**\n     * Choose to enable the HTTP tracing system\n     * \n     * default is false\n     */\n    enabled: boolean = false\n    /**\n     * Specify specific urls to ignore\n     */\n    ignoreFilter?: {\n      url?: string[]\n      method?: string[]\n    }\n    // Log levels: 0-disabled,1-error,2-warn,3-info,4-debug\n    logLevel?: number\n    /**\n     * To disable a plugin in this list, you may override its path with a falsy\n     * value. Disabling any of the default plugins may cause unwanted behavior,\n     * so use caution.\n     */\n    plugins?: {\n      connect?: boolean\n      express?: boolean\n      'generic-pool'?: boolean\n      hapi?: boolean\n      http?: boolean\n      knex?: boolean\n      koa?: boolean\n      'mongodb-core'?: boolean\n      mysql?: boolean\n      pg?: boolean\n      redis?: boolean\n      restify?: boolean\n    }\n    /**\n     * An upper bound on the number of traces to gather each second. If set to 0,\n     * sampling is disabled and all traces are recorded. Sampling rates greater\n     * than 1000 are not supported and will result in at most 1000 samples per\n     * second.\n     */\n    samplingRate?: number\n  }\n  /**\n   * If you want to connect to PM2 Enterprise without using PM2, you should enable\n   * the standalone mode\n   * \n   * default is false\n   */\n  standalone?: boolean = false\n  /**\n   * Define custom options for the standalone mode\n   */\n  apmOptions?: {\n    /**\n     * public key of the bucket to which the agent need to connect\n     */\n    publicKey: string\n    /**\n     * Secret key of the bucket to which the agent need to connect\n     */\n    secretKey: string\n    /**\n     * The name of the application/service that will be reported to PM2 Enterprise\n     */\n    appName: string\n    /**\n     * The name of the server as reported in PM2 Enterprise\n     *\n     * default is os.hostname()\n     */\n    serverName?: string\n    /**\n     * Broadcast all the logs from your application to our backend\n     */\n    sendLogs?: Boolean\n    /**\n     * Since logs can be forwared to our backend you may want to ignore specific\n     * logs (containing sensitive data for example)\n     */\n    logFilter?: string | RegExp\n    /**\n     * Proxy URI to use when reaching internet\n     * Supporting socks5,http,https,pac,socks4\n     * see https://github.com/TooTallNate/node-proxy-agent\n     *\n     * example: socks5://username:password@some-socks-proxy.com:9050\n     */\n    proxy?: string\n  }\n}\n```\n\nYou can pass whatever options you want to `io.init`, it will automatically update its configuration.\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Notes\n\nCurently this package isn't compatible with `amqp` if you use the `network` metrics. We recommend to disable the metrics with the following configuration in this case :\n\n```javascript\nio.init({\n  metrics: {\n    network: false\n  }\n})\n```\n\n## Publishing\n\nJust run :\n```bash\n$ npm publish\n```\n\nAnd for beta\n```bash\n$ npm publish --tag beta\n```\n\n\n## License\n\nMIT\n","readmeFilename":"README.md","gitHead":"d56296300d882c681c4446493a5cdfcee2d30fe2","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@3.0.0-alpha.8","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-fgspf2eml2qew4ceYDJZZnefNnnI9KnYqe4YPhR8BF3YjRN8XdQznh3NyyHqJnIz8EH+Ja89uVLoVkiQcdcrLA==","shasum":"f8db2ac36f92c0e235c6d43bffdd3f69014341a0","tarball":"https://registry.npmjs.org/@pm2/io/-/io-3.0.0-alpha.8.tgz","fileCount":85,"unpackedSize":461158,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcE5TICRA9TVsSAnZWagAAHb0P/iTTthOmdRBXlgSlA2dU\n1sPNkS7uctvd6l6DXOit/pBV04aDHWU+W+FWeHawl6pw+rviGjq+ugCSicKm\nqCOuTHYRJ6RewPfG9rALXhcAgKmkITbUo4ZaQk/+dccRt56s/JboQPqhtHdC\nIcbEcZNvJha765ZiE7WtRYIbSQ6F1Y+FjmUmwfoe1suRuXUzyBzIqLZqFd4Q\nsp7sfBHummuPytI49hzk9CllRQAaGTAUjEs2FtVV5mZCmmf7mhNRkJwJB3+S\nnYKuNs8hz0cloItW2TloVsi+FZrU5cguj3S00s2IYhSbn1aJINKRkrAg/Aah\ngWywLa6YYVHLAtbOZkUevVGbgfD79AWtIBJmWD1qt7er+PMH41d/HmrA02Nu\nn+iPwZVFClC5u7mADrAAGmnrbmZmzteZJKoytVsruP9PZEmj9Gocpuqch5IL\n3/l1J3Mn+nfKghOVt5TIAPPxvs8FZ4zullM28f+mapOvOmm9kPfJkzLy1ZSl\nLw7GYBkfs/ACaNw2yJsLf8shxUeClBtnsugiYLPTgjvB2oHIExFEOcMrB0wf\nY/prRSTEOQZR5hVacoJCjbZGQeVid5cWhhzTGeUfrx/lrKjgw7gm2Ke8b4qr\nldTx7SU8Jn9ycFRhdZb6Q4EaNXgs3QRiQxk7HgOUWr2Zn9KgGPmFsCf6IVdx\nN/J2\r\n=nJ62\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_3.0.0-alpha.8_1544787143895_0.5545410304342795"},"_hasShrinkwrap":false},"3.0.0-alpha.9":{"name":"@pm2/io","version":"3.0.0-alpha.9","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"MIT","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","mocha":"^5.2.0","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2","typings":"^2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@pm2/agent-node":"~1.1.0","@pm2/legacy-tracing":"~1.4.2","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 library responsible for gathering the metrics, reporting exceptions, exposing remote actions and every interaction with your application.\n\nYou can also use it as a standalone agent, if you want to connect your nodejs process to PM2 Enterprise but without having to launch your application with PM2.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n- [**Notes**](https://github.com/keymetrics/pm2-io-apm/tree/master#notes)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in the PM2 Plus/Enterprise dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst users = io.metric({\n  name: 'Realtime user',\n});\nusers.set(10)\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **id**: The type of metric (default 'metric', string)\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **gauge**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst myMetric = io.metric({\n  name: 'Realtime Value'\n});\n\nmyMetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst currentReq = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  currentReq.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    currentReq.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from PM2 Plus or Enterprise.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    // cb must be called at the end of the action\n    return cb({ success: true });\n  });\n});\n```\n\n## Report user error\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'), {\n  // you can some http context that will be reported in the UI\n  http: {\n    url: req.url\n  },\n  // or anything that you can like an user id\n  custom: {\n    user: req.user.id\n  }\n});\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nexport class IOConfig {\n  /**\n   * Automatically catch unhandled errors\n   */\n  catchExceptions?: boolean = true\n  /**\n   * Configure the metrics to add automatically to your process\n   */\n  metrics?: {\n    eventLoop: boolean = true,\n    network: boolean = false,\n    http: boolean = true,\n    gc: boolean = true,\n    v8: boolean = true\n  }\n  /**\n   * Configure the default actions that you can run\n   */\n  actions?: {\n    eventLoopDump?: boolean = true\n  }\n  /**\n   * Configure availables profilers that will be exposed\n   */\n  profiling?: {\n    /**\n     * Toggle the CPU profiling actions\n     */\n    cpuJS: boolean = true\n    /**\n     * Toggle the heap snapshot actions\n     */\n    heapSnapshot: boolean = true\n    /**\n     * Toggle the heap sampling actions\n     */\n    heapSampling: boolean = true\n    /**\n     * Force a specific implementation of profiler\n     * \n     * available: \n     *  - 'addon' (using the v8-profiler-node8 addon)\n     *  - 'inspector' (using the \"inspector\" api from node core)\n     *  - 'none' (disable the profilers)\n     *  - 'both' (will try to use inspector and fallback on addon if available)\n     */\n    implementation: string = 'both'\n  }\n  /**\n   * Configure the transaction tracing options\n   */\n  tracing?: {\n    /**\n     * Choose to enable the HTTP tracing system\n     * \n     * default is false\n     */\n    enabled: boolean = false\n    /**\n     * Specify specific urls to ignore\n     */\n    ignoreFilter?: {\n      url?: string[]\n      method?: string[]\n    }\n    // Log levels: 0-disabled,1-error,2-warn,3-info,4-debug\n    logLevel?: number\n    /**\n     * To disable a plugin in this list, you may override its path with a falsy\n     * value. Disabling any of the default plugins may cause unwanted behavior,\n     * so use caution.\n     */\n    plugins?: {\n      connect?: boolean\n      express?: boolean\n      'generic-pool'?: boolean\n      hapi?: boolean\n      http?: boolean\n      knex?: boolean\n      koa?: boolean\n      'mongodb-core'?: boolean\n      mysql?: boolean\n      pg?: boolean\n      redis?: boolean\n      restify?: boolean\n    }\n    /**\n     * An upper bound on the number of traces to gather each second. If set to 0,\n     * sampling is disabled and all traces are recorded. Sampling rates greater\n     * than 1000 are not supported and will result in at most 1000 samples per\n     * second.\n     */\n    samplingRate?: number\n  }\n  /**\n   * If you want to connect to PM2 Enterprise without using PM2, you should enable\n   * the standalone mode\n   * \n   * default is false\n   */\n  standalone?: boolean = false\n  /**\n   * Define custom options for the standalone mode\n   */\n  apmOptions?: {\n    /**\n     * public key of the bucket to which the agent need to connect\n     */\n    publicKey: string\n    /**\n     * Secret key of the bucket to which the agent need to connect\n     */\n    secretKey: string\n    /**\n     * The name of the application/service that will be reported to PM2 Enterprise\n     */\n    appName: string\n    /**\n     * The name of the server as reported in PM2 Enterprise\n     *\n     * default is os.hostname()\n     */\n    serverName?: string\n    /**\n     * Broadcast all the logs from your application to our backend\n     */\n    sendLogs?: Boolean\n    /**\n     * Since logs can be forwared to our backend you may want to ignore specific\n     * logs (containing sensitive data for example)\n     */\n    logFilter?: string | RegExp\n    /**\n     * Proxy URI to use when reaching internet\n     * Supporting socks5,http,https,pac,socks4\n     * see https://github.com/TooTallNate/node-proxy-agent\n     *\n     * example: socks5://username:password@some-socks-proxy.com:9050\n     */\n    proxy?: string\n  }\n}\n```\n\nYou can pass whatever options you want to `io.init`, it will automatically update its configuration.\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Notes\n\nCurently this package isn't compatible with `amqp` if you use the `network` metrics. We recommend to disable the metrics with the following configuration in this case :\n\n```javascript\nio.init({\n  metrics: {\n    network: false\n  }\n})\n```\n\n## Publishing\n\nJust run :\n```bash\n$ npm publish\n```\n\nAnd for beta\n```bash\n$ npm publish --tag beta\n```\n\n\n## License\n\nMIT\n","readmeFilename":"README.md","gitHead":"3bbad73203f2bdb134f35e6bfd936c55c2556233","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@3.0.0-alpha.9","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-PeO/Zi4GzCvAWISHr7cYZrX9IGX+ahbOeNrcDQ9OWc54tpFN4upBZ97Zt+RQnBJoU167EXfiENGc9LMFlJvYUQ==","shasum":"93cbe1789e41c80e29700dae38200e349455b891","tarball":"https://registry.npmjs.org/@pm2/io/-/io-3.0.0-alpha.9.tgz","fileCount":85,"unpackedSize":461459,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcE6qhCRA9TVsSAnZWagAAj5oP/RKhQQ97E/V2iVY4OjeS\nyNLDCzatIJL/4gOd4OBYmJBGVTC5kta1VS/LJNg4KR3BRjcCTmCTYWfKDAdW\n0D9dJKgUXj47QJChF0TPhniMPXpiUIpDjVcu/ydu084SZnyE4yCXXzpRucHR\nj8h5KvcmVKQ1d+We5clT7TySROJRAG7RhHFt4NEsTiW2sTsrWm7nmC31FYbk\nOgLX16tWNW3JMXzEs11HO4WXyHQc3T04fQ56lJhpHx448uNBnuTkrkSJKJEG\nRaaCLYF+R2fzv0wWeK65HDpOK5wUwq6gnb2acKm91Q+9nEa60gqpQYKM3lOb\nf02uJdq170gXw+uVs3ShHyrV715CtPscoO6tJf3XTXJtRBBDV3Jgbcq7BqOx\nHFO/eyAoMBXQFx1y8IOcO+44ApZ+QiBPvmMSBGSwn65NuucZi0Ea7era6cTo\n0Fw1kjXSyfRnu1PM0DQFuCP/ikMCJdf2n9y9GKIw9GGQtvgJY6gM96pXLxBB\nRoS0EtYAz1ZsfnEpdaXOqi/f1ZbzWbVG9qPwex+qmwaoPrY/Jf1TwQdnJS04\nKUWvZYw1yPUx8HfqYy+QZUBfCoB7kkG8knECMS1YFchx5cgurqGLgx4lSDOn\nzDvZvRpi8x8qhpY93ue/yyaM9OlZwQ2Bv6Epq5PgSvQOn8HPq/UW8nnhIWT1\nIAvs\r\n=O2CD\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_3.0.0-alpha.9_1544792736612_0.868344834681172"},"_hasShrinkwrap":false},"3.0.0-alpha.10":{"name":"@pm2/io","version":"3.0.0-alpha.10","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"MIT","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","mocha":"^5.2.0","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2","typings":"^2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@pm2/agent-node":"~1.1.1","@pm2/legacy-tracing":"~1.4.2","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 library responsible for gathering the metrics, reporting exceptions, exposing remote actions and every interaction with your application.\n\nYou can also use it as a standalone agent, if you want to connect your nodejs process to PM2 Enterprise but without having to launch your application with PM2.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n- [**Notes**](https://github.com/keymetrics/pm2-io-apm/tree/master#notes)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in the PM2 Plus/Enterprise dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst users = io.metric({\n  name: 'Realtime user',\n});\nusers.set(10)\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **id**: The type of metric (default 'metric', string)\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **gauge**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst myMetric = io.metric({\n  name: 'Realtime Value'\n});\n\nmyMetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst currentReq = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  currentReq.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    currentReq.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from PM2 Plus or Enterprise.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    // cb must be called at the end of the action\n    return cb({ success: true });\n  });\n});\n```\n\n## Report user error\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'), {\n  // you can some http context that will be reported in the UI\n  http: {\n    url: req.url\n  },\n  // or anything that you can like an user id\n  custom: {\n    user: req.user.id\n  }\n});\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nexport class IOConfig {\n  /**\n   * Automatically catch unhandled errors\n   */\n  catchExceptions?: boolean = true\n  /**\n   * Configure the metrics to add automatically to your process\n   */\n  metrics?: {\n    eventLoop: boolean = true,\n    network: boolean = false,\n    http: boolean = true,\n    gc: boolean = true,\n    v8: boolean = true\n  }\n  /**\n   * Configure the default actions that you can run\n   */\n  actions?: {\n    eventLoopDump?: boolean = true\n  }\n  /**\n   * Configure availables profilers that will be exposed\n   */\n  profiling?: {\n    /**\n     * Toggle the CPU profiling actions\n     */\n    cpuJS: boolean = true\n    /**\n     * Toggle the heap snapshot actions\n     */\n    heapSnapshot: boolean = true\n    /**\n     * Toggle the heap sampling actions\n     */\n    heapSampling: boolean = true\n    /**\n     * Force a specific implementation of profiler\n     * \n     * available: \n     *  - 'addon' (using the v8-profiler-node8 addon)\n     *  - 'inspector' (using the \"inspector\" api from node core)\n     *  - 'none' (disable the profilers)\n     *  - 'both' (will try to use inspector and fallback on addon if available)\n     */\n    implementation: string = 'both'\n  }\n  /**\n   * Configure the transaction tracing options\n   */\n  tracing?: {\n    /**\n     * Choose to enable the HTTP tracing system\n     * \n     * default is false\n     */\n    enabled: boolean = false\n    /**\n     * Specify specific urls to ignore\n     */\n    ignoreFilter?: {\n      url?: string[]\n      method?: string[]\n    }\n    // Log levels: 0-disabled,1-error,2-warn,3-info,4-debug\n    logLevel?: number\n    /**\n     * To disable a plugin in this list, you may override its path with a falsy\n     * value. Disabling any of the default plugins may cause unwanted behavior,\n     * so use caution.\n     */\n    plugins?: {\n      connect?: boolean\n      express?: boolean\n      'generic-pool'?: boolean\n      hapi?: boolean\n      http?: boolean\n      knex?: boolean\n      koa?: boolean\n      'mongodb-core'?: boolean\n      mysql?: boolean\n      pg?: boolean\n      redis?: boolean\n      restify?: boolean\n    }\n    /**\n     * An upper bound on the number of traces to gather each second. If set to 0,\n     * sampling is disabled and all traces are recorded. Sampling rates greater\n     * than 1000 are not supported and will result in at most 1000 samples per\n     * second.\n     */\n    samplingRate?: number\n  }\n  /**\n   * If you want to connect to PM2 Enterprise without using PM2, you should enable\n   * the standalone mode\n   * \n   * default is false\n   */\n  standalone?: boolean = false\n  /**\n   * Define custom options for the standalone mode\n   */\n  apmOptions?: {\n    /**\n     * public key of the bucket to which the agent need to connect\n     */\n    publicKey: string\n    /**\n     * Secret key of the bucket to which the agent need to connect\n     */\n    secretKey: string\n    /**\n     * The name of the application/service that will be reported to PM2 Enterprise\n     */\n    appName: string\n    /**\n     * The name of the server as reported in PM2 Enterprise\n     *\n     * default is os.hostname()\n     */\n    serverName?: string\n    /**\n     * Broadcast all the logs from your application to our backend\n     */\n    sendLogs?: Boolean\n    /**\n     * Since logs can be forwared to our backend you may want to ignore specific\n     * logs (containing sensitive data for example)\n     */\n    logFilter?: string | RegExp\n    /**\n     * Proxy URI to use when reaching internet\n     * Supporting socks5,http,https,pac,socks4\n     * see https://github.com/TooTallNate/node-proxy-agent\n     *\n     * example: socks5://username:password@some-socks-proxy.com:9050\n     */\n    proxy?: string\n  }\n}\n```\n\nYou can pass whatever options you want to `io.init`, it will automatically update its configuration.\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Notes\n\nCurently this package isn't compatible with `amqp` if you use the `network` metrics. We recommend to disable the metrics with the following configuration in this case :\n\n```javascript\nio.init({\n  metrics: {\n    network: false\n  }\n})\n```\n\n## Publishing\n\nJust run :\n```bash\n$ npm publish\n```\n\nAnd for beta\n```bash\n$ npm publish --tag beta\n```\n\n\n## License\n\nMIT\n","readmeFilename":"README.md","gitHead":"112fb6b7f67408dcff9e01b5268c37f71629d31f","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@3.0.0-alpha.10","_npmVersion":"6.4.1","_nodeVersion":"8.14.1","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-YF4qckuP6Ya++hWuZQrjkpfOD3XgaY9JJ63EUO7qB198YQ2q3S5VXxD+AKAhYbexOY7PLN1oam5HcGfUuWkOQQ==","shasum":"e9387cf223120f5054ded6c4ca438fd8741e2b67","tarball":"https://registry.npmjs.org/@pm2/io/-/io-3.0.0-alpha.10.tgz","fileCount":85,"unpackedSize":464743,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcGh+aCRA9TVsSAnZWagAAsh0P/jdhGM/RxYoM9Iw2r2+3\nJQRXL9bELruMZ2/ljSda5Pgerp47KGi7N6RmA4l5Au3NtIQLFw7qsnmQxQsW\nMLx5t6W8+ERapnP2rGUqRtrTLV6scxxeGh2mjmrIacT31adASuJ8Xm5hfPxa\noqfBM6UyDcOgwC7Lrr8ZVuAE6uWxI8h8XD17JjFXpoGvA7BkbonYYAs1h9Bl\nmLRRjUQ66hnewIbgnc2hoc2mJXCxGmjm7QkTfoXP6umbYzStfh97oMrkILy5\nE+hQ2Yvq3f4LDRsIdUpK6ZtlHnN30AB9zRjMWEqLrDYKFIixTSGkdAuBSnpq\njtmawPKoWTj8t/JrJ/SNHCXqrKc9MbwFxydeCMltsCV+kPFrRPSXShUlva23\nNjjH+JtgNASNSSBOXc9AZ6xHl3MVEHHoYdMjf97LIIzgLoibNENyEu1/U47Y\ntEm97w3wcpGNBUhXJsT7cLUD9gPgBxITA8mEU1OeqFK1YIoO9K9hRonCcX6i\naVRGBhm85MNbIv72fMGkh/FwmhZNEBz4WuTi1L3NboIhTdQzLwfFBYRjJYYT\nl99ML/SZPqelvJtTZhPSSQMTFxcA04GPTMlS/Q5UeepWh5C1VEMpAY2CazXH\n8TuR2O8l8+N2ns4tNKpalPieENeTW9ryCnUjQvT0PpuIdxMHJlo7N1lde42r\nrV+V\r\n=z+TR\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_3.0.0-alpha.10_1545215897946_0.43635967886564386"},"_hasShrinkwrap":false},"3.0.0":{"name":"@pm2/io","version":"3.0.0","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"Apache-2","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","mocha":"^5.2.0","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2","typings":"^2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@pm2/agent-node":"~1.1.1","@pm2/legacy-tracing":"~1.4.2","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"gitHead":"17fe70406404079bc934b6df163111ae7ec70fc6","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@3.0.0","_shasum":"9b0d54ec1f06896ffaeb614e97b8ce096db7bd60","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.10.3","_npmUser":{"name":"keymetrics_bot","email":"tech@keymetrics.io"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"dist":{"shasum":"9b0d54ec1f06896ffaeb614e97b8ce096db7bd60","tarball":"https://registry.npmjs.org/@pm2/io/-/io-3.0.0.tgz","integrity":"sha512-Tt8EaljJlcZopMWjFYAiKLXdhX08FRcI4SGrUh9F/RX5k4t6q0c6l0u6FCyf4x/KIQS2HfsKYivbZvfsLySWkQ==","fileCount":87,"unpackedSize":477880,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcNxvLCRA9TVsSAnZWagAAtiYP/2oOCsFPASrnD7vuPwsE\nBdYLMfB0iqkX/pukbLfCQFVeN4RSKtKsc177cDz3aVtqSm0FA9aXPteoqczG\nOMj0q7BMksMZB3GIZFtQyp3u1hOkwcaRAtQa9I5q2jcvAL/fZ2Zd5RR8ISri\nKHc3uqV8kgr78HtkNSy2Px1mhpQMV2j3UKrRNtfbtEOo3DFe6w7Eof0CUuZC\nMz56lvcGr/8Gjl49VKzjusHhYBoX64d78CKAGxT2Z0+D6vRZP4iZaoQZ7rQX\ng0Rw4P9YhxqUMIG4Z3mWD5dB6yBwDs7k206zXaQP2pb78qZVChfPKvx4uzJf\nA2ed2Q6lKiqQwGua/7aExn/shsaoQKT4tx9CPVbJjAeQpTTXqKT3dtkdkDT1\nbdyHZAWTsbB+k8lwIBcEipbPuEslVtliy+RxgIkHvgJPr0HaeLvzBjIT0/dm\nHp6qtN0nbD6MPnYWjP8krkLj23NHMEyp0Au8920C7SUkNDMkyOYzcI6GMgRy\ngBKOSdtGZmj0iZdZnG+L6uRLYwL9gOnUPBEl8Exs8BAgtBrPW/z9/VgquhqV\nn3bDQPtHTGX81tvvSiacJFiTZH69nTijYgSdVe/dKTK9ZQXayKyqdXVWF3x9\nN5w3Uw5Iey9m3JE+vzqrZBLg+5gwwdyP+Oh6DFh05RHftzwMhmu9N3GYUk4Z\nEFEf\r\n=fe/B\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_3.0.0_1547115466883_0.005738371242636653"},"_hasShrinkwrap":false},"3.1.0":{"name":"@pm2/io","version":"3.1.0","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"Apache-2","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","mocha":"^5.2.0","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2","typings":"^2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@pm2/agent-node":"~1.1.1","@pm2/legacy-tracing":"~1.4.2","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"gitHead":"63111a72446d64740ec57048f2754a999d08d07a","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@3.1.0","_shasum":"b9b8b4622d5a30b03533d8e87f4b349ea8d9d522","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.10.3","_npmUser":{"name":"keymetrics_bot","email":"tech@keymetrics.io"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"dist":{"shasum":"b9b8b4622d5a30b03533d8e87f4b349ea8d9d522","tarball":"https://registry.npmjs.org/@pm2/io/-/io-3.1.0.tgz","integrity":"sha512-9yaXeNf36pWoOZY4ChVpPbvKVij4s+EY1pDLNodlbuVe/WFldOHTj2Pn/PuYYjgwSZ4mD7C3j2cc5u0cJoJoQg==","fileCount":87,"unpackedSize":479735,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcUvVSCRA9TVsSAnZWagAAR3sP/RKS8p8WEFEazXZnSbUr\n8+siAxhMfLtWLLQVwyvSocgMq836HljcJeBkDTEXEcfPXQZP0RrUTjotYSVA\nFVcgkF8V3m0ChXRj/1HiC2HoWLGXYKoy7vsDG41kRTfFlRVGmfdr6nKD2FxC\nr807t7eyQeFHj+uE+uSwrSPynXk2DdA5qrc4PdOpc9VWX48l7inZw3GIi1al\ncflpL8A/YmQ6Tnh4noj8qx9h1NfoDhzViXktbXKwazo9dHRekFXK7hBPp9r3\nYoZsg5j2Vh0+G6EBXfjRGLru7Snxbj9v+OF1kf3zLk/UiatOx5MEklOHnI2/\nWUVmy0O2q1GLOFXWL1Nfh5gI0Rxhe0J0UusDvXDajraQ/Swlg2b8uiFDBQg8\n0UHpKSZ0rmmaXkpOVTDEDcsiExfF8Z/uKSCkC7/Jj3cfxpDR06CAU5H4VKEf\nZmAoDPastUtwHK6f07Xor2aOlgc36q6XaSEkx6nqKCLn0jG4V9niq1IwJSoV\nUpr5DcTVmXK2VfiYiKh+BFXDnEftm4hKXY9MRc8TDKLM89wqo5dt71f3ekn8\nYiApF7sr6xxf2pmA6BEJHT936B3kjaT9m1fIOMUAtclccdSQI510Pu6U/DjG\n/3ZmvgFqC2Ad6/JtX/p/w+O4JqOgmSPn4aFIioYwrSGc37Jg2ajgra7ynESY\nLwjh\r\n=08RR\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_3.1.0_1548940625926_0.5185264720861953"},"_hasShrinkwrap":false},"4.0.0-alpha.1":{"name":"@pm2/io","version":"4.0.0-alpha.1","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"Apache-2","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=6.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/mongodb":"^3.1.19","@types/node":"10.5.2","chai":"4.1.2","express":"^4.16.4","koa":"^2.6.2","mocha":"^5.2.0","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2","typings":"^2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@opencensus/core":"^0.0.8","@opencensus/propagation-b3":"^0.0.8","@pm2/agent-node":"~1.1.3","@pm2/legacy-tracing":"~1.4.2","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","require-in-the-middle":"3.0.0","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 library responsible for gathering the metrics, reporting exceptions, exposing remote actions and every interaction with your application.\n\nYou can also use it as a standalone agent, if you want to connect your nodejs process to PM2 Enterprise but without having to launch your application with PM2.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n- [**Notes**](https://github.com/keymetrics/pm2-io-apm/tree/master#notes)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in the PM2 Plus/Enterprise dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst users = io.metric({\n  name: 'Realtime user',\n});\nusers.set(10)\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **id**: The type of metric (default 'metric', string)\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **gauge**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst myMetric = io.metric({\n  name: 'Realtime Value'\n});\n\nmyMetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst currentReq = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  currentReq.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    currentReq.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from PM2 Plus or Enterprise.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    // cb must be called at the end of the action\n    return cb({ success: true });\n  });\n});\n```\n\n## Report user error\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'), {\n  // you can some http context that will be reported in the UI\n  http: {\n    url: req.url\n  },\n  // or anything that you can like an user id\n  custom: {\n    user: req.user.id\n  }\n});\n```\n\n#### Express error reporting\n\nIf you want you can configure your express middleware to automatically send you an error with the error middleware of express :\n\n```javascript\nconst io = require('@pm2/io')\nconst express = require('express')\nconst app = express()\n\n// add the routes that you want\napp.use('/toto', () => {\n  throw new Error('ajdoijerr')\n})\n\n// always add the middleware as the last one\napp.use(io.expressErrorHandler())\n```\n\n#### Koa error reporting\n\nWe also expose a custom koa middleware to report error with a specific koa middleware :\n\n```javascript\nconst io = require('@pm2/io')\nconst Koa = require('koa')\nconst app = new Koa()\n\n// the order isn't important with koa\napp.use(pmx.koaErrorHandler())\n\n// add the routes that you want\napp.use(async ctx => {\n  ctx.throw(new Error('toto'))\n})\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nexport class IOConfig {\n  /**\n   * Automatically catch unhandled errors\n   */\n  catchExceptions?: boolean = true\n  /**\n   * Configure the metrics to add automatically to your process\n   */\n  metrics?: {\n    eventLoop: boolean = true,\n    network: boolean = false,\n    http: boolean = true,\n    gc: boolean = true,\n    v8: boolean = true\n  }\n  /**\n   * Configure the default actions that you can run\n   */\n  actions?: {\n    eventLoopDump?: boolean = true\n  }\n  /**\n   * Configure availables profilers that will be exposed\n   */\n  profiling?: {\n    /**\n     * Toggle the CPU profiling actions\n     */\n    cpuJS: boolean = true\n    /**\n     * Toggle the heap snapshot actions\n     */\n    heapSnapshot: boolean = true\n    /**\n     * Toggle the heap sampling actions\n     */\n    heapSampling: boolean = true\n    /**\n     * Force a specific implementation of profiler\n     * \n     * available: \n     *  - 'addon' (using the v8-profiler-node8 addon)\n     *  - 'inspector' (using the \"inspector\" api from node core)\n     *  - 'none' (disable the profilers)\n     *  - 'both' (will try to use inspector and fallback on addon if available)\n     */\n    implementation: string = 'both'\n  }\n  /**\n   * Configure the transaction tracing options\n   */\n  tracing?: {\n    /**\n     * Choose to enable the HTTP tracing system\n     * \n     * default is false\n     */\n    enabled: boolean = false\n    /**\n     * Specify specific urls to ignore\n     */\n    ignoreFilter?: {\n      url?: string[]\n      method?: string[]\n    }\n    // Log levels: 0-disabled,1-error,2-warn,3-info,4-debug\n    logLevel?: number\n    /**\n     * To disable a plugin in this list, you may override its path with a falsy\n     * value. Disabling any of the default plugins may cause unwanted behavior,\n     * so use caution.\n     */\n    plugins?: {\n      connect?: boolean\n      express?: boolean\n      'generic-pool'?: boolean\n      hapi?: boolean\n      http?: boolean\n      knex?: boolean\n      koa?: boolean\n      'mongodb-core'?: boolean\n      mysql?: boolean\n      pg?: boolean\n      redis?: boolean\n      restify?: boolean\n    }\n    /**\n     * An upper bound on the number of traces to gather each second. If set to 0,\n     * sampling is disabled and all traces are recorded. Sampling rates greater\n     * than 1000 are not supported and will result in at most 1000 samples per\n     * second.\n     */\n    samplingRate?: number\n  }\n  /**\n   * If you want to connect to PM2 Enterprise without using PM2, you should enable\n   * the standalone mode\n   * \n   * default is false\n   */\n  standalone?: boolean = false\n  /**\n   * Define custom options for the standalone mode\n   */\n  apmOptions?: {\n    /**\n     * public key of the bucket to which the agent need to connect\n     */\n    publicKey: string\n    /**\n     * Secret key of the bucket to which the agent need to connect\n     */\n    secretKey: string\n    /**\n     * The name of the application/service that will be reported to PM2 Enterprise\n     */\n    appName: string\n    /**\n     * The name of the server as reported in PM2 Enterprise\n     *\n     * default is os.hostname()\n     */\n    serverName?: string\n    /**\n     * Broadcast all the logs from your application to our backend\n     */\n    sendLogs?: Boolean\n    /**\n     * Since logs can be forwared to our backend you may want to ignore specific\n     * logs (containing sensitive data for example)\n     */\n    logFilter?: string | RegExp\n    /**\n     * Proxy URI to use when reaching internet\n     * Supporting socks5,http,https,pac,socks4\n     * see https://github.com/TooTallNate/node-proxy-agent\n     *\n     * example: socks5://username:password@some-socks-proxy.com:9050\n     */\n    proxy?: string\n  }\n}\n```\n\nYou can pass whatever options you want to `io.init`, it will automatically update its configuration.\n\n## Migration Guides\n\n### 2.x to 3.x\n\nHere the list of breaking changes :\n\n- Removed `io.scopedAction` because of low user adoption\n- Removed `io.notify` in favor of `io.notifyError` (droppin replacement)\n- Removed support for `gc-stats` module\n- Removed Heap profiling support when using the profiler addon (which wasn't possible at all)\n- Removed deep-metrics support (the module that allowed to get metrics about websocket/mongo out of the box), we are working on a better solution.\n- Removed `io.transpose`\n- **Changed the configuration structure**\n\nHigh chance that if you used a custom configuration for `io.init`, you need to change it to reflect the new configuration.\nApart from that and the `io.notify` removal, it shouldn't break the way you instanciated metrics.\nIf you find something else that breaks please report it to us (tech@keymetrics.io).\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Notes\n\nCurently this package isn't compatible with `amqp` if you use the `network` metrics. We recommend to disable the metrics with the following configuration in this case :\n\n```javascript\nio.init({\n  metrics: {\n    network: false\n  }\n})\n```\n","readmeFilename":"README.md","gitHead":"a928454893804485fc1d2c6ade99e683b70b6c62","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@4.0.0-alpha.1","_npmVersion":"6.4.1","_nodeVersion":"8.15.0","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-h6+9uUvoftqvTCRYjonLxlBRvxcOGxBvYR6oxDorGzNuDLTVDeRbPVHSncqX2QSAPUwHkMVkX3ZeYwuLd+A3Ow==","shasum":"2e21b1b03a6812d905e36954eb61f5b08cc62adc","tarball":"https://registry.npmjs.org/@pm2/io/-/io-4.0.0-alpha.1.tgz","fileCount":122,"unpackedSize":641962,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcVxPJCRA9TVsSAnZWagAAy5EP/A0d2UPY+lt3mqIqX8fH\nIxRb/cKMzJVDLWr+KsjGefRVRAtjW/FRDz9dxcBmAhuXVoVjIeBvW041ZksX\n2x69xqEhMYVY+LZ9hLPZ043hH8ym/xIEMvQFS1Lkyz67B4vqKXqrPEK/UPgh\nuyaMwhtcch59SXaGYddfx8G64fELpPhorjh6yVk0LiV8/5f2VdSkkc2kpJo8\nXluIdhLBSiFoOIy/EI/9bvict0LSSwdSk4nxIIGeBjn7fo8mi3GD123PefKf\nnuyLH4gRfYDCYYxs3I7H9Dgu4SXyxI7odnUrKfFQYX1Irqw2Xyla6CwECA7O\n90G+k2iNtZslNKJCgMpdX2xcky4F9ZgBkXf7KJAkOwvMhUVuZpQ9EUnvvjf2\nDkaqSQJCNIBt1yK8Hs25Doa3PcYHSyRFHqOx+Aq2NgYl7pBZGeimIOlDk5s7\n6KbL9GLTHcSN+a9RcwOuU7urPDhP0ZTuDQ6q8hMHmrj4ZOT90fWtAVkWe/BH\nhYCLvqiAiug3wUWMScNgBr5fippnDdxhP0Q8cf/HVg8K94BKz01YQXw7q8Pe\ngfjdMMs5ay2Fh8fgfjialvePakgnfK0yuKxyiya3STGT0eFUDskCFfa1h6zA\n3LFFzf60tpa1Cj5ZiDhOAJbuiGUoZFeY8zSV7fBqkqUTYE605Gm6GHYv5Of/\nRLyJ\r\n=bQxN\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_4.0.0-alpha.1_1549210568387_0.21268084169737822"},"_hasShrinkwrap":false},"4.0.0-alpha.2":{"name":"@pm2/io","version":"4.0.0-alpha.2","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"Apache-2","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=6.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/mongodb":"^3.1.19","@types/node":"10.5.2","chai":"4.1.2","express":"^4.16.4","koa":"^2.6.2","mocha":"^5.2.0","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2","typings":"^2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@opencensus/core":"^0.0.8","@opencensus/propagation-b3":"^0.0.8","@pm2/agent-node":"~1.1.3","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","require-in-the-middle":"3.0.0","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 library responsible for gathering the metrics, reporting exceptions, exposing remote actions and every interaction with your application.\n\nYou can also use it as a standalone agent, if you want to connect your nodejs process to PM2 Enterprise but without having to launch your application with PM2.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n- [**Notes**](https://github.com/keymetrics/pm2-io-apm/tree/master#notes)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in the PM2 Plus/Enterprise dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst users = io.metric({\n  name: 'Realtime user',\n});\nusers.set(10)\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **id**: The type of metric (default 'metric', string)\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **gauge**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst myMetric = io.metric({\n  name: 'Realtime Value'\n});\n\nmyMetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst currentReq = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  currentReq.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    currentReq.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from PM2 Plus or Enterprise.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    // cb must be called at the end of the action\n    return cb({ success: true });\n  });\n});\n```\n\n## Report user error\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'), {\n  // you can some http context that will be reported in the UI\n  http: {\n    url: req.url\n  },\n  // or anything that you can like an user id\n  custom: {\n    user: req.user.id\n  }\n});\n```\n\n#### Express error reporting\n\nIf you want you can configure your express middleware to automatically send you an error with the error middleware of express :\n\n```javascript\nconst io = require('@pm2/io')\nconst express = require('express')\nconst app = express()\n\n// add the routes that you want\napp.use('/toto', () => {\n  throw new Error('ajdoijerr')\n})\n\n// always add the middleware as the last one\napp.use(io.expressErrorHandler())\n```\n\n#### Koa error reporting\n\nWe also expose a custom koa middleware to report error with a specific koa middleware :\n\n```javascript\nconst io = require('@pm2/io')\nconst Koa = require('koa')\nconst app = new Koa()\n\n// the order isn't important with koa\napp.use(pmx.koaErrorHandler())\n\n// add the routes that you want\napp.use(async ctx => {\n  ctx.throw(new Error('toto'))\n})\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nexport class IOConfig {\n  /**\n   * Automatically catch unhandled errors\n   */\n  catchExceptions?: boolean = true\n  /**\n   * Configure the metrics to add automatically to your process\n   */\n  metrics?: {\n    eventLoop: boolean = true,\n    network: boolean = false,\n    http: boolean = true,\n    gc: boolean = true,\n    v8: boolean = true\n  }\n  /**\n   * Configure the default actions that you can run\n   */\n  actions?: {\n    eventLoopDump?: boolean = true\n  }\n  /**\n   * Configure availables profilers that will be exposed\n   */\n  profiling?: {\n    /**\n     * Toggle the CPU profiling actions\n     */\n    cpuJS: boolean = true\n    /**\n     * Toggle the heap snapshot actions\n     */\n    heapSnapshot: boolean = true\n    /**\n     * Toggle the heap sampling actions\n     */\n    heapSampling: boolean = true\n    /**\n     * Force a specific implementation of profiler\n     * \n     * available: \n     *  - 'addon' (using the v8-profiler-node8 addon)\n     *  - 'inspector' (using the \"inspector\" api from node core)\n     *  - 'none' (disable the profilers)\n     *  - 'both' (will try to use inspector and fallback on addon if available)\n     */\n    implementation: string = 'both'\n  }\n  /**\n   * Configure the transaction tracing options\n   */\n  tracing?: {\n    /**\n     * Choose to enable the HTTP tracing system\n     * \n     * default is false\n     */\n    enabled: boolean = false\n    /**\n     * Specify specific urls to ignore\n     */\n    ignoreFilter?: {\n      url?: string[]\n      method?: string[]\n    }\n    // Log levels: 0-disabled,1-error,2-warn,3-info,4-debug\n    logLevel?: number\n    /**\n     * To disable a plugin in this list, you may override its path with a falsy\n     * value. Disabling any of the default plugins may cause unwanted behavior,\n     * so use caution.\n     */\n    plugins?: {\n      connect?: boolean\n      express?: boolean\n      'generic-pool'?: boolean\n      hapi?: boolean\n      http?: boolean\n      knex?: boolean\n      koa?: boolean\n      'mongodb-core'?: boolean\n      mysql?: boolean\n      pg?: boolean\n      redis?: boolean\n      restify?: boolean\n    }\n    /**\n     * An upper bound on the number of traces to gather each second. If set to 0,\n     * sampling is disabled and all traces are recorded. Sampling rates greater\n     * than 1000 are not supported and will result in at most 1000 samples per\n     * second.\n     */\n    samplingRate?: number\n  }\n  /**\n   * If you want to connect to PM2 Enterprise without using PM2, you should enable\n   * the standalone mode\n   * \n   * default is false\n   */\n  standalone?: boolean = false\n  /**\n   * Define custom options for the standalone mode\n   */\n  apmOptions?: {\n    /**\n     * public key of the bucket to which the agent need to connect\n     */\n    publicKey: string\n    /**\n     * Secret key of the bucket to which the agent need to connect\n     */\n    secretKey: string\n    /**\n     * The name of the application/service that will be reported to PM2 Enterprise\n     */\n    appName: string\n    /**\n     * The name of the server as reported in PM2 Enterprise\n     *\n     * default is os.hostname()\n     */\n    serverName?: string\n    /**\n     * Broadcast all the logs from your application to our backend\n     */\n    sendLogs?: Boolean\n    /**\n     * Since logs can be forwared to our backend you may want to ignore specific\n     * logs (containing sensitive data for example)\n     */\n    logFilter?: string | RegExp\n    /**\n     * Proxy URI to use when reaching internet\n     * Supporting socks5,http,https,pac,socks4\n     * see https://github.com/TooTallNate/node-proxy-agent\n     *\n     * example: socks5://username:password@some-socks-proxy.com:9050\n     */\n    proxy?: string\n  }\n}\n```\n\nYou can pass whatever options you want to `io.init`, it will automatically update its configuration.\n\n## Migration Guides\n\n### 2.x to 3.x\n\nHere the list of breaking changes :\n\n- Removed `io.scopedAction` because of low user adoption\n- Removed `io.notify` in favor of `io.notifyError` (droppin replacement)\n- Removed support for `gc-stats` module\n- Removed Heap profiling support when using the profiler addon (which wasn't possible at all)\n- Removed deep-metrics support (the module that allowed to get metrics about websocket/mongo out of the box), we are working on a better solution.\n- Removed `io.transpose`\n- **Changed the configuration structure**\n\nHigh chance that if you used a custom configuration for `io.init`, you need to change it to reflect the new configuration.\nApart from that and the `io.notify` removal, it shouldn't break the way you instanciated metrics.\nIf you find something else that breaks please report it to us (tech@keymetrics.io).\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Notes\n\nCurently this package isn't compatible with `amqp` if you use the `network` metrics. We recommend to disable the metrics with the following configuration in this case :\n\n```javascript\nio.init({\n  metrics: {\n    network: false\n  }\n})\n```\n","readmeFilename":"README.md","gitHead":"de7b83bba47c1c0878165fdd0f9906a903b28bf9","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@4.0.0-alpha.2","_npmVersion":"6.4.1","_nodeVersion":"8.15.0","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-+Lkm91vYm8I2g+3XDmlT9PwnsLaXgX+1qq/a0d15oeqZLwjo8AHIBnQDq5GdLxohX30jDWyGngLVKvmhtitCrQ==","shasum":"ac37655567190cea1313f9af67210cb1e765c3f1","tarball":"https://registry.npmjs.org/@pm2/io/-/io-4.0.0-alpha.2.tgz","fileCount":104,"unpackedSize":559021,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcWB03CRA9TVsSAnZWagAAxyIP/iEcngHBioSS4m9zv5bg\nXrfu56UlH6sNb2Sn80d8PweSqaugOCdeLmvEtnXPEH0vygvuF4IkEUMdr+RY\nxfQ9DaTHOMwXLyfdmWYGw5KFI6cEkZl5IhLW05nFrF8x7Z+hRDtU0HDyjexM\nQz7Nk/l3P0yQeWS0j8o2mqTK075UZDxFFqXkhe6QJU2wkqaAJsDa7nIRW/dn\nhF4yXl5w9FXmcqnr5EMBboVS5ZXmGaVxSnMxz0rBVaTClxlEl4c95SGtwveR\nkbF6e6Mkroj18hUO9WsaeR+kYXn82i/D92auaK2c/GMym2DniwoP0cPRdT8G\nBDQYF6klk3mjXsL9MSFFCTxeHoPpmJPGHEy0WvvnjvuVfr8UWOL04mhfoolC\nwC2GNYqeqlyNVOZggHksUAo50KvOMz6dSV4rbsZ+KDL5nw/LtFHk0r9q1gQi\nHSSjnTu41+Xw9yfmerePri9maHxq1GHlwpcttjWP+zQsz0fr5LkwYJdTqJ91\nAvywJGQ37Zj3BUUq4p8MkO7dPp/4m4666Ig0boIgg67V6TXKrrlRtX5tebLv\ncrIbrMSM6IcXc8YizeZGximiKFIC9m3JGBD1Bn+G2U/ZX+1Xqh+Dg7NZpBtV\njVHhx6w0qTe1m2h7bUI9x+Ok9prazuCNYY7zPX48XTaIggRNScYKpjrmhkNs\nFnBU\r\n=ggXv\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_4.0.0-alpha.2_1549278518270_0.7194371461808846"},"_hasShrinkwrap":false},"4.0.0-alpha.3":{"name":"@pm2/io","version":"4.0.0-alpha.3","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"Apache-2","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=6.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/mongodb":"^3.1.19","@types/node":"10.5.2","chai":"4.1.2","express":"^4.16.4","koa":"^2.6.2","mocha":"^5.2.0","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2","typings":"^2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@opencensus/core":"^0.0.8","@opencensus/propagation-b3":"^0.0.8","@pm2/agent-node":"~1.1.3","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","require-in-the-middle":"3.0.0","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 library responsible for gathering the metrics, reporting exceptions, exposing remote actions and every interaction with your application.\n\nYou can also use it as a standalone agent, if you want to connect your nodejs process to PM2 Enterprise but without having to launch your application with PM2.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n- [**Notes**](https://github.com/keymetrics/pm2-io-apm/tree/master#notes)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in the PM2 Plus/Enterprise dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst users = io.metric({\n  name: 'Realtime user',\n});\nusers.set(10)\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **id**: The type of metric (default 'metric', string)\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **gauge**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst myMetric = io.metric({\n  name: 'Realtime Value'\n});\n\nmyMetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst currentReq = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  currentReq.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    currentReq.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from PM2 Plus or Enterprise.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    // cb must be called at the end of the action\n    return cb({ success: true });\n  });\n});\n```\n\n## Report user error\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'), {\n  // you can some http context that will be reported in the UI\n  http: {\n    url: req.url\n  },\n  // or anything that you can like an user id\n  custom: {\n    user: req.user.id\n  }\n});\n```\n\n#### Express error reporting\n\nIf you want you can configure your express middleware to automatically send you an error with the error middleware of express :\n\n```javascript\nconst io = require('@pm2/io')\nconst express = require('express')\nconst app = express()\n\n// add the routes that you want\napp.use('/toto', () => {\n  throw new Error('ajdoijerr')\n})\n\n// always add the middleware as the last one\napp.use(io.expressErrorHandler())\n```\n\n#### Koa error reporting\n\nWe also expose a custom koa middleware to report error with a specific koa middleware :\n\n```javascript\nconst io = require('@pm2/io')\nconst Koa = require('koa')\nconst app = new Koa()\n\n// the order isn't important with koa\napp.use(pmx.koaErrorHandler())\n\n// add the routes that you want\napp.use(async ctx => {\n  ctx.throw(new Error('toto'))\n})\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nexport class IOConfig {\n  /**\n   * Automatically catch unhandled errors\n   */\n  catchExceptions?: boolean = true\n  /**\n   * Configure the metrics to add automatically to your process\n   */\n  metrics?: {\n    eventLoop: boolean = true,\n    network: boolean = false,\n    http: boolean = true,\n    gc: boolean = true,\n    v8: boolean = true\n  }\n  /**\n   * Configure the default actions that you can run\n   */\n  actions?: {\n    eventLoopDump?: boolean = true\n  }\n  /**\n   * Configure availables profilers that will be exposed\n   */\n  profiling?: {\n    /**\n     * Toggle the CPU profiling actions\n     */\n    cpuJS: boolean = true\n    /**\n     * Toggle the heap snapshot actions\n     */\n    heapSnapshot: boolean = true\n    /**\n     * Toggle the heap sampling actions\n     */\n    heapSampling: boolean = true\n    /**\n     * Force a specific implementation of profiler\n     * \n     * available: \n     *  - 'addon' (using the v8-profiler-node8 addon)\n     *  - 'inspector' (using the \"inspector\" api from node core)\n     *  - 'none' (disable the profilers)\n     *  - 'both' (will try to use inspector and fallback on addon if available)\n     */\n    implementation: string = 'both'\n  }\n  /**\n   * Configure the transaction tracing options\n   */\n  tracing?: {\n    /**\n     * Choose to enable the HTTP tracing system\n     * \n     * default is false\n     */\n    enabled: boolean = false\n    /**\n     * Specify specific urls to ignore\n     */\n    ignoreFilter?: {\n      url?: string[]\n      method?: string[]\n    }\n    // Log levels: 0-disabled,1-error,2-warn,3-info,4-debug\n    logLevel?: number\n    /**\n     * To disable a plugin in this list, you may override its path with a falsy\n     * value. Disabling any of the default plugins may cause unwanted behavior,\n     * so use caution.\n     */\n    plugins?: {\n      connect?: boolean\n      express?: boolean\n      'generic-pool'?: boolean\n      hapi?: boolean\n      http?: boolean\n      knex?: boolean\n      koa?: boolean\n      'mongodb-core'?: boolean\n      mysql?: boolean\n      pg?: boolean\n      redis?: boolean\n      restify?: boolean\n    }\n    /**\n     * An upper bound on the number of traces to gather each second. If set to 0,\n     * sampling is disabled and all traces are recorded. Sampling rates greater\n     * than 1000 are not supported and will result in at most 1000 samples per\n     * second.\n     */\n    samplingRate?: number\n  }\n  /**\n   * If you want to connect to PM2 Enterprise without using PM2, you should enable\n   * the standalone mode\n   * \n   * default is false\n   */\n  standalone?: boolean = false\n  /**\n   * Define custom options for the standalone mode\n   */\n  apmOptions?: {\n    /**\n     * public key of the bucket to which the agent need to connect\n     */\n    publicKey: string\n    /**\n     * Secret key of the bucket to which the agent need to connect\n     */\n    secretKey: string\n    /**\n     * The name of the application/service that will be reported to PM2 Enterprise\n     */\n    appName: string\n    /**\n     * The name of the server as reported in PM2 Enterprise\n     *\n     * default is os.hostname()\n     */\n    serverName?: string\n    /**\n     * Broadcast all the logs from your application to our backend\n     */\n    sendLogs?: Boolean\n    /**\n     * Since logs can be forwared to our backend you may want to ignore specific\n     * logs (containing sensitive data for example)\n     */\n    logFilter?: string | RegExp\n    /**\n     * Proxy URI to use when reaching internet\n     * Supporting socks5,http,https,pac,socks4\n     * see https://github.com/TooTallNate/node-proxy-agent\n     *\n     * example: socks5://username:password@some-socks-proxy.com:9050\n     */\n    proxy?: string\n  }\n}\n```\n\nYou can pass whatever options you want to `io.init`, it will automatically update its configuration.\n\n## Migration Guides\n\n### 2.x to 3.x\n\nHere the list of breaking changes :\n\n- Removed `io.scopedAction` because of low user adoption\n- Removed `io.notify` in favor of `io.notifyError` (droppin replacement)\n- Removed support for `gc-stats` module\n- Removed Heap profiling support when using the profiler addon (which wasn't possible at all)\n- Removed deep-metrics support (the module that allowed to get metrics about websocket/mongo out of the box), we are working on a better solution.\n- Removed `io.transpose`\n- **Changed the configuration structure**\n\nHigh chance that if you used a custom configuration for `io.init`, you need to change it to reflect the new configuration.\nApart from that and the `io.notify` removal, it shouldn't break the way you instanciated metrics.\nIf you find something else that breaks please report it to us (tech@keymetrics.io).\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Notes\n\nCurently this package isn't compatible with `amqp` if you use the `network` metrics. We recommend to disable the metrics with the following configuration in this case :\n\n```javascript\nio.init({\n  metrics: {\n    network: false\n  }\n})\n```\n","readmeFilename":"README.md","gitHead":"de7b83bba47c1c0878165fdd0f9906a903b28bf9","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@4.0.0-alpha.3","_npmVersion":"6.4.1","_nodeVersion":"8.15.0","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-2sn3xu5bRApVM6P03oqaBPGe7AGuC1vQWgL+0Z6klnEB+nYyJiDpbSVSMXYdcxU4UpdcA6pKXM6vC2cInmkvag==","shasum":"806de8f8255e75787aa73fb06850e014c9a2bd31","tarball":"https://registry.npmjs.org/@pm2/io/-/io-4.0.0-alpha.3.tgz","fileCount":110,"unpackedSize":561165,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcWDp6CRA9TVsSAnZWagAAUUIP/1MAnZkTLfcZD3sxU7EW\nzW/W4vQPA7IqRNc/7kkURviThwiwx+v8Y1DNWRIzxuaBSalCcK1HEKIb5hx5\nH4ZFPhkNjP2NtQEq0ueZo1b//BbLd6Q/zLxgNDTogJBAtoZUYQHc5Mr6zPa3\nH7gJgYXy5w114DKY+9Ts4XZEkn/bn6XhhYC2bwImGNt37+McjKnoMtn8lujD\nMRCLdRH9I/kT+iAioTNvJuI6BXDFC2upteUSgWbreG9hzFQYyB/tXodLJQoV\nZMEjNBi46DI5gKNMI9Qx4Ng/xIZq0vJCIe6gIudngEXJuxwGmJV7WZgSu7u0\nkyqkE9g8MQDwJlfM8dFFFyKGr32X21MO2pne3AC1/hW4ox4UAguWKDgqzcXz\njxfuEDCqpmKdUdjzyE2fOPMdIpddQsNb5Ni3hLlkM+sERQOTsRmTUZHsmjK1\nRH57YNI1yCt+bIm0rlaZbZiCt7APILRXUm+KApwQvCuq4b4SOdHdaJinyqN1\n612Cwzbmswbnx+daHvwRaRXKB/1P1tDsfRqhTFnxsrdZRyGx0QLcXM7M+JDh\nJxpXoS3XzsQPk/HPknxv+bDI0u9f4G2w82gw18z+NNiVck4jYab7ON78OjhY\nlMjgSVBHyFS8ICu0f3qWqnaSvAma0mwXKHnyCh0pGpIs9BA8xKcCoXEizz6O\np1Cx\r\n=rLiv\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_4.0.0-alpha.3_1549286009475_0.8422436684892924"},"_hasShrinkwrap":false},"3.1.1":{"name":"@pm2/io","version":"3.1.1","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"Apache-2","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=4.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/node":"10.5.2","chai":"4.1.2","mocha":"^5.2.0","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2","typings":"^2.1.1"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@pm2/agent-node":"~1.1.1","@pm2/legacy-tracing":"~1.4.2","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"gitHead":"fb651e836ecf6563c8450d2f501e82a9a50f3964","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@3.1.1","_shasum":"3fe902cc18bb96f6fbe9794504c514213c667e55","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.10.3","_npmUser":{"name":"keymetrics_bot","email":"tech@keymetrics.io"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"dist":{"shasum":"3fe902cc18bb96f6fbe9794504c514213c667e55","tarball":"https://registry.npmjs.org/@pm2/io/-/io-3.1.1.tgz","integrity":"sha512-DN66z5BwFUV2zojrtcdFE2gQa/cOWlMIkCrYGqUtLiG+K0ukS3ktDOksPnNKouhfWcwc2Nx+UtbQrDhvOPGIXQ==","fileCount":87,"unpackedSize":480114,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcWcODCRA9TVsSAnZWagAAL9cQAJz5JEIfeQPpwEH1A9kx\nSr+pdmK3ywHxw7F3XS8O/ncaPj8KI3weFonbKYgFCYkolmlviDf4k0dWZSHj\ncuuKs4bp3TrWzuCmV90xbbAUIes/t/3/BLuvQ9/jSFJ6Tp+KTsjRtSG4JcmD\n3JeSzxT8fvGhYijM3zOJoyqP8+lg0Dfag/E5Ov4Vfgex8K3DSCxD0GqwSxjf\nkn46sEP37vJj5xVCcmyO1vsJICSc7TmJwxh7QKRze8SsNjtdT6jgHFieGgHh\n6eZpTlY1OfsdxqZO8zyXu7NGUHlq6dBXFMihIVxwXhs9IowMcHqPSlrcOWI3\njkASOmbzwrZKE3Q9cNqzKY39j39AVd84IeMXZNa5VVAnc5pUHxXE8VMMCKgz\nsKtRmCyo5Aoo6ksAesw41bvd/YVgy6CaW8RIBVMcyy8wwZYnGYQnJbHs7WEf\nqIkMK2fk/DEfspnsNve29RTrUeT5bLDDTGAQ+CR7Z2CjX8aSlZul2NQ/YSO6\n0cGukPK7Cj+TY/ajPm9CswP4IxmWHR/OR5dgXx0e6lRyWe/qxlrOaSVtt4f7\n3Tuaf2xqKv8tAbIUoWmF27tHdaNZpYBNOdd1YZOfP7v+9ReNyj43FMdfrisR\nFzFwmJlZ6uoqYlcqcs+taqE8xsDSBrLCzf6Z90niXgUdg5CL7dd8rSzCJdRX\nsQFg\r\n=wNEU\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_3.1.1_1549386626230_0.5296976699890272"},"_hasShrinkwrap":false},"4.0.0-alpha.4":{"name":"@pm2/io","version":"4.0.0-alpha.4","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"Apache-2","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=6.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/mongodb":"^3.1.19","@types/node":"^10.12.21","@types/redis":"^2.8.10","chai":"4.1.2","mocha":"^5.2.0","nock":"^10.0.6","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@opencensus/propagation-b3":"^0.0.8","@pm2/agent-node":"~1.1.3","@pm2/opencensus-core":"^0.0.9","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","require-in-the-middle":"3.0.0","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 library responsible for gathering the metrics, reporting exceptions, exposing remote actions and every interaction with your application.\n\nYou can also use it as a standalone agent, if you want to connect your nodejs process to PM2 Enterprise but without having to launch your application with PM2.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n- [**Notes**](https://github.com/keymetrics/pm2-io-apm/tree/master#notes)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in the PM2 Plus/Enterprise dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst users = io.metric({\n  name: 'Realtime user',\n});\nusers.set(10)\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **id**: The type of metric (default 'metric', string)\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **gauge**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst myMetric = io.metric({\n  name: 'Realtime Value'\n});\n\nmyMetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst currentReq = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  currentReq.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    currentReq.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from PM2 Plus or Enterprise.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    // cb must be called at the end of the action\n    return cb({ success: true });\n  });\n});\n```\n\n## Report user error\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'), {\n  // you can some http context that will be reported in the UI\n  http: {\n    url: req.url\n  },\n  // or anything that you can like an user id\n  custom: {\n    user: req.user.id\n  }\n});\n```\n\n#### Express error reporting\n\nIf you want you can configure your express middleware to automatically send you an error with the error middleware of express :\n\n```javascript\nconst io = require('@pm2/io')\nconst express = require('express')\nconst app = express()\n\n// add the routes that you want\napp.use('/toto', () => {\n  throw new Error('ajdoijerr')\n})\n\n// always add the middleware as the last one\napp.use(io.expressErrorHandler())\n```\n\n#### Koa error reporting\n\nWe also expose a custom koa middleware to report error with a specific koa middleware :\n\n```javascript\nconst io = require('@pm2/io')\nconst Koa = require('koa')\nconst app = new Koa()\n\n// the order isn't important with koa\napp.use(pmx.koaErrorHandler())\n\n// add the routes that you want\napp.use(async ctx => {\n  ctx.throw(new Error('toto'))\n})\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nexport class IOConfig {\n  /**\n   * Automatically catch unhandled errors\n   */\n  catchExceptions?: boolean = true\n  /**\n   * Configure the metrics to add automatically to your process\n   */\n  metrics?: {\n    eventLoop: boolean = true,\n    network: boolean = false,\n    http: boolean = true,\n    gc: boolean = true,\n    v8: boolean = true\n  }\n  /**\n   * Configure the default actions that you can run\n   */\n  actions?: {\n    eventLoopDump?: boolean = true\n  }\n  /**\n   * Configure availables profilers that will be exposed\n   */\n  profiling?: {\n    /**\n     * Toggle the CPU profiling actions\n     */\n    cpuJS: boolean = true\n    /**\n     * Toggle the heap snapshot actions\n     */\n    heapSnapshot: boolean = true\n    /**\n     * Toggle the heap sampling actions\n     */\n    heapSampling: boolean = true\n    /**\n     * Force a specific implementation of profiler\n     * \n     * available: \n     *  - 'addon' (using the v8-profiler-node8 addon)\n     *  - 'inspector' (using the \"inspector\" api from node core)\n     *  - 'none' (disable the profilers)\n     *  - 'both' (will try to use inspector and fallback on addon if available)\n     */\n    implementation: string = 'both'\n  }\n  /**\n   * Configure the transaction tracing options\n   */\n  tracing?: {\n    /**\n     * Choose to enable the HTTP tracing system\n     * \n     * default is false\n     */\n    enabled: boolean = false\n    /**\n     * Specify specific urls to ignore\n     */\n    ignoreFilter?: {\n      url?: string[]\n      method?: string[]\n    }\n    // Log levels: 0-disabled,1-error,2-warn,3-info,4-debug\n    logLevel?: number\n    /**\n     * To disable a plugin in this list, you may override its path with a falsy\n     * value. Disabling any of the default plugins may cause unwanted behavior,\n     * so use caution.\n     */\n    plugins?: {\n      connect?: boolean\n      express?: boolean\n      'generic-pool'?: boolean\n      hapi?: boolean\n      http?: boolean\n      knex?: boolean\n      koa?: boolean\n      'mongodb-core'?: boolean\n      mysql?: boolean\n      pg?: boolean\n      redis?: boolean\n      restify?: boolean\n    }\n    /**\n     * An upper bound on the number of traces to gather each second. If set to 0,\n     * sampling is disabled and all traces are recorded. Sampling rates greater\n     * than 1000 are not supported and will result in at most 1000 samples per\n     * second.\n     */\n    samplingRate?: number\n  }\n  /**\n   * If you want to connect to PM2 Enterprise without using PM2, you should enable\n   * the standalone mode\n   * \n   * default is false\n   */\n  standalone?: boolean = false\n  /**\n   * Define custom options for the standalone mode\n   */\n  apmOptions?: {\n    /**\n     * public key of the bucket to which the agent need to connect\n     */\n    publicKey: string\n    /**\n     * Secret key of the bucket to which the agent need to connect\n     */\n    secretKey: string\n    /**\n     * The name of the application/service that will be reported to PM2 Enterprise\n     */\n    appName: string\n    /**\n     * The name of the server as reported in PM2 Enterprise\n     *\n     * default is os.hostname()\n     */\n    serverName?: string\n    /**\n     * Broadcast all the logs from your application to our backend\n     */\n    sendLogs?: Boolean\n    /**\n     * Since logs can be forwared to our backend you may want to ignore specific\n     * logs (containing sensitive data for example)\n     */\n    logFilter?: string | RegExp\n    /**\n     * Proxy URI to use when reaching internet\n     * Supporting socks5,http,https,pac,socks4\n     * see https://github.com/TooTallNate/node-proxy-agent\n     *\n     * example: socks5://username:password@some-socks-proxy.com:9050\n     */\n    proxy?: string\n  }\n}\n```\n\nYou can pass whatever options you want to `io.init`, it will automatically update its configuration.\n\n## Migration Guides\n\n### 2.x to 3.x\n\nHere the list of breaking changes :\n\n- Removed `io.scopedAction` because of low user adoption\n- Removed `io.notify` in favor of `io.notifyError` (droppin replacement)\n- Removed support for `gc-stats` module\n- Removed Heap profiling support when using the profiler addon (which wasn't possible at all)\n- Removed deep-metrics support (the module that allowed to get metrics about websocket/mongo out of the box), we are working on a better solution.\n- Removed `io.transpose`\n- **Changed the configuration structure**\n\nHigh chance that if you used a custom configuration for `io.init`, you need to change it to reflect the new configuration.\nApart from that and the `io.notify` removal, it shouldn't break the way you instanciated metrics.\nIf you find something else that breaks please report it to us (tech@keymetrics.io).\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Notes\n\nCurently this package isn't compatible with `amqp` if you use the `network` metrics. We recommend to disable the metrics with the following configuration in this case :\n\n```javascript\nio.init({\n  metrics: {\n    network: false\n  }\n})\n```\n","readmeFilename":"README.md","gitHead":"2e4c004ff340b9b7c3aee0045fa730a538760d9f","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@4.0.0-alpha.4","_npmVersion":"6.4.1","_nodeVersion":"8.15.0","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-VvsFSxaUuhH5+5sjdC9VNHKJ4RA38i2LBGU7o5TcINAIYYVbFEvAE25idZ72CYJssxtjCCExxu7Hr8iTjvMFLw==","shasum":"709a2d51bc4450c8ea8f0483063ba26a18f369ef","tarball":"https://registry.npmjs.org/@pm2/io/-/io-4.0.0-alpha.4.tgz","fileCount":119,"unpackedSize":661488,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcWqzBCRA9TVsSAnZWagAArqQP/38Gvrt/NMQePr5i4ygk\nWBGCbwbgvrcYh8ldu6PrbCHtO7jAVDc89LB7xDrGRnSBjZ5um/jlDsxFNELC\nHVQNzRKf9e5BAlom2lY/ZyJDrcB1Ig8Ym+1fqo9JxledsnzEGjum0RdXRt9/\nhRYkBUshW65fG70/CK6abYMfQgKg9e5NhScwcrvVswiYdJQ5MDBEFx/TbKdn\nwDqqe4XdauRaWU3CjLnnBx/jhc8OgkcPKTYAjatH6OdxMY2iKiu4BS0Kc5cS\nq6PAnUDBF3bRSVNyxFDJf6cH8QeMJIAhpSzY96JzkOMp+RAb/fpcMkuXk6kJ\nYARJlKeKKyhUNp2mU+vd8zZGRAlMPqSQsivqP/TTeGgm91FIy4xqL/fbYzmP\nMMvGMkouFgP/xBNtTaQylHuJqLvBtk31GflceqTo0YV9zHsMqQVnpG+xF5Vs\nGIhHM8+YswJgY65YSDY0fhihPqkEbs3TfVoQNMdw8EBQvE3GHtmeCG9EXJ/k\nEG5HpyQ4D9ns6s0qwkV8h0JEVRwtCTVpn5q9DNwnQ0lm3Js1bw4JQIXTYxUg\nvrxi9f0PtJUlIKNCxX/k1UWXKi9b+TO0Ini9lgQXPq936LPC4U3PBLKUeHrV\n/4su6hTibdbsvGNUNhJV4aiwYD66olcdE2h4WCSSbC+fRxrbcqn0WlcL62xI\nVu/f\r\n=yUUg\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_4.0.0-alpha.4_1549446337104_0.4477255391864807"},"_hasShrinkwrap":false},"4.0.0-alpha.5":{"name":"@pm2/io","version":"4.0.0-alpha.5","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"Apache-2","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=6.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/mongodb":"^3.1.19","@types/node":"^10.12.21","@types/redis":"^2.8.10","chai":"4.1.2","mocha":"^5.2.0","nock":"^10.0.6","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@opencensus/propagation-b3":"^0.0.8","@pm2/agent-node":"~1.1.3","@pm2/opencensus-core":"^0.0.9","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","require-in-the-middle":"3.0.0","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 library responsible for gathering the metrics, reporting exceptions, exposing remote actions and every interaction with your application.\n\nYou can also use it as a standalone agent, if you want to connect your nodejs process to PM2 Enterprise but without having to launch your application with PM2.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n- [**Notes**](https://github.com/keymetrics/pm2-io-apm/tree/master#notes)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in the PM2 Plus/Enterprise dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst users = io.metric({\n  name: 'Realtime user',\n});\nusers.set(10)\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **id**: The type of metric (default 'metric', string)\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **gauge**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst myMetric = io.metric({\n  name: 'Realtime Value'\n});\n\nmyMetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst currentReq = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  currentReq.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    currentReq.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from PM2 Plus or Enterprise.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    // cb must be called at the end of the action\n    return cb({ success: true });\n  });\n});\n```\n\n## Report user error\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'), {\n  // you can some http context that will be reported in the UI\n  http: {\n    url: req.url\n  },\n  // or anything that you can like an user id\n  custom: {\n    user: req.user.id\n  }\n});\n```\n\n#### Express error reporting\n\nIf you want you can configure your express middleware to automatically send you an error with the error middleware of express :\n\n```javascript\nconst io = require('@pm2/io')\nconst express = require('express')\nconst app = express()\n\n// add the routes that you want\napp.use('/toto', () => {\n  throw new Error('ajdoijerr')\n})\n\n// always add the middleware as the last one\napp.use(io.expressErrorHandler())\n```\n\n#### Koa error reporting\n\nWe also expose a custom koa middleware to report error with a specific koa middleware :\n\n```javascript\nconst io = require('@pm2/io')\nconst Koa = require('koa')\nconst app = new Koa()\n\n// the order isn't important with koa\napp.use(pmx.koaErrorHandler())\n\n// add the routes that you want\napp.use(async ctx => {\n  ctx.throw(new Error('toto'))\n})\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nexport class IOConfig {\n  /**\n   * Automatically catch unhandled errors\n   */\n  catchExceptions?: boolean = true\n  /**\n   * Configure the metrics to add automatically to your process\n   */\n  metrics?: {\n    eventLoop: boolean = true,\n    network: boolean = false,\n    http: boolean = true,\n    gc: boolean = true,\n    v8: boolean = true\n  }\n  /**\n   * Configure the default actions that you can run\n   */\n  actions?: {\n    eventLoopDump?: boolean = true\n  }\n  /**\n   * Configure availables profilers that will be exposed\n   */\n  profiling?: {\n    /**\n     * Toggle the CPU profiling actions\n     */\n    cpuJS: boolean = true\n    /**\n     * Toggle the heap snapshot actions\n     */\n    heapSnapshot: boolean = true\n    /**\n     * Toggle the heap sampling actions\n     */\n    heapSampling: boolean = true\n    /**\n     * Force a specific implementation of profiler\n     * \n     * available: \n     *  - 'addon' (using the v8-profiler-node8 addon)\n     *  - 'inspector' (using the \"inspector\" api from node core)\n     *  - 'none' (disable the profilers)\n     *  - 'both' (will try to use inspector and fallback on addon if available)\n     */\n    implementation: string = 'both'\n  }\n  /**\n   * Configure the transaction tracing options\n   */\n  tracing?: {\n    /**\n     * Choose to enable the HTTP tracing system\n     * \n     * default is false\n     */\n    enabled: boolean = false\n    /**\n     * Specify specific urls to ignore\n     */\n    ignoreFilter?: {\n      url?: string[]\n      method?: string[]\n    }\n    // Log levels: 0-disabled,1-error,2-warn,3-info,4-debug\n    logLevel?: number\n    /**\n     * To disable a plugin in this list, you may override its path with a falsy\n     * value. Disabling any of the default plugins may cause unwanted behavior,\n     * so use caution.\n     */\n    plugins?: {\n      connect?: boolean\n      express?: boolean\n      'generic-pool'?: boolean\n      hapi?: boolean\n      http?: boolean\n      knex?: boolean\n      koa?: boolean\n      'mongodb-core'?: boolean\n      mysql?: boolean\n      pg?: boolean\n      redis?: boolean\n      restify?: boolean\n    }\n    /**\n     * An upper bound on the number of traces to gather each second. If set to 0,\n     * sampling is disabled and all traces are recorded. Sampling rates greater\n     * than 1000 are not supported and will result in at most 1000 samples per\n     * second.\n     */\n    samplingRate?: number\n  }\n  /**\n   * If you want to connect to PM2 Enterprise without using PM2, you should enable\n   * the standalone mode\n   * \n   * default is false\n   */\n  standalone?: boolean = false\n  /**\n   * Define custom options for the standalone mode\n   */\n  apmOptions?: {\n    /**\n     * public key of the bucket to which the agent need to connect\n     */\n    publicKey: string\n    /**\n     * Secret key of the bucket to which the agent need to connect\n     */\n    secretKey: string\n    /**\n     * The name of the application/service that will be reported to PM2 Enterprise\n     */\n    appName: string\n    /**\n     * The name of the server as reported in PM2 Enterprise\n     *\n     * default is os.hostname()\n     */\n    serverName?: string\n    /**\n     * Broadcast all the logs from your application to our backend\n     */\n    sendLogs?: Boolean\n    /**\n     * Since logs can be forwared to our backend you may want to ignore specific\n     * logs (containing sensitive data for example)\n     */\n    logFilter?: string | RegExp\n    /**\n     * Proxy URI to use when reaching internet\n     * Supporting socks5,http,https,pac,socks4\n     * see https://github.com/TooTallNate/node-proxy-agent\n     *\n     * example: socks5://username:password@some-socks-proxy.com:9050\n     */\n    proxy?: string\n  }\n}\n```\n\nYou can pass whatever options you want to `io.init`, it will automatically update its configuration.\n\n## Migration Guides\n\n### 2.x to 3.x\n\nHere the list of breaking changes :\n\n- Removed `io.scopedAction` because of low user adoption\n- Removed `io.notify` in favor of `io.notifyError` (droppin replacement)\n- Removed support for `gc-stats` module\n- Removed Heap profiling support when using the profiler addon (which wasn't possible at all)\n- Removed deep-metrics support (the module that allowed to get metrics about websocket/mongo out of the box), we are working on a better solution.\n- Removed `io.transpose`\n- **Changed the configuration structure**\n\nHigh chance that if you used a custom configuration for `io.init`, you need to change it to reflect the new configuration.\nApart from that and the `io.notify` removal, it shouldn't break the way you instanciated metrics.\nIf you find something else that breaks please report it to us (tech@keymetrics.io).\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Notes\n\nCurently this package isn't compatible with `amqp` if you use the `network` metrics. We recommend to disable the metrics with the following configuration in this case :\n\n```javascript\nio.init({\n  metrics: {\n    network: false\n  }\n})\n```\n","readmeFilename":"README.md","gitHead":"09245016030509907dc108d5f777e564a652f6be","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@4.0.0-alpha.5","_npmVersion":"6.4.1","_nodeVersion":"8.15.0","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-GbSoFGeRHinuDlv+iJkixLDL9CeJAoEk1UWHGkKysxQERM7yp+Z8Hdr76rRkmPws7OAywRt0z/ixmA4+rE4Pug==","shasum":"e6dbbc857904cbbcc3bd834fa0665c20a8bfcfc0","tarball":"https://registry.npmjs.org/@pm2/io/-/io-4.0.0-alpha.5.tgz","fileCount":119,"unpackedSize":683403,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcXakoCRA9TVsSAnZWagAAPd8P/1aa/KR8MNh0Kzb7Mehd\nc00TZuAzDanBeJ8ZGdjNbYV62vxKEC770QfoWm0FJjujdyzW06tq0MQVX2g+\nMftFimh4dCo7oyuv6U5toBVjH2IWfzD7OXgO5x+Vc+7jjryvQThzFdeKHeiQ\nXaAzJB6/KwB5IbYrNalGnm+87P2EiB/vW21pMWm0mGfJtH3f/IBS3TVqsRZd\nPQitzY9fGBeMOiivC/g5JIBWJpXw/ik/jiN+S7i0zVyyWBsqKa8QGIvCFg2U\ntRu8Wrh6HMpdzcDaf5aUg9f9UQNbEfi2XpUIIg0F2C0dtzFoxaw0JQzduIzP\ncG+rK7YluGpyLKMJoWXV9d+L3s3dZY6Ko+w4Hh2hTWucrvmecPwj0QnBhFUW\n2SS58lKIyPrgoTxHp7dY36MJ9Dc+sEq+znBb5qUz7mW11zP52pk6uwFswEto\nYFqJnYXPi06g0L9lUE9RxjbNBJ3BaDGKYbESCeLxC/OpEIi0/gpIW3owz9uN\nGD3n2PvVHOqUSVhpGtkvOUUgneuG7xuhnSlvigNIpDIJvHvWymFJ7x0rAlL0\nuPDQ+b81vP7ixiE6LWRgPPOW4s3vTR5LRzH8Q890wom6Ch9Ur8ISbP4gNENe\ngaHZB7t0OxPNt8h4CX+A4BEyOStbaBNfwjXBcixxEN44yl66ufYxsA20DdCG\n5/U+\r\n=VqYb\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_4.0.0-alpha.5_1549642024004_0.41963346168461846"},"_hasShrinkwrap":false},"4.0.0-alpha.6":{"name":"@pm2/io","version":"4.0.0-alpha.6","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"Apache-2","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=6.0"},"devDependencies":{"@types/chai":"4.1.4","@types/mocha":"5.2.5","@types/mongodb":"^3.1.19","@types/node":"^10.12.21","@types/redis":"^2.8.10","chai":"4.1.2","mocha":"^5.2.0","nock":"^10.0.6","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@opencensus/propagation-b3":"^0.0.8","@pm2/agent-node":"~1.1.3","@pm2/opencensus-core":"^0.0.9","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","require-in-the-middle":"3.0.0","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 library responsible for gathering the metrics, reporting exceptions, exposing remote actions and every interaction with your application.\n\nYou can also use it as a standalone agent, if you want to connect your nodejs process to PM2 Enterprise but without having to launch your application with PM2.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n- [**Notes**](https://github.com/keymetrics/pm2-io-apm/tree/master#notes)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in the PM2 Plus/Enterprise dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst users = io.metric({\n  name: 'Realtime user',\n});\nusers.set(10)\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **id**: The type of metric (default 'metric', string)\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **gauge**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst myMetric = io.metric({\n  name: 'Realtime Value'\n});\n\nmyMetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst currentReq = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  currentReq.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    currentReq.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from PM2 Plus or Enterprise.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    // cb must be called at the end of the action\n    return cb({ success: true });\n  });\n});\n```\n\n## Report user error\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'), {\n  // you can some http context that will be reported in the UI\n  http: {\n    url: req.url\n  },\n  // or anything that you can like an user id\n  custom: {\n    user: req.user.id\n  }\n});\n```\n\n#### Express error reporting\n\nIf you want you can configure your express middleware to automatically send you an error with the error middleware of express :\n\n```javascript\nconst io = require('@pm2/io')\nconst express = require('express')\nconst app = express()\n\n// add the routes that you want\napp.use('/toto', () => {\n  throw new Error('ajdoijerr')\n})\n\n// always add the middleware as the last one\napp.use(io.expressErrorHandler())\n```\n\n#### Koa error reporting\n\nWe also expose a custom koa middleware to report error with a specific koa middleware :\n\n```javascript\nconst io = require('@pm2/io')\nconst Koa = require('koa')\nconst app = new Koa()\n\n// the order isn't important with koa\napp.use(pmx.koaErrorHandler())\n\n// add the routes that you want\napp.use(async ctx => {\n  ctx.throw(new Error('toto'))\n})\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nexport class IOConfig {\n  /**\n   * Automatically catch unhandled errors\n   */\n  catchExceptions?: boolean = true\n  /**\n   * Configure the metrics to add automatically to your process\n   */\n  metrics?: {\n    eventLoop: boolean = true,\n    network: boolean = false,\n    http: boolean = true,\n    gc: boolean = true,\n    v8: boolean = true\n  }\n  /**\n   * Configure the default actions that you can run\n   */\n  actions?: {\n    eventLoopDump?: boolean = true\n  }\n  /**\n   * Configure availables profilers that will be exposed\n   */\n  profiling?: {\n    /**\n     * Toggle the CPU profiling actions\n     */\n    cpuJS: boolean = true\n    /**\n     * Toggle the heap snapshot actions\n     */\n    heapSnapshot: boolean = true\n    /**\n     * Toggle the heap sampling actions\n     */\n    heapSampling: boolean = true\n    /**\n     * Force a specific implementation of profiler\n     * \n     * available: \n     *  - 'addon' (using the v8-profiler-node8 addon)\n     *  - 'inspector' (using the \"inspector\" api from node core)\n     *  - 'none' (disable the profilers)\n     *  - 'both' (will try to use inspector and fallback on addon if available)\n     */\n    implementation: string = 'both'\n  }\n  /**\n   * Configure the transaction tracing options\n   */\n  tracing?: {\n    /**\n     * Choose to enable the HTTP tracing system\n     * \n     * default is false\n     */\n    enabled: boolean = false\n    /**\n     * Specify specific urls to ignore\n     */\n    ignoreFilter?: {\n      url?: string[]\n      method?: string[]\n    }\n    // Log levels: 0-disabled,1-error,2-warn,3-info,4-debug\n    logLevel?: number\n    /**\n     * To disable a plugin in this list, you may override its path with a falsy\n     * value. Disabling any of the default plugins may cause unwanted behavior,\n     * so use caution.\n     */\n    plugins?: {\n      connect?: boolean\n      express?: boolean\n      'generic-pool'?: boolean\n      hapi?: boolean\n      http?: boolean\n      knex?: boolean\n      koa?: boolean\n      'mongodb-core'?: boolean\n      mysql?: boolean\n      pg?: boolean\n      redis?: boolean\n      restify?: boolean\n    }\n    /**\n     * An upper bound on the number of traces to gather each second. If set to 0,\n     * sampling is disabled and all traces are recorded. Sampling rates greater\n     * than 1000 are not supported and will result in at most 1000 samples per\n     * second.\n     */\n    samplingRate?: number\n  }\n  /**\n   * If you want to connect to PM2 Enterprise without using PM2, you should enable\n   * the standalone mode\n   * \n   * default is false\n   */\n  standalone?: boolean = false\n  /**\n   * Define custom options for the standalone mode\n   */\n  apmOptions?: {\n    /**\n     * public key of the bucket to which the agent need to connect\n     */\n    publicKey: string\n    /**\n     * Secret key of the bucket to which the agent need to connect\n     */\n    secretKey: string\n    /**\n     * The name of the application/service that will be reported to PM2 Enterprise\n     */\n    appName: string\n    /**\n     * The name of the server as reported in PM2 Enterprise\n     *\n     * default is os.hostname()\n     */\n    serverName?: string\n    /**\n     * Broadcast all the logs from your application to our backend\n     */\n    sendLogs?: Boolean\n    /**\n     * Since logs can be forwared to our backend you may want to ignore specific\n     * logs (containing sensitive data for example)\n     */\n    logFilter?: string | RegExp\n    /**\n     * Proxy URI to use when reaching internet\n     * Supporting socks5,http,https,pac,socks4\n     * see https://github.com/TooTallNate/node-proxy-agent\n     *\n     * example: socks5://username:password@some-socks-proxy.com:9050\n     */\n    proxy?: string\n  }\n}\n```\n\nYou can pass whatever options you want to `io.init`, it will automatically update its configuration.\n\n## Migration Guides\n\n### 2.x to 3.x\n\nHere the list of breaking changes :\n\n- Removed `io.scopedAction` because of low user adoption\n- Removed `io.notify` in favor of `io.notifyError` (droppin replacement)\n- Removed support for `gc-stats` module\n- Removed Heap profiling support when using the profiler addon (which wasn't possible at all)\n- Removed deep-metrics support (the module that allowed to get metrics about websocket/mongo out of the box), we are working on a better solution.\n- Removed `io.transpose`\n- **Changed the configuration structure**\n\nHigh chance that if you used a custom configuration for `io.init`, you need to change it to reflect the new configuration.\nApart from that and the `io.notify` removal, it shouldn't break the way you instanciated metrics.\nIf you find something else that breaks please report it to us (tech@keymetrics.io).\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Notes\n\nCurently this package isn't compatible with `amqp` if you use the `network` metrics. We recommend to disable the metrics with the following configuration in this case :\n\n```javascript\nio.init({\n  metrics: {\n    network: false\n  }\n})\n```\n","readmeFilename":"README.md","gitHead":"ec92e961cafc0d130246fe5acae382a3622d8d60","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@4.0.0-alpha.6","_npmVersion":"6.4.1","_nodeVersion":"8.15.0","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-LfWAmWwIjvuZ2TaMuQ2crcxuvSQTTRDL7yzI9wlUMi9rUgbHloAnTcxz5jy1Ji6MqzgUX+cW4XJuRM4oH1tBWw==","shasum":"3d93b779492f1cd446b8aa1574830dc33ccd019c","tarball":"https://registry.npmjs.org/@pm2/io/-/io-4.0.0-alpha.6.tgz","fileCount":119,"unpackedSize":683618,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcXarLCRA9TVsSAnZWagAApIgP/12HQdmZu8NUZuzhtP+Y\nMbQAR3MDHqAfx8IneSe2jLuV7UEhY5p4tIQsiczV+LNp1ljPO3i6K9KGXaqx\noYNb1IFjNQOG1l4VZGu/xAEWy1MRvMooId4g/T2+7ZXYa1/srVjiXojA9ANw\nYNDMwmP4yEViWbTDA0LRuHIjlzOcCUhk9e5X2xG3m9Dq0GHZiR7oD1bz8snN\nJZepYrSB3RtG9efqzJsjnpG2OWhVbrUrZ8G+nyKSboAJHMIHF0SpltDHxKKB\n68kgmOwPCA6Fj5sEeRl4e6pPIr7+qGtITnXmwX/U6acbjlGxRfGZZSrQmxNL\ncgvaQNxyMoLoB4ICgcQ6Tk20wb7JgAc4vBh2AaT46Osc9ibXzD6RdqMdIBsp\nvEocd5AGqDYPa/at/jo4RKdlZ3eHp5ZBCMoKMjEEiWDhVCCCtbeAGZuu7BhT\nmFzkLEzIBb7P2dCyX9xVo6acDkJg+uYM9vcJ9cTMZC+OMKvzE3ybrL4TvMav\nPYtVdoIcx1GtGIrpkR/CM3kit+BfO4Xrpxdc+VtyQ0M0B1dMs3MnSBkYfJD1\n+f7E801cLOQXfuRYub1w8ssxsWtlgSq2T38R/du7hg/MfiitLeF+T2zmwmjW\nEMUQnkKa2uEMJY88CT2xdxbqOAhb7SdVD1ADZ4hGyfacdOGJ5P+2vSjqW7jA\n6ocR\r\n=06H6\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_4.0.0-alpha.6_1549642442551_0.37754908337632975"},"_hasShrinkwrap":false},"4.0.0-alpha.7":{"name":"@pm2/io","version":"4.0.0-alpha.7","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"Apache-2","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=6.0"},"devDependencies":{"@types/chai":"4.1.4","@types/ioredis":"^4.0.6","@types/mocha":"5.2.5","@types/mongodb":"^3.1.19","@types/node":"^10.12.21","@types/redis":"^2.8.10","chai":"4.1.2","mocha":"^5.2.0","nock":"^10.0.6","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@opencensus/propagation-b3":"^0.0.8","@pm2/agent-node":"~1.1.3","@pm2/opencensus-core":"^0.0.9","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","require-in-the-middle":"3.0.0","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 library responsible for gathering the metrics, reporting exceptions, exposing remote actions and every interaction with your application.\n\nYou can also use it as a standalone agent, if you want to connect your nodejs process to PM2 Enterprise but without having to launch your application with PM2.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n- [**Notes**](https://github.com/keymetrics/pm2-io-apm/tree/master#notes)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in the PM2 Plus/Enterprise dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst users = io.metric({\n  name: 'Realtime user',\n});\nusers.set(10)\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **id**: The type of metric (default 'metric', string)\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **gauge**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst myMetric = io.metric({\n  name: 'Realtime Value'\n});\n\nmyMetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst currentReq = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  currentReq.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    currentReq.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from PM2 Plus or Enterprise.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    // cb must be called at the end of the action\n    return cb({ success: true });\n  });\n});\n```\n\n## Report user error\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'), {\n  // you can some http context that will be reported in the UI\n  http: {\n    url: req.url\n  },\n  // or anything that you can like an user id\n  custom: {\n    user: req.user.id\n  }\n});\n```\n\n#### Express error reporting\n\nIf you want you can configure your express middleware to automatically send you an error with the error middleware of express :\n\n```javascript\nconst io = require('@pm2/io')\nconst express = require('express')\nconst app = express()\n\n// add the routes that you want\napp.use('/toto', () => {\n  throw new Error('ajdoijerr')\n})\n\n// always add the middleware as the last one\napp.use(io.expressErrorHandler())\n```\n\n#### Koa error reporting\n\nWe also expose a custom koa middleware to report error with a specific koa middleware :\n\n```javascript\nconst io = require('@pm2/io')\nconst Koa = require('koa')\nconst app = new Koa()\n\n// the order isn't important with koa\napp.use(pmx.koaErrorHandler())\n\n// add the routes that you want\napp.use(async ctx => {\n  ctx.throw(new Error('toto'))\n})\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nexport class IOConfig {\n  /**\n   * Automatically catch unhandled errors\n   */\n  catchExceptions?: boolean = true\n  /**\n   * Configure the metrics to add automatically to your process\n   */\n  metrics?: {\n    eventLoop: boolean = true,\n    network: boolean = false,\n    http: boolean = true,\n    gc: boolean = true,\n    v8: boolean = true\n  }\n  /**\n   * Configure the default actions that you can run\n   */\n  actions?: {\n    eventLoopDump?: boolean = true\n  }\n  /**\n   * Configure availables profilers that will be exposed\n   */\n  profiling?: {\n    /**\n     * Toggle the CPU profiling actions\n     */\n    cpuJS: boolean = true\n    /**\n     * Toggle the heap snapshot actions\n     */\n    heapSnapshot: boolean = true\n    /**\n     * Toggle the heap sampling actions\n     */\n    heapSampling: boolean = true\n    /**\n     * Force a specific implementation of profiler\n     * \n     * available: \n     *  - 'addon' (using the v8-profiler-node8 addon)\n     *  - 'inspector' (using the \"inspector\" api from node core)\n     *  - 'none' (disable the profilers)\n     *  - 'both' (will try to use inspector and fallback on addon if available)\n     */\n    implementation: string = 'both'\n  }\n  /**\n   * Configure the transaction tracing options\n   */\n  tracing?: {\n    /**\n     * Choose to enable the HTTP tracing system\n     * \n     * default is false\n     */\n    enabled: boolean = false\n    /**\n     * Specify specific urls to ignore\n     */\n    ignoreFilter?: {\n      url?: string[]\n      method?: string[]\n    }\n    // Log levels: 0-disabled,1-error,2-warn,3-info,4-debug\n    logLevel?: number\n    /**\n     * To disable a plugin in this list, you may override its path with a falsy\n     * value. Disabling any of the default plugins may cause unwanted behavior,\n     * so use caution.\n     */\n    plugins?: {\n      connect?: boolean\n      express?: boolean\n      'generic-pool'?: boolean\n      hapi?: boolean\n      http?: boolean\n      knex?: boolean\n      koa?: boolean\n      'mongodb-core'?: boolean\n      mysql?: boolean\n      pg?: boolean\n      redis?: boolean\n      restify?: boolean\n    }\n    /**\n     * An upper bound on the number of traces to gather each second. If set to 0,\n     * sampling is disabled and all traces are recorded. Sampling rates greater\n     * than 1000 are not supported and will result in at most 1000 samples per\n     * second.\n     */\n    samplingRate?: number\n  }\n  /**\n   * If you want to connect to PM2 Enterprise without using PM2, you should enable\n   * the standalone mode\n   * \n   * default is false\n   */\n  standalone?: boolean = false\n  /**\n   * Define custom options for the standalone mode\n   */\n  apmOptions?: {\n    /**\n     * public key of the bucket to which the agent need to connect\n     */\n    publicKey: string\n    /**\n     * Secret key of the bucket to which the agent need to connect\n     */\n    secretKey: string\n    /**\n     * The name of the application/service that will be reported to PM2 Enterprise\n     */\n    appName: string\n    /**\n     * The name of the server as reported in PM2 Enterprise\n     *\n     * default is os.hostname()\n     */\n    serverName?: string\n    /**\n     * Broadcast all the logs from your application to our backend\n     */\n    sendLogs?: Boolean\n    /**\n     * Since logs can be forwared to our backend you may want to ignore specific\n     * logs (containing sensitive data for example)\n     */\n    logFilter?: string | RegExp\n    /**\n     * Proxy URI to use when reaching internet\n     * Supporting socks5,http,https,pac,socks4\n     * see https://github.com/TooTallNate/node-proxy-agent\n     *\n     * example: socks5://username:password@some-socks-proxy.com:9050\n     */\n    proxy?: string\n  }\n}\n```\n\nYou can pass whatever options you want to `io.init`, it will automatically update its configuration.\n\n## Migration Guides\n\n### 2.x to 3.x\n\nHere the list of breaking changes :\n\n- Removed `io.scopedAction` because of low user adoption\n- Removed `io.notify` in favor of `io.notifyError` (droppin replacement)\n- Removed support for `gc-stats` module\n- Removed Heap profiling support when using the profiler addon (which wasn't possible at all)\n- Removed deep-metrics support (the module that allowed to get metrics about websocket/mongo out of the box), we are working on a better solution.\n- Removed `io.transpose`\n- **Changed the configuration structure**\n\nHigh chance that if you used a custom configuration for `io.init`, you need to change it to reflect the new configuration.\nApart from that and the `io.notify` removal, it shouldn't break the way you instanciated metrics.\nIf you find something else that breaks please report it to us (tech@keymetrics.io).\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Notes\n\nCurently this package isn't compatible with `amqp` if you use the `network` metrics. We recommend to disable the metrics with the following configuration in this case :\n\n```javascript\nio.init({\n  metrics: {\n    network: false\n  }\n})\n```\n","readmeFilename":"README.md","gitHead":"d815ae850827c8bf008297018840b16fdf250367","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@4.0.0-alpha.7","_npmVersion":"6.4.1","_nodeVersion":"8.15.0","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-JbLfaIQBuVJsWVPJQFr4PuaZf9vUTBjUfohaoWbMv5wLcxDGxq+var8SEkNpuDIIheB95JgQB8HdYfnYv+SKMQ==","shasum":"06f63b4c24ef3e5e0479b1eea68a737cde4f0673","tarball":"https://registry.npmjs.org/@pm2/io/-/io-4.0.0-alpha.7.tgz","fileCount":123,"unpackedSize":691932,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcYE5XCRA9TVsSAnZWagAAW/EP/3zld9CXral0WyIg1yIo\nFrUDmSbeGsHh1CBpXvWE3frsax1Y/EAZcc+imD5CQqqjMzTuTDG2vHpflrAA\nT8YmeVQAsCvHTQyFLoOTL1HkMv89GD3HUE4B+ldDIOgxS2UPGG9hK1AThuih\nFs2OP9SCTGNrBa1RPSgfZ1Yr1c4IfLfjQTE8i8JhgpxcbFFsq/VQP981lj01\nj46zOLtHlOqN3uY8v9FjlyNQ3ZX6DQk5Y4rv+wQv8/5omcaJmLBWLX56icDF\nfvMbLVd6EE6CrU99viRlJ5VYJOUsTA8GKDxAdl1KsJtZ61GGuLaZxe0YsrSO\n7yl18pn/HKUyGdu/texXB4YjrlGoCoWRhRObn6j8sd54NJkzuOzdFsySJNMM\nph2lyFxcIYsvqXZOz6hePpQM7mwYZvZAqHzqIbbSJLg0wdwt6lHWXb4ZF3GR\neSFQgrCQ/zhvo7p89PnTr4SdBtw/MirUGN5D1NizLwYjBYVdYZjs8ZCvHQyO\nadIDhSOFV3HYkptPO+YFjqX2etEMKrqPlZXH4cZIRPR9ef3EM67ma2UpHih2\nWqxOdZ9HdYvx/hShpL9jkmBD8zbkm5wpk/nkltwTp+yu5RyuXGQ14uFWYHVG\n0XgwaADzIcoghRPBxEZP2k5QNyVFZUhsikynmhDQqgNpD8iV9vGlY4EoFegv\nWPjy\r\n=N/9P\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_4.0.0-alpha.7_1549815382434_0.3982011362226878"},"_hasShrinkwrap":false},"4.0.0-beta.1":{"name":"@pm2/io","version":"4.0.0-beta.1","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"Apache-2","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=6.0"},"devDependencies":{"@types/chai":"4.1.4","@types/ioredis":"^4.0.6","@types/mocha":"5.2.5","@types/mongodb":"^3.1.19","@types/node":"^10.12.21","@types/redis":"^2.8.10","chai":"4.1.2","mocha":"^5.2.0","nock":"^10.0.6","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@opencensus/propagation-b3":"^0.0.8","@pm2/agent-node":"~1.1.3","@pm2/opencensus-core":"^0.0.9","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","require-in-the-middle":"3.0.0","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 library responsible for gathering the metrics, reporting exceptions, exposing remote actions and every interaction with your application.\n\nYou can also use it as a standalone agent, if you want to connect your nodejs process to PM2 Enterprise but without having to launch your application with PM2.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n- [**Notes**](https://github.com/keymetrics/pm2-io-apm/tree/master#notes)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in the PM2 Plus/Enterprise dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst users = io.metric({\n  name: 'Realtime user',\n});\nusers.set(10)\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **id**: The type of metric (default 'metric', string)\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **gauge**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst myMetric = io.metric({\n  name: 'Realtime Value'\n});\n\nmyMetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst currentReq = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  currentReq.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    currentReq.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from PM2 Plus or Enterprise.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    // cb must be called at the end of the action\n    return cb({ success: true });\n  });\n});\n```\n\n## Report user error\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'), {\n  // you can some http context that will be reported in the UI\n  http: {\n    url: req.url\n  },\n  // or anything that you can like an user id\n  custom: {\n    user: req.user.id\n  }\n});\n```\n\n#### Express error reporting\n\nIf you want you can configure your express middleware to automatically send you an error with the error middleware of express :\n\n```javascript\nconst io = require('@pm2/io')\nconst express = require('express')\nconst app = express()\n\n// add the routes that you want\napp.use('/toto', () => {\n  throw new Error('ajdoijerr')\n})\n\n// always add the middleware as the last one\napp.use(io.expressErrorHandler())\n```\n\n#### Koa error reporting\n\nWe also expose a custom koa middleware to report error with a specific koa middleware :\n\n```javascript\nconst io = require('@pm2/io')\nconst Koa = require('koa')\nconst app = new Koa()\n\n// the order isn't important with koa\napp.use(pmx.koaErrorHandler())\n\n// add the routes that you want\napp.use(async ctx => {\n  ctx.throw(new Error('toto'))\n})\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nexport class IOConfig {\n  /**\n   * Automatically catch unhandled errors\n   */\n  catchExceptions?: boolean = true\n  /**\n   * Configure the metrics to add automatically to your process\n   */\n  metrics?: {\n    eventLoop: boolean = true,\n    network: boolean = false,\n    http: boolean = true,\n    gc: boolean = true,\n    v8: boolean = true\n  }\n  /**\n   * Configure the default actions that you can run\n   */\n  actions?: {\n    eventLoopDump?: boolean = true\n  }\n  /**\n   * Configure availables profilers that will be exposed\n   */\n  profiling?: {\n    /**\n     * Toggle the CPU profiling actions\n     */\n    cpuJS: boolean = true\n    /**\n     * Toggle the heap snapshot actions\n     */\n    heapSnapshot: boolean = true\n    /**\n     * Toggle the heap sampling actions\n     */\n    heapSampling: boolean = true\n    /**\n     * Force a specific implementation of profiler\n     * \n     * available: \n     *  - 'addon' (using the v8-profiler-node8 addon)\n     *  - 'inspector' (using the \"inspector\" api from node core)\n     *  - 'none' (disable the profilers)\n     *  - 'both' (will try to use inspector and fallback on addon if available)\n     */\n    implementation: string = 'both'\n  }\n  /**\n   * Configure the transaction tracing options\n   */\n  tracing?: {\n    /**\n     * Choose to enable the HTTP tracing system\n     * \n     * default is false\n     */\n    enabled: boolean = false\n    /**\n     * Specify specific urls to ignore\n     */\n    ignoreFilter?: {\n      url?: string[]\n      method?: string[]\n    }\n    // Log levels: 0-disabled,1-error,2-warn,3-info,4-debug\n    logLevel?: number\n    /**\n     * To disable a plugin in this list, you may override its path with a falsy\n     * value. Disabling any of the default plugins may cause unwanted behavior,\n     * so use caution.\n     */\n    plugins?: {\n      connect?: boolean\n      express?: boolean\n      'generic-pool'?: boolean\n      hapi?: boolean\n      http?: boolean\n      knex?: boolean\n      koa?: boolean\n      'mongodb-core'?: boolean\n      mysql?: boolean\n      pg?: boolean\n      redis?: boolean\n      restify?: boolean\n    }\n    /**\n     * An upper bound on the number of traces to gather each second. If set to 0,\n     * sampling is disabled and all traces are recorded. Sampling rates greater\n     * than 1000 are not supported and will result in at most 1000 samples per\n     * second.\n     */\n    samplingRate?: number\n  }\n  /**\n   * If you want to connect to PM2 Enterprise without using PM2, you should enable\n   * the standalone mode\n   * \n   * default is false\n   */\n  standalone?: boolean = false\n  /**\n   * Define custom options for the standalone mode\n   */\n  apmOptions?: {\n    /**\n     * public key of the bucket to which the agent need to connect\n     */\n    publicKey: string\n    /**\n     * Secret key of the bucket to which the agent need to connect\n     */\n    secretKey: string\n    /**\n     * The name of the application/service that will be reported to PM2 Enterprise\n     */\n    appName: string\n    /**\n     * The name of the server as reported in PM2 Enterprise\n     *\n     * default is os.hostname()\n     */\n    serverName?: string\n    /**\n     * Broadcast all the logs from your application to our backend\n     */\n    sendLogs?: Boolean\n    /**\n     * Since logs can be forwared to our backend you may want to ignore specific\n     * logs (containing sensitive data for example)\n     */\n    logFilter?: string | RegExp\n    /**\n     * Proxy URI to use when reaching internet\n     * Supporting socks5,http,https,pac,socks4\n     * see https://github.com/TooTallNate/node-proxy-agent\n     *\n     * example: socks5://username:password@some-socks-proxy.com:9050\n     */\n    proxy?: string\n  }\n}\n```\n\nYou can pass whatever options you want to `io.init`, it will automatically update its configuration.\n\n## Migration Guides\n\n### 2.x to 3.x\n\nHere the list of breaking changes :\n\n- Removed `io.scopedAction` because of low user adoption\n- Removed `io.notify` in favor of `io.notifyError` (droppin replacement)\n- Removed support for `gc-stats` module\n- Removed Heap profiling support when using the profiler addon (which wasn't possible at all)\n- Removed deep-metrics support (the module that allowed to get metrics about websocket/mongo out of the box), we are working on a better solution.\n- Removed `io.transpose`\n- **Changed the configuration structure**\n\nHigh chance that if you used a custom configuration for `io.init`, you need to change it to reflect the new configuration.\nApart from that and the `io.notify` removal, it shouldn't break the way you instanciated metrics.\nIf you find something else that breaks please report it to us (tech@keymetrics.io).\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Notes\n\nCurently this package isn't compatible with `amqp` if you use the `network` metrics. We recommend to disable the metrics with the following configuration in this case :\n\n```javascript\nio.init({\n  metrics: {\n    network: false\n  }\n})\n```\n","readmeFilename":"README.md","gitHead":"d815ae850827c8bf008297018840b16fdf250367","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@4.0.0-beta.1","_npmVersion":"6.4.1","_nodeVersion":"8.15.0","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-BnbfMcpid6m+IwJXj1LU9fm+dmpL1QZKWU64SFHwMd7Ec9z9a309iD7jb+lkQDxytmqPLmtvaTpliUf9edusCw==","shasum":"1bd5863d1eb7635692f2b68f6734a1a8dbaf9d68","tarball":"https://registry.npmjs.org/@pm2/io/-/io-4.0.0-beta.1.tgz","fileCount":123,"unpackedSize":691931,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcYE8DCRA9TVsSAnZWagAAV7QP/jX8G2+Wwr5aS1dBD+JU\n94ZeVblcV4GXZwiEC/48mN6pBNZMVDrV+cLJDl4fasALrQ7Y4xV3abs3a5iu\nDVyMOIlG+bffXa/F3IPQL9Kmlefjs2I4xUxfefWHTXf4DnCVT8SfIoQcDxN2\nzS7HgAKikQN8VQ9ngGYZ85V6GS1B5hD7Nv8kL6bPN78DJbD8/oezruUZQtRN\n0rux1sZMEbG90oZE0UIsqjkGXw+ff1fGUyMvLtUCyTLg7TX8WyIiMbOyhnrP\nVgboXXDCKY0OHxvplwgO4VCMF5Wx75ScDDM975o+GGIlR5mgl6soLVe17BWO\ntWkOfPVEdO6whmoiyePhlKEKvF3VCcMXqeHVOQ81tN3bcWZSzf9A3DloaGNB\nC+xE4JkTUIvuPIfutHiGsqPnG3Ihbj/xv1bJ5Z/dVK2ogqq36vW09/RKPhhW\ngufjUHqc/ffKlh2sItEg/lXpgJkThap/p1ZdafP0sAq2bPuieHJUpn3D8GM2\njnnPGwBk4ZED0+2LHd8whBbftptr6yC0GmhUsHw9begSTE///v6bp5wTXoQQ\nxoa+s7I9W4xYtia06oDNXO2Ac0cFYwdDzQMHiUZTl2gAtnDzWIZfuvMh2lhH\nW5cl/kP9A6YH0j+cPMng1/MKPcbgXnalneUkdaLLOz/K2/zKFELs5IUCJeGP\nLZLA\r\n=9vdS\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_4.0.0-beta.1_1549815554696_0.8245786057877056"},"_hasShrinkwrap":false},"4.0.0-beta.2":{"name":"@pm2/io","version":"4.0.0-beta.2","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"Apache-2","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=6.0"},"devDependencies":{"@types/chai":"4.1.4","@types/ioredis":"^4.0.6","@types/mocha":"5.2.5","@types/mongodb":"^3.1.19","@types/node":"^10.12.21","@types/redis":"^2.8.10","chai":"4.1.2","mocha":"^5.2.0","nock":"^10.0.6","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@opencensus/propagation-b3":"^0.0.8","@pm2/agent-node":"~1.1.3","@pm2/opencensus-core":"^0.0.9","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","require-in-the-middle":"3.0.0","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 library responsible for gathering the metrics, reporting exceptions, exposing remote actions and every interaction with your application.\n\nYou can also use it as a standalone agent, if you want to connect your nodejs process to PM2 Enterprise but without having to launch your application with PM2.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n- [**Notes**](https://github.com/keymetrics/pm2-io-apm/tree/master#notes)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in the PM2 Plus/Enterprise dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst users = io.metric({\n  name: 'Realtime user',\n});\nusers.set(10)\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **id**: The type of metric (default 'metric', string)\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **gauge**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst myMetric = io.metric({\n  name: 'Realtime Value'\n});\n\nmyMetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst currentReq = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  currentReq.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    currentReq.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from PM2 Plus or Enterprise.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    // cb must be called at the end of the action\n    return cb({ success: true });\n  });\n});\n```\n\n## Report user error\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'), {\n  // you can some http context that will be reported in the UI\n  http: {\n    url: req.url\n  },\n  // or anything that you can like an user id\n  custom: {\n    user: req.user.id\n  }\n});\n```\n\n#### Express error reporting\n\nIf you want you can configure your express middleware to automatically send you an error with the error middleware of express :\n\n```javascript\nconst io = require('@pm2/io')\nconst express = require('express')\nconst app = express()\n\n// add the routes that you want\napp.use('/toto', () => {\n  throw new Error('ajdoijerr')\n})\n\n// always add the middleware as the last one\napp.use(io.expressErrorHandler())\n```\n\n#### Koa error reporting\n\nWe also expose a custom koa middleware to report error with a specific koa middleware :\n\n```javascript\nconst io = require('@pm2/io')\nconst Koa = require('koa')\nconst app = new Koa()\n\n// the order isn't important with koa\napp.use(pmx.koaErrorHandler())\n\n// add the routes that you want\napp.use(async ctx => {\n  ctx.throw(new Error('toto'))\n})\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nexport class IOConfig {\n  /**\n   * Automatically catch unhandled errors\n   */\n  catchExceptions?: boolean = true\n  /**\n   * Configure the metrics to add automatically to your process\n   */\n  metrics?: {\n    eventLoop: boolean = true,\n    network: boolean = false,\n    http: boolean = true,\n    gc: boolean = true,\n    v8: boolean = true\n  }\n  /**\n   * Configure the default actions that you can run\n   */\n  actions?: {\n    eventLoopDump?: boolean = true\n  }\n  /**\n   * Configure availables profilers that will be exposed\n   */\n  profiling?: {\n    /**\n     * Toggle the CPU profiling actions\n     */\n    cpuJS: boolean = true\n    /**\n     * Toggle the heap snapshot actions\n     */\n    heapSnapshot: boolean = true\n    /**\n     * Toggle the heap sampling actions\n     */\n    heapSampling: boolean = true\n    /**\n     * Force a specific implementation of profiler\n     * \n     * available: \n     *  - 'addon' (using the v8-profiler-node8 addon)\n     *  - 'inspector' (using the \"inspector\" api from node core)\n     *  - 'none' (disable the profilers)\n     *  - 'both' (will try to use inspector and fallback on addon if available)\n     */\n    implementation: string = 'both'\n  }\n  /**\n   * Configure the transaction tracing options\n   */\n  tracing?: {\n    /**\n     * Choose to enable the HTTP tracing system\n     * \n     * default is false\n     */\n    enabled: boolean = false\n    /**\n     * Specify specific urls to ignore\n     */\n    ignoreFilter?: {\n      url?: string[]\n      method?: string[]\n    }\n    // Log levels: 0-disabled,1-error,2-warn,3-info,4-debug\n    logLevel?: number\n    /**\n     * To disable a plugin in this list, you may override its path with a falsy\n     * value. Disabling any of the default plugins may cause unwanted behavior,\n     * so use caution.\n     */\n    plugins?: {\n      connect?: boolean\n      express?: boolean\n      'generic-pool'?: boolean\n      hapi?: boolean\n      http?: boolean\n      knex?: boolean\n      koa?: boolean\n      'mongodb-core'?: boolean\n      mysql?: boolean\n      pg?: boolean\n      redis?: boolean\n      restify?: boolean\n    }\n    /**\n     * An upper bound on the number of traces to gather each second. If set to 0,\n     * sampling is disabled and all traces are recorded. Sampling rates greater\n     * than 1000 are not supported and will result in at most 1000 samples per\n     * second.\n     */\n    samplingRate?: number\n  }\n  /**\n   * If you want to connect to PM2 Enterprise without using PM2, you should enable\n   * the standalone mode\n   * \n   * default is false\n   */\n  standalone?: boolean = false\n  /**\n   * Define custom options for the standalone mode\n   */\n  apmOptions?: {\n    /**\n     * public key of the bucket to which the agent need to connect\n     */\n    publicKey: string\n    /**\n     * Secret key of the bucket to which the agent need to connect\n     */\n    secretKey: string\n    /**\n     * The name of the application/service that will be reported to PM2 Enterprise\n     */\n    appName: string\n    /**\n     * The name of the server as reported in PM2 Enterprise\n     *\n     * default is os.hostname()\n     */\n    serverName?: string\n    /**\n     * Broadcast all the logs from your application to our backend\n     */\n    sendLogs?: Boolean\n    /**\n     * Since logs can be forwared to our backend you may want to ignore specific\n     * logs (containing sensitive data for example)\n     */\n    logFilter?: string | RegExp\n    /**\n     * Proxy URI to use when reaching internet\n     * Supporting socks5,http,https,pac,socks4\n     * see https://github.com/TooTallNate/node-proxy-agent\n     *\n     * example: socks5://username:password@some-socks-proxy.com:9050\n     */\n    proxy?: string\n  }\n}\n```\n\nYou can pass whatever options you want to `io.init`, it will automatically update its configuration.\n\n## Migration Guides\n\n### 2.x to 3.x\n\nHere the list of breaking changes :\n\n- Removed `io.scopedAction` because of low user adoption\n- Removed `io.notify` in favor of `io.notifyError` (droppin replacement)\n- Removed support for `gc-stats` module\n- Removed Heap profiling support when using the profiler addon (which wasn't possible at all)\n- Removed deep-metrics support (the module that allowed to get metrics about websocket/mongo out of the box), we are working on a better solution.\n- Removed `io.transpose`\n- **Changed the configuration structure**\n\nHigh chance that if you used a custom configuration for `io.init`, you need to change it to reflect the new configuration.\nApart from that and the `io.notify` removal, it shouldn't break the way you instanciated metrics.\nIf you find something else that breaks please report it to us (tech@keymetrics.io).\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Notes\n\nCurently this package isn't compatible with `amqp` if you use the `network` metrics. We recommend to disable the metrics with the following configuration in this case :\n\n```javascript\nio.init({\n  metrics: {\n    network: false\n  }\n})\n```\n","readmeFilename":"README.md","gitHead":"4ea6136306a6e066a144556e06eb33d0a8d2f2bf","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@4.0.0-beta.2","_npmVersion":"6.4.1","_nodeVersion":"8.15.0","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-dCuXT/x6ASqJesqF93qDlhKp5OOeGOWh2K+SQv/l1J/umFOPlVw2maxthlfgJsEjmsvRVAYKgwbQzGnT9Sooeg==","shasum":"d3cd449e4bb241e6ea62ac0d6901049ba7671b4f","tarball":"https://registry.npmjs.org/@pm2/io/-/io-4.0.0-beta.2.tgz","fileCount":125,"unpackedSize":700204,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcYGthCRA9TVsSAnZWagAAj5AQAJn7MvUAqkt2RbT6YXJC\nch1YclO0agFJFCjspteL6dW1aQUsN3uzrOANbEmA1IWp+/av+BzFejwoKN0m\nx5FU4tsggztgs05y45I/F0Ahm5iLmO8t6zNOMUWd2taP81jGtqT1pPOaFSFU\ni2egjxy+M5cVTQFk8zNDxLWUrh7nooPmuLNYLHGPqHIWbIvBx8uAKKamCn9C\n/oYbNKgDPr7pojvGT9k5VTpyZoYfTKsJMNSJf/++44ABb8w9UhsbTxETuUMt\n0M18PL1o6HPsgwgybdSkEmZ+XXzTe5oAEHewKaUhNTQz/MCOotWnkdVQ9D5K\nNHOMwekvojnOm3CNv8T69fk0mw18fGWY4oF16dtpnVAX1qQeQ6XX3ug2AoOC\nIRD7r2WWNPc8kMBoVrAOlJeNKK6i2NtTwy6AjgxVEtSC/2nvP3kenRy2Bg9v\nkVcQJv5Y4iz5RqxuzFqpBE2J0UREi2x7mv2K5ywSL1Wk50sEu+p8QvMOrwQ3\nUtmiF+Fy2vchLLTKlKL2mek2YNQJThcrySU/QVwPAFnRAcmKFhgYqDOayi/C\nQ+VaXAulan+tCwnCttIufyLpI7B3esJxgEQFDeDRCQM1eLCAFyTEdaAv3SVa\ngttAwCsJJCAk9ZQTbDJOMEmpzMgIcKOHd8goJjbiRyO42xCoBonMbM6qQYJO\nfZTX\r\n=9Ahc\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_4.0.0-beta.2_1549822816343_0.891432733216744"},"_hasShrinkwrap":false},"4.0.0-beta.3":{"name":"@pm2/io","version":"4.0.0-beta.3","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"Apache-2","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=6.0"},"devDependencies":{"@types/chai":"4.1.4","@types/ioredis":"^4.0.6","@types/mocha":"5.2.5","@types/mongodb":"^3.1.19","@types/node":"^10.12.21","@types/redis":"^2.8.10","chai":"4.1.2","mocha":"^5.2.0","nock":"^10.0.6","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@opencensus/propagation-b3":"^0.0.8","@pm2/agent-node":"~1.1.3","@pm2/opencensus-core":"^0.0.9","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","require-in-the-middle":"3.0.0","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 library responsible for gathering the metrics, reporting exceptions, exposing remote actions and every interaction with your application.\n\nYou can also use it as a standalone agent, if you want to connect your nodejs process to PM2 Enterprise but without having to launch your application with PM2.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n- [**Notes**](https://github.com/keymetrics/pm2-io-apm/tree/master#notes)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in the PM2 Plus/Enterprise dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst users = io.metric({\n  name: 'Realtime user',\n});\nusers.set(10)\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **id**: The type of metric (default 'metric', string)\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **gauge**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst myMetric = io.metric({\n  name: 'Realtime Value'\n});\n\nmyMetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst currentReq = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  currentReq.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    currentReq.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from PM2 Plus or Enterprise.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    // cb must be called at the end of the action\n    return cb({ success: true });\n  });\n});\n```\n\n## Report user error\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'), {\n  // you can some http context that will be reported in the UI\n  http: {\n    url: req.url\n  },\n  // or anything that you can like an user id\n  custom: {\n    user: req.user.id\n  }\n});\n```\n\n#### Express error reporting\n\nIf you want you can configure your express middleware to automatically send you an error with the error middleware of express :\n\n```javascript\nconst io = require('@pm2/io')\nconst express = require('express')\nconst app = express()\n\n// add the routes that you want\napp.use('/toto', () => {\n  throw new Error('ajdoijerr')\n})\n\n// always add the middleware as the last one\napp.use(io.expressErrorHandler())\n```\n\n#### Koa error reporting\n\nWe also expose a custom koa middleware to report error with a specific koa middleware :\n\n```javascript\nconst io = require('@pm2/io')\nconst Koa = require('koa')\nconst app = new Koa()\n\n// the order isn't important with koa\napp.use(pmx.koaErrorHandler())\n\n// add the routes that you want\napp.use(async ctx => {\n  ctx.throw(new Error('toto'))\n})\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nexport class IOConfig {\n  /**\n   * Automatically catch unhandled errors\n   */\n  catchExceptions?: boolean = true\n  /**\n   * Configure the metrics to add automatically to your process\n   */\n  metrics?: {\n    eventLoop: boolean = true,\n    network: boolean = false,\n    http: boolean = true,\n    gc: boolean = true,\n    v8: boolean = true\n  }\n  /**\n   * Configure the default actions that you can run\n   */\n  actions?: {\n    eventLoopDump?: boolean = true\n  }\n  /**\n   * Configure availables profilers that will be exposed\n   */\n  profiling?: {\n    /**\n     * Toggle the CPU profiling actions\n     */\n    cpuJS: boolean = true\n    /**\n     * Toggle the heap snapshot actions\n     */\n    heapSnapshot: boolean = true\n    /**\n     * Toggle the heap sampling actions\n     */\n    heapSampling: boolean = true\n    /**\n     * Force a specific implementation of profiler\n     * \n     * available: \n     *  - 'addon' (using the v8-profiler-node8 addon)\n     *  - 'inspector' (using the \"inspector\" api from node core)\n     *  - 'none' (disable the profilers)\n     *  - 'both' (will try to use inspector and fallback on addon if available)\n     */\n    implementation: string = 'both'\n  }\n  /**\n   * Configure the transaction tracing options\n   */\n  tracing?: {\n    /**\n     * Choose to enable the HTTP tracing system\n     * \n     * default is false\n     */\n    enabled: boolean = false\n    /**\n     * Specify specific urls to ignore\n     */\n    ignoreFilter?: {\n      url?: string[]\n      method?: string[]\n    }\n    // Log levels: 0-disabled,1-error,2-warn,3-info,4-debug\n    logLevel?: number\n    /**\n     * To disable a plugin in this list, you may override its path with a falsy\n     * value. Disabling any of the default plugins may cause unwanted behavior,\n     * so use caution.\n     */\n    plugins?: {\n      connect?: boolean\n      express?: boolean\n      'generic-pool'?: boolean\n      hapi?: boolean\n      http?: boolean\n      knex?: boolean\n      koa?: boolean\n      'mongodb-core'?: boolean\n      mysql?: boolean\n      pg?: boolean\n      redis?: boolean\n      restify?: boolean\n    }\n    /**\n     * An upper bound on the number of traces to gather each second. If set to 0,\n     * sampling is disabled and all traces are recorded. Sampling rates greater\n     * than 1000 are not supported and will result in at most 1000 samples per\n     * second.\n     */\n    samplingRate?: number\n  }\n  /**\n   * If you want to connect to PM2 Enterprise without using PM2, you should enable\n   * the standalone mode\n   * \n   * default is false\n   */\n  standalone?: boolean = false\n  /**\n   * Define custom options for the standalone mode\n   */\n  apmOptions?: {\n    /**\n     * public key of the bucket to which the agent need to connect\n     */\n    publicKey: string\n    /**\n     * Secret key of the bucket to which the agent need to connect\n     */\n    secretKey: string\n    /**\n     * The name of the application/service that will be reported to PM2 Enterprise\n     */\n    appName: string\n    /**\n     * The name of the server as reported in PM2 Enterprise\n     *\n     * default is os.hostname()\n     */\n    serverName?: string\n    /**\n     * Broadcast all the logs from your application to our backend\n     */\n    sendLogs?: Boolean\n    /**\n     * Since logs can be forwared to our backend you may want to ignore specific\n     * logs (containing sensitive data for example)\n     */\n    logFilter?: string | RegExp\n    /**\n     * Proxy URI to use when reaching internet\n     * Supporting socks5,http,https,pac,socks4\n     * see https://github.com/TooTallNate/node-proxy-agent\n     *\n     * example: socks5://username:password@some-socks-proxy.com:9050\n     */\n    proxy?: string\n  }\n}\n```\n\nYou can pass whatever options you want to `io.init`, it will automatically update its configuration.\n\n## Migration Guides\n\n### 2.x to 3.x\n\nHere the list of breaking changes :\n\n- Removed `io.scopedAction` because of low user adoption\n- Removed `io.notify` in favor of `io.notifyError` (droppin replacement)\n- Removed support for `gc-stats` module\n- Removed Heap profiling support when using the profiler addon (which wasn't possible at all)\n- Removed deep-metrics support (the module that allowed to get metrics about websocket/mongo out of the box), we are working on a better solution.\n- Removed `io.transpose`\n- **Changed the configuration structure**\n\nHigh chance that if you used a custom configuration for `io.init`, you need to change it to reflect the new configuration.\nApart from that and the `io.notify` removal, it shouldn't break the way you instanciated metrics.\nIf you find something else that breaks please report it to us (tech@keymetrics.io).\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Notes\n\nCurently this package isn't compatible with `amqp` if you use the `network` metrics. We recommend to disable the metrics with the following configuration in this case :\n\n```javascript\nio.init({\n  metrics: {\n    network: false\n  }\n})\n```\n","readmeFilename":"README.md","gitHead":"c960be9c33a46d8a6d8e73f0ddec37792adbf3f4","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@4.0.0-beta.3","_npmVersion":"6.4.1","_nodeVersion":"8.15.0","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-WjQP2ZJE1S0XMD0+c8lBRbyIWPTS7uySH7kfhQHOGVdZ6tMrMtMKwknvaKDrtUH7AQzsnRZjGunl6ZGfZMuihg==","shasum":"58533bedb06102e2153bf698f8b287fe3ac20e98","tarball":"https://registry.npmjs.org/@pm2/io/-/io-4.0.0-beta.3.tgz","fileCount":115,"unpackedSize":572451,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcZW77CRA9TVsSAnZWagAAH50P/RAMQcUIONJ62OCM+Gz+\n5zVCrRv3FIvO4bF6tWi8Snmn+IE4SkLm+/N1vJQJ4hQ9ItSr4EDs6sA1l7Of\noumrpI9yJ9Ti+F8Q5ulC61u31rPdgOAvkeRtthQV47qm7rwvDfMC5ykjS94z\n00ntParTR5I3XuaIk1ICM13ZHl0EHog1ehdgvwQ5M2cWsB2+UGmmHoL+Dv1h\n8Atr3uFL62VhfQiHa031Ap7xQTDT4hmo5kbGGVdTHnONXhIJOqg33l55h6aL\nZsKYLAifmzur+1GcilCAig23dMWfnyczicVHoUfRXsUklEnGChGae5LbYWAA\nQoAq+O3UyRZp2TY6trQg7Q4BJZA+Uau1CHAI+28JUR/eW3P23tfHrkswVga4\n9hdYiN0fpxXDDNUBj4dmBHZKOLREBkIOVgtSkP1Q68iEsqGvQbTnd01c4hfg\nxo3dx0mvVMCqjYPaFldEGJypUPQ/E9VsU1QQh4omAmPCioeyFkhjcINjsGbt\nWaqjuBnQsVcEgt+vNIb0Oj10SE/pbJK8/Ax287ku12zxf9RgJqgAwv2WF0sA\njxooOH4msm7E1y2U5Utjizlyx4KYxMVHLWqpWC7/4TLiDGbVk92SBq1StNFi\nsA3i0S+PJjUIzCSJ/dS0YHyIzatNIK1Yk902lJP3ydv0owMEg2mq8bixzxF0\ndd3k\r\n=k0/M\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_4.0.0-beta.3_1550151418233_0.6696776087853329"},"_hasShrinkwrap":false},"4.0.0-beta.4":{"name":"@pm2/io","version":"4.0.0-beta.4","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"Apache-2","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=6.0"},"devDependencies":{"@types/chai":"4.1.4","@types/ioredis":"^4.0.6","@types/mocha":"5.2.5","@types/mongodb":"^3.1.19","@types/node":"^10.12.21","@types/redis":"^2.8.10","chai":"4.1.2","mocha":"^5.2.0","nock":"^10.0.6","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@opencensus/propagation-b3":"^0.0.8","@pm2/agent-node":"~1.1.3","@pm2/opencensus-core":"^0.0.9","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","require-in-the-middle":"3.0.0","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 library responsible for gathering the metrics, reporting exceptions, exposing remote actions and every interaction with your application.\n\nYou can also use it as a standalone agent, if you want to connect your nodejs process to PM2 Enterprise but without having to launch your application with PM2.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n- [**Notes**](https://github.com/keymetrics/pm2-io-apm/tree/master#notes)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in the PM2 Plus/Enterprise dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst users = io.metric({\n  name: 'Realtime user',\n});\nusers.set(10)\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **id**: The type of metric (default 'metric', string)\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **gauge**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst myMetric = io.metric({\n  name: 'Realtime Value'\n});\n\nmyMetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst currentReq = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  currentReq.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    currentReq.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from PM2 Plus or Enterprise.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    // cb must be called at the end of the action\n    return cb({ success: true });\n  });\n});\n```\n\n## Report user error\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'), {\n  // you can some http context that will be reported in the UI\n  http: {\n    url: req.url\n  },\n  // or anything that you can like an user id\n  custom: {\n    user: req.user.id\n  }\n});\n```\n\n#### Express error reporting\n\nIf you want you can configure your express middleware to automatically send you an error with the error middleware of express :\n\n```javascript\nconst io = require('@pm2/io')\nconst express = require('express')\nconst app = express()\n\n// add the routes that you want\napp.use('/toto', () => {\n  throw new Error('ajdoijerr')\n})\n\n// always add the middleware as the last one\napp.use(io.expressErrorHandler())\n```\n\n#### Koa error reporting\n\nWe also expose a custom koa middleware to report error with a specific koa middleware :\n\n```javascript\nconst io = require('@pm2/io')\nconst Koa = require('koa')\nconst app = new Koa()\n\n// the order isn't important with koa\napp.use(pmx.koaErrorHandler())\n\n// add the routes that you want\napp.use(async ctx => {\n  ctx.throw(new Error('toto'))\n})\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nexport class IOConfig {\n  /**\n   * Automatically catch unhandled errors\n   */\n  catchExceptions?: boolean = true\n  /**\n   * Configure the metrics to add automatically to your process\n   */\n  metrics?: {\n    eventLoop: boolean = true,\n    network: boolean = false,\n    http: boolean = true,\n    gc: boolean = true,\n    v8: boolean = true\n  }\n  /**\n   * Configure the default actions that you can run\n   */\n  actions?: {\n    eventLoopDump?: boolean = true\n  }\n  /**\n   * Configure availables profilers that will be exposed\n   */\n  profiling?: {\n    /**\n     * Toggle the CPU profiling actions\n     */\n    cpuJS: boolean = true\n    /**\n     * Toggle the heap snapshot actions\n     */\n    heapSnapshot: boolean = true\n    /**\n     * Toggle the heap sampling actions\n     */\n    heapSampling: boolean = true\n    /**\n     * Force a specific implementation of profiler\n     * \n     * available: \n     *  - 'addon' (using the v8-profiler-node8 addon)\n     *  - 'inspector' (using the \"inspector\" api from node core)\n     *  - 'none' (disable the profilers)\n     *  - 'both' (will try to use inspector and fallback on addon if available)\n     */\n    implementation: string = 'both'\n  }\n  /**\n   * Configure the transaction tracing options\n   */\n  tracing?: {\n    /**\n     * Choose to enable the HTTP tracing system\n     * \n     * default is false\n     */\n    enabled: boolean = false\n    /**\n     * Specify specific urls to ignore\n     */\n    ignoreFilter?: {\n      url?: string[]\n      method?: string[]\n    }\n    // Log levels: 0-disabled,1-error,2-warn,3-info,4-debug\n    logLevel?: number\n    /**\n     * To disable a plugin in this list, you may override its path with a falsy\n     * value. Disabling any of the default plugins may cause unwanted behavior,\n     * so use caution.\n     */\n    plugins?: {\n      connect?: boolean\n      express?: boolean\n      'generic-pool'?: boolean\n      hapi?: boolean\n      http?: boolean\n      knex?: boolean\n      koa?: boolean\n      'mongodb-core'?: boolean\n      mysql?: boolean\n      pg?: boolean\n      redis?: boolean\n      restify?: boolean\n    }\n    /**\n     * An upper bound on the number of traces to gather each second. If set to 0,\n     * sampling is disabled and all traces are recorded. Sampling rates greater\n     * than 1000 are not supported and will result in at most 1000 samples per\n     * second.\n     */\n    samplingRate?: number\n  }\n  /**\n   * If you want to connect to PM2 Enterprise without using PM2, you should enable\n   * the standalone mode\n   * \n   * default is false\n   */\n  standalone?: boolean = false\n  /**\n   * Define custom options for the standalone mode\n   */\n  apmOptions?: {\n    /**\n     * public key of the bucket to which the agent need to connect\n     */\n    publicKey: string\n    /**\n     * Secret key of the bucket to which the agent need to connect\n     */\n    secretKey: string\n    /**\n     * The name of the application/service that will be reported to PM2 Enterprise\n     */\n    appName: string\n    /**\n     * The name of the server as reported in PM2 Enterprise\n     *\n     * default is os.hostname()\n     */\n    serverName?: string\n    /**\n     * Broadcast all the logs from your application to our backend\n     */\n    sendLogs?: Boolean\n    /**\n     * Since logs can be forwared to our backend you may want to ignore specific\n     * logs (containing sensitive data for example)\n     */\n    logFilter?: string | RegExp\n    /**\n     * Proxy URI to use when reaching internet\n     * Supporting socks5,http,https,pac,socks4\n     * see https://github.com/TooTallNate/node-proxy-agent\n     *\n     * example: socks5://username:password@some-socks-proxy.com:9050\n     */\n    proxy?: string\n  }\n}\n```\n\nYou can pass whatever options you want to `io.init`, it will automatically update its configuration.\n\n## Migration Guides\n\n### 2.x to 3.x\n\nHere the list of breaking changes :\n\n- Removed `io.scopedAction` because of low user adoption\n- Removed `io.notify` in favor of `io.notifyError` (droppin replacement)\n- Removed support for `gc-stats` module\n- Removed Heap profiling support when using the profiler addon (which wasn't possible at all)\n- Removed deep-metrics support (the module that allowed to get metrics about websocket/mongo out of the box), we are working on a better solution.\n- Removed `io.transpose`\n- **Changed the configuration structure**\n\nHigh chance that if you used a custom configuration for `io.init`, you need to change it to reflect the new configuration.\nApart from that and the `io.notify` removal, it shouldn't break the way you instanciated metrics.\nIf you find something else that breaks please report it to us (tech@keymetrics.io).\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Notes\n\nCurently this package isn't compatible with `amqp` if you use the `network` metrics. We recommend to disable the metrics with the following configuration in this case :\n\n```javascript\nio.init({\n  metrics: {\n    network: false\n  }\n})\n```\n","readmeFilename":"README.md","gitHead":"23f04ffd22b46d4c605c19b45a0bcd1ab51f73db","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@4.0.0-beta.4","_npmVersion":"6.4.1","_nodeVersion":"8.15.0","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-o5XM9LCslsprjE4HKEHKa5B2twFHK9WS8NE/yOrzZcss6NDNlhpdlQcXC5PVxUaAk/2JrAopu4HuOconvo0N6Q==","shasum":"907aee781b2b4b5934a0f2ef965bb74055c82403","tarball":"https://registry.npmjs.org/@pm2/io/-/io-4.0.0-beta.4.tgz","fileCount":115,"unpackedSize":572441,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcaq7+CRA9TVsSAnZWagAAN+4P/jZd+I8/byWJ75IeiJR6\ny47CTtvlu7aMjV5IyNC6lgLptZoI8eWKOI6MNz5HIByPgh8u3T83PJAsBE25\nTZU4xY1MxO3RUBS0soRjZmMKthbzh8txeFHIzGyBNVUJYWMsgryPIO85Tztd\ny58EC4ySO83/EttwOzZJpn2E+qZhtq+yzpsHTQkAqXOzGLk0pGKMa84jfAw3\nTipWjDEco27ACQZ+hh8XWPJmyGKjx2UcID0Kh1lpBgaz9S/wuEtISpCAMeny\nx42ouVhOe9Uf3KAX4pwek1QRqFQYKE1VdXcaVvKPbz49iPBLAXx5DdH+St/R\nlw0ACHG27MguhPBoXNv1rcaqL+YJKEi+2mBRxGkFvE8lHRpXyQL67BuJWa70\nYB33ZS6jwBMkFzWNDwpmjqzqMci0KUSXjOXyc8QyW/Dk9LrtEIHRngpNe+Qr\nNB4Vhr2mz3UsAJuJ8zKchhNvzR0R2CfKZr+L239R5ek9O9qENyV+8dhCJ7LY\nAKzV82EgEpQDoH1jNPp1AId2FK3otJnpz1xFtylzvAIiRrdXq+amZUm72SDH\n1C+kSz7UBrc3AFucpXR1ers1hwGMKxFxueWUiVDENMBimwRzu6wm56bQVBz4\nkCgKhuJREz8lVkBJ7cH3Dd6kHE+/6s0Nu51sPr4F4nIOA8XVRrrKAM/l8UZn\nAHnZ\r\n=kW6m\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_4.0.0-beta.4_1550495485641_0.13192528382798763"},"_hasShrinkwrap":false},"4.0.0-beta.5":{"name":"@pm2/io","version":"4.0.0-beta.5","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"Apache-2","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=6.0"},"devDependencies":{"@types/chai":"4.1.4","@types/ioredis":"^4.0.6","@types/mocha":"5.2.5","@types/mongodb":"^3.1.19","@types/node":"^10.12.21","@types/redis":"^2.8.10","chai":"4.1.2","mocha":"^5.2.0","nock":"^10.0.6","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@opencensus/core":"^0.0.9","@opencensus/propagation-b3":"^0.0.8","@pm2/agent-node":"~1.1.3","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","require-in-the-middle":"3.0.0","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 library responsible for gathering the metrics, reporting exceptions, exposing remote actions and every interaction with your application.\n\nYou can also use it as a standalone agent, if you want to connect your nodejs process to PM2 Enterprise but without having to launch your application with PM2.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-remote-actions)\n- [**Report Caught Exceptions**](https://github.com/keymetrics/pm2-io-apm/tree/master#report-caught-exceptions)\n- [**Predefined Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#predefined-metrics)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n- [**Notes**](https://github.com/keymetrics/pm2-io-apm/tree/master#notes)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in the PM2 Plus/Enterprise dashboard.\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst users = io.metric({\n  name: 'Realtime user',\n});\nusers.set(10)\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **id**: The type of metric (default 'metric', string)\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **gauge**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst myMetric = io.metric({\n  name: 'Realtime Value'\n});\n\nmyMetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst currentReq = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  currentReq.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    currentReq.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from PM2 Plus or Enterprise.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    // cb must be called at the end of the action\n    return cb({ success: true });\n  });\n});\n```\n\n## Report user error\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'), {\n  // you can some http context that will be reported in the UI\n  http: {\n    url: req.url\n  },\n  // or anything that you can like an user id\n  custom: {\n    user: req.user.id\n  }\n});\n```\n\n#### Express error reporting\n\nIf you want you can configure your express middleware to automatically send you an error with the error middleware of express :\n\n```javascript\nconst io = require('@pm2/io')\nconst express = require('express')\nconst app = express()\n\n// add the routes that you want\napp.use('/toto', () => {\n  throw new Error('ajdoijerr')\n})\n\n// always add the middleware as the last one\napp.use(io.expressErrorHandler())\n```\n\n#### Koa error reporting\n\nWe also expose a custom koa middleware to report error with a specific koa middleware :\n\n```javascript\nconst io = require('@pm2/io')\nconst Koa = require('koa')\nconst app = new Koa()\n\n// the order isn't important with koa\napp.use(pmx.koaErrorHandler())\n\n// add the routes that you want\napp.use(async ctx => {\n  ctx.throw(new Error('toto'))\n})\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nexport class IOConfig {\n  /**\n   * Automatically catch unhandled errors\n   */\n  catchExceptions?: boolean = true\n  /**\n   * Configure the metrics to add automatically to your process\n   */\n  metrics?: {\n    eventLoop: boolean = true,\n    network: boolean = false,\n    http: boolean = true,\n    gc: boolean = true,\n    v8: boolean = true\n  }\n  /**\n   * Configure the default actions that you can run\n   */\n  actions?: {\n    eventLoopDump?: boolean = true\n  }\n  /**\n   * Configure availables profilers that will be exposed\n   */\n  profiling?: {\n    /**\n     * Toggle the CPU profiling actions\n     */\n    cpuJS: boolean = true\n    /**\n     * Toggle the heap snapshot actions\n     */\n    heapSnapshot: boolean = true\n    /**\n     * Toggle the heap sampling actions\n     */\n    heapSampling: boolean = true\n    /**\n     * Force a specific implementation of profiler\n     * \n     * available: \n     *  - 'addon' (using the v8-profiler-node8 addon)\n     *  - 'inspector' (using the \"inspector\" api from node core)\n     *  - 'none' (disable the profilers)\n     *  - 'both' (will try to use inspector and fallback on addon if available)\n     */\n    implementation: string = 'both'\n  }\n  /**\n   * Configure the transaction tracing options\n   */\n  tracing?: {\n    /**\n     * Choose to enable the HTTP tracing system\n     * \n     * default is false\n     */\n    enabled: boolean = false\n    /**\n     * Specify specific urls to ignore\n     */\n    ignoreFilter?: {\n      url?: string[]\n      method?: string[]\n    }\n    // Log levels: 0-disabled,1-error,2-warn,3-info,4-debug\n    logLevel?: number\n    /**\n     * To disable a plugin in this list, you may override its path with a falsy\n     * value. Disabling any of the default plugins may cause unwanted behavior,\n     * so use caution.\n     */\n    plugins?: {\n      connect?: boolean\n      express?: boolean\n      'generic-pool'?: boolean\n      hapi?: boolean\n      http?: boolean\n      knex?: boolean\n      koa?: boolean\n      'mongodb-core'?: boolean\n      mysql?: boolean\n      pg?: boolean\n      redis?: boolean\n      restify?: boolean\n    }\n    /**\n     * An upper bound on the number of traces to gather each second. If set to 0,\n     * sampling is disabled and all traces are recorded. Sampling rates greater\n     * than 1000 are not supported and will result in at most 1000 samples per\n     * second.\n     */\n    samplingRate?: number\n  }\n  /**\n   * If you want to connect to PM2 Enterprise without using PM2, you should enable\n   * the standalone mode\n   * \n   * default is false\n   */\n  standalone?: boolean = false\n  /**\n   * Define custom options for the standalone mode\n   */\n  apmOptions?: {\n    /**\n     * public key of the bucket to which the agent need to connect\n     */\n    publicKey: string\n    /**\n     * Secret key of the bucket to which the agent need to connect\n     */\n    secretKey: string\n    /**\n     * The name of the application/service that will be reported to PM2 Enterprise\n     */\n    appName: string\n    /**\n     * The name of the server as reported in PM2 Enterprise\n     *\n     * default is os.hostname()\n     */\n    serverName?: string\n    /**\n     * Broadcast all the logs from your application to our backend\n     */\n    sendLogs?: Boolean\n    /**\n     * Since logs can be forwared to our backend you may want to ignore specific\n     * logs (containing sensitive data for example)\n     */\n    logFilter?: string | RegExp\n    /**\n     * Proxy URI to use when reaching internet\n     * Supporting socks5,http,https,pac,socks4\n     * see https://github.com/TooTallNate/node-proxy-agent\n     *\n     * example: socks5://username:password@some-socks-proxy.com:9050\n     */\n    proxy?: string\n  }\n}\n```\n\nYou can pass whatever options you want to `io.init`, it will automatically update its configuration.\n\n## Migration Guides\n\n### 2.x to 3.x\n\nHere the list of breaking changes :\n\n- Removed `io.scopedAction` because of low user adoption\n- Removed `io.notify` in favor of `io.notifyError` (droppin replacement)\n- Removed support for `gc-stats` module\n- Removed Heap profiling support when using the profiler addon (which wasn't possible at all)\n- Removed deep-metrics support (the module that allowed to get metrics about websocket/mongo out of the box), we are working on a better solution.\n- Removed `io.transpose`\n- **Changed the configuration structure**\n\nHigh chance that if you used a custom configuration for `io.init`, you need to change it to reflect the new configuration.\nApart from that and the `io.notify` removal, it shouldn't break the way you instanciated metrics.\nIf you find something else that breaks please report it to us (tech@keymetrics.io).\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Notes\n\nCurently this package isn't compatible with `amqp` if you use the `network` metrics. We recommend to disable the metrics with the following configuration in this case :\n\n```javascript\nio.init({\n  metrics: {\n    network: false\n  }\n})\n```\n","readmeFilename":"README.md","gitHead":"5d185ede3e047b854d5936a17ba6e3bf7e2eee58","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@4.0.0-beta.5","_npmVersion":"6.4.1","_nodeVersion":"8.15.0","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-1cypLczpEDmqKnhLEhhwUB9NphPrisMAIOcLQGMcu8/PE3wTNk5HI9knV5vS53RdeJC1nZvwPNdyBngroesKFg==","shasum":"4e22efc0bd9f1de1693872225f23c2f89549e3ab","tarball":"https://registry.npmjs.org/@pm2/io/-/io-4.0.0-beta.5.tgz","fileCount":119,"unpackedSize":587367,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcdA0UCRA9TVsSAnZWagAAoXIP/jTWejfUfjZBspqTtFAt\n+9Czo5Ae7gJ3DMoeesa798E6FE1C1bw/Hfug30hOWikesAnLsiT9XNohecnx\ne1hL06B7jU3gkNWXQaWUc10vNdCKfUflur4idwNR/1DZe6e5WqIy3T+G4mvi\nnUgn0AzaPlNWF5MBcyIHeOOAhJO4XyNxllymhupR85znSKZjJ9yRvhmZwwBx\nqniKTlcXMR0tHCqQ6Wrk3XnfrNXcNPbnqZVnxqyye+fndnLp+bZB6ViGTfQl\n+bv1DvMzWLCG3d/uZQx3OcmdK+ST8jMOocskIvC0QsvcXE8h3gZFg6Chqh0F\nENEXi0m44Uvmtk5Z58tlvhgmbzoNprPuG3Gr6dGuE24wlbWBKq+3JnMsS1DZ\n13S7SC7mWifzRt1ct6AMxbqlI6LPtug9zuTH3PxKrhuA1eHKsR0FsbFWgiB2\nNGZrrkQZQ3kTJzXU9xvcUPdxb53TRYj98Q9gljt+H27oH9btyqGwSb7PPDta\njWgjHRg9PPf0Z+JabyVXPXbB2iNdZmYal11d64gwSlN7S5XYnFa5smL7REy4\nJkHp7EUswA8rtJa/tfyu6SZZK1DOmQrrqAfB8ye4+H+au08sVNpdlpho01yv\nBvcea8tJKkGuldsTW9OCVbD7Nnq7ngZWyaAUDaH77Gj/SKe9egg6ugHEk1I7\nYxDi\r\n=p9Qq\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_4.0.0-beta.5_1551109395505_0.3576411911276629"},"_hasShrinkwrap":false},"4.0.0":{"name":"@pm2/io","version":"4.0.0","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"Apache-2","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=6.0"},"devDependencies":{"@types/chai":"4.1.4","@types/ioredis":"^4.0.6","@types/mocha":"5.2.5","@types/mongodb":"^3.1.19","@types/node":"^10.12.21","@types/redis":"^2.8.10","chai":"4.1.2","mocha":"^5.2.0","nock":"^10.0.6","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@opencensus/core":"^0.0.9","@opencensus/propagation-b3":"^0.0.8","@pm2/agent-node":"~1.1.3","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","require-in-the-middle":"3.0.0","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"gitHead":"459cd7506bf6cc6c0096d6012b307f427aae3ab0","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@4.0.0","_npmVersion":"6.4.1","_nodeVersion":"8.15.0","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-5ntCoMsjfqdS1QOl6OSECERSTBqQtNqkN0eJGUB04fAtcmqGVPcTPqOWpLBjsGIYHGvL5N4utP99MZYbUqT/7A==","shasum":"46cd361e27877495a8a87fa19d153e93410cba1b","tarball":"https://registry.npmjs.org/@pm2/io/-/io-4.0.0.tgz","fileCount":119,"unpackedSize":591450,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcdo/gCRA9TVsSAnZWagAA8BEP+wS7h1stUu8ugT1Bolni\nuqxJG56mkKXp0ahiF0i6AYCQDp7OYHcPJI2y+h6GGbLUykTfNndrv7ghG4lh\nOHPWflJn5QP9a5RUCxL9A/z1+ccT4Vu1Np+qQLE+stBCss+KLzcbRxByxS8j\nvsKOrTvFixa0hzL82AWs+2wg2OWRtcfnEXT37pZTpIe9f4u8vvfYORCuyT0i\nnpQcHHUapHDAYGUUk9X48f70V2yiUIMH1t1yBqbwL9uG5/KIvmURpl82+uqT\nW0kkbowLGt0FWA38c09bDMMWlE5pbAQ6XLdpSRopAE+/VAqaD94nAdK2yJcW\nbmPm5wswM8QT5qJ+n3X1wFgy7PVYzY++ZE89C9vXF9Z5Ciz2leHjG3h/UVwc\nciUQ96EoC/VC4eisdQfT6UYzWTwLVzhK4Ba3id8Nj8IkyWfBdeWr6Zuxhkea\ncsM3t1GEpg1yfSfJqloPx1eB3zi9TP7oGlEWMKxKV0DvnbpjULp/EZeb+a/4\nnvdzjts700K8yWQMITgTEvM0Rtp4gKLQkxspcQyw2NOWGk6rMViJ+boA73cy\n7On6SVBvDZn7s5oJUzsP3nr2PaDvZI1BErSeyPultMN1DYMqwp+SraVU8JR3\nJwjqY2DKeaEzrw3NMt1/x553A8/vjiigSETO7ta7wSZulm1FhLLgyRPb7p8F\n/CdE\r\n=1bGv\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_4.0.0_1551273951687_0.2472949256403949"},"_hasShrinkwrap":false},"4.1.0":{"name":"@pm2/io","version":"4.1.0","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"Apache-2","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=6.0"},"devDependencies":{"@types/chai":"4.1.4","@types/ioredis":"^4.0.6","@types/mocha":"5.2.5","@types/mongodb":"^3.1.19","@types/node":"^10.12.21","@types/redis":"^2.8.10","chai":"4.1.2","mocha":"^5.2.0","nock":"^10.0.6","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@opencensus/core":"^0.0.9","@opencensus/propagation-b3":"^0.0.8","@pm2/agent-node":"~1.1.8","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","require-in-the-middle":"3.0.0","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"gitHead":"b035f5fe6ae1c29ec1f14f6aa9c229936b288b31","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@4.1.0","_npmVersion":"6.4.1","_nodeVersion":"10.15.2","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-OIwdO7UCznkCfy++FgoA9DTB7jl5Cm5M/m9kKQqxEjEPl+4JHoNZ6nFg6teDEtXsyUADViNAkvQKCnyDyL+oLQ==","shasum":"9d76948377bfd1262643fbfd445ec9054534cfdd","tarball":"https://registry.npmjs.org/@pm2/io/-/io-4.1.0.tgz","fileCount":121,"unpackedSize":605398,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcfn2VCRA9TVsSAnZWagAAjS4P+wRfSigy7o7fpgTlmjwW\ndx2nuZJsijumEBfgNGH+c9+IEHddmqdRy/KoG5O2WDztzN8L7iYT8xqVZjEh\n3QwcTcEyrGlSSoNVuhLi2dsHfzZImIBg75j46En8/QrMuOcp3Hlnv2L+2PqT\nF/kKneIknolJx2SpAxzL08HLIvD/tx3BJgZe1gjhWKAWJZoaPSy3ySe/hkv4\n6RAdQZzCQYgOmI10guO+VBFxv2ZAuhbsW7VxR9o3LBw5jabsCYV4KUX3NtkJ\nF2OyxgkbVKNAdvVQQGn0wH66pPcVCn4gU7tcxBd1m5EkbG9CY3unhAVax+8N\ndls1CvPZn5ykaxIXWrLlGOlXVwDraYMiYJUetZ4G0vn2050EJg9qDsqrzACd\nWgjHrfOevCPtKWf3gM5n1+vwFWW9fN6JasakQcLUmiE2lmFl5HuJFGpxZkti\nhRfNLLHHFUAlOMhI/vOtvr3/qinUkpv7qXvyE43s0NqMI/Noej0d2ZNTEvH0\np9ybLxgfR3simlJeCRyiRwCS17o1Lylw1XA7eDQMeK35ZaKwGDxZARvkhkqd\naZntwjgr/4W6BNxC8HQ3zhG72CQo5Ipdv4oXpZZBj1iQBcJTGe2c84gK7mgl\nvsjjLLJLK7hwm1DgyzjSEziTSI0JhtibRNneowNBW6AopnXkyamebnn2WT1g\n00S0\r\n=UeB2\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_4.1.0_1551793556705_0.2577516359627754"},"_hasShrinkwrap":false},"4.1.1":{"name":"@pm2/io","version":"4.1.1","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"Apache-2","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=6.0"},"devDependencies":{"@types/chai":"4.1.4","@types/ioredis":"^4.0.6","@types/mocha":"5.2.5","@types/mongodb":"^3.1.19","@types/node":"^10.12.21","@types/redis":"^2.8.10","chai":"4.1.2","mocha":"^5.2.0","nock":"^10.0.6","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@opencensus/core":"^0.0.9","@opencensus/propagation-b3":"^0.0.8","@pm2/agent-node":"~1.1.8","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","require-in-the-middle":"3.0.0","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"gitHead":"cfcd1d4d381a5ae44f41cc276a74de7a6b0a98dd","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@4.1.1","_nodeVersion":"11.10.1","_npmVersion":"6.7.0","dist":{"integrity":"sha512-cVQJRDv3SfZz2IophMzz6vVBzJtN3iH8skMsdOTRjxBfxWeLhBsQxs+hnqYSEHszUUhsawcctnFSf+MK75Z3YQ==","shasum":"62e9204cf886bf36f95fdf67f5c3b9d359e19555","tarball":"https://registry.npmjs.org/@pm2/io/-/io-4.1.1.tgz","fileCount":121,"unpackedSize":605667,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcf56UCRA9TVsSAnZWagAAyWIP/3zaNJIv809LRT15JnQ8\nzxOlkg0iE8nGY5411Hrm/BTahvKcPCTXJOAl7yUpx5IfHHWrx8qFpWAHQUKF\nliWFpz9A4oFL8yQpe7Znezg2BjMrYNQIEiUL0dR8WAobRXp5n1qAIQPEoUbx\nFX1IGM1BVrkLhmHznYDZYRZFlFiIVuiDC/IYc8/q3S+4nib0N5f70tIq3QEg\nPDcnaXo1qtE6GPifOVvfbdJbQxiZgDCB+prYRq0aK+Asu+4GGSaCkbIwVuD9\ny3ztIuQNFAHWA28K+LMdOcF2ChsKtjcfnQoggfJuTKZAO9j++DkBpLVmj7xp\ngTzz4UvCN/JlOERda/of+FNShZt6i+uiHKKE2XhoHNvbiOjcrwRrwjjvw/Kd\nznFJEJG6j3ZZTMTJ3kKDAlsGcvE+A7ExFNPbIhjKIFOxsqqQRkU5jfNUzm5R\n5jlDkvuwVebO8opEexfxi2YHDukMBkW9EGQmLXs0Du1+D6YHOHlU+ABDurDQ\nEILJNi2lVAmM3KaJf0Ns4gwBKjvio3ofAFD8iWLDOjb1NEo1ccckR8XjE+7V\nnlajaxsABz8EFcoyS/9nyUK08wcpxXCek0wrqOqw+VxyNAseQUky9rYY0pIG\nzXAxn70mdT5x89sTeZKeqnO+SHVwfky4NaBHgbGgaa+7kV0LhDQm4wJTzYqc\nzEXx\r\n=xQOp\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_4.1.1_1551867539773_0.722009207664696"},"_hasShrinkwrap":false},"4.1.2":{"name":"@pm2/io","version":"4.1.2","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"Apache-2","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=6.0"},"devDependencies":{"@types/chai":"4.1.4","@types/ioredis":"^4.0.6","@types/mocha":"5.2.5","@types/mongodb":"^3.1.19","@types/node":"^10.12.21","@types/redis":"^2.8.10","chai":"4.1.2","mocha":"^5.2.0","nock":"^10.0.6","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@opencensus/core":"^0.0.9","@opencensus/propagation-b3":"^0.0.8","@pm2/agent-node":"~1.1.8","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","require-in-the-middle":"3.0.0","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"gitHead":"d34b9963601cc7935f0e2ff01a1a9430be73cdfe","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@4.1.2","_npmVersion":"6.4.1","_nodeVersion":"8.15.1","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-AS4eIjcBGac+hxq2c1Rb9jaXIn3VBv998vhACi6yD9RLb9+jUZ4Ezs6FsIg2i4rfMoiBn3b9DewjCfLGqhYB4g==","shasum":"a9bb69bc80fc0848ee2c70b15cd251ebd4750b88","tarball":"https://registry.npmjs.org/@pm2/io/-/io-4.1.2.tgz","fileCount":121,"unpackedSize":606652,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcgoD1CRA9TVsSAnZWagAAP1gP/R4knoL6WmFlw2yokHGX\nXLuDO8ATr5m6wMKTRmwgfllc73cffk1nCsQkYsyPpSC5BzZr62IgauyyTtIb\n8P11tdRLosz4t68PRprYsehpKnOZcv21/KMGbL1bDwvFJgjR4pk71pdGL05F\n/hla0ipAjRkzTFy0qpxVbTQg+pqmMcpZwjeNkb+/H8XvRkRbaPwmKVTEB8bt\ntTkKNqGF407pw+XLgTRKIrSTZD7WktP4uir9VfHBHkY0p3+41Imjz4PasDuL\ngPyX6WmpG8pPSbzcztbSeg4yqomdKtcVcRvs2dwgohP563sEYq5M423EZc7+\nyTZCfcjb35mmXfif72nN0rb3d5R6+SoX6IR3FtBQWdwGBWUtpa6fb2n/VaLK\nBLIPMhYkYU8JcFs13Grghpt3g2Q9kObAvQs1Tl+MfCmieH92X9rY1ithZIDt\naA9jTX+Z8to8v/FmoUf8AMr/ynykZHfPlVPTWPRfQla5kN7dqv3GELPdgY+m\nQHEPOpfO0Z2YzAVsCUvfEy9scbewlzgGEYF4TBTdu34HUBiQ9clStorP20Sb\nA0Us1ORTbdoTBJF5XBk05TxcxkrYTGJ/nuqeDQ8QqfoadFIUpdKWZq0MVCKb\nCWyraMbUGJLO8eowfRqjxeqmnOiwavRpS1IYyhkgxuIwTclb3593oVXfX84E\naJSj\r\n=iGd3\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_4.1.2_1552056564226_0.4198989892198277"},"_hasShrinkwrap":false},"4.1.3":{"name":"@pm2/io","version":"4.1.3","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"Apache-2","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=6.0"},"devDependencies":{"@types/chai":"4.1.4","@types/ioredis":"^4.0.6","@types/mocha":"5.2.5","@types/mongodb":"^3.1.19","@types/node":"^10.12.21","@types/redis":"^2.8.10","chai":"4.1.2","mocha":"^5.2.0","nock":"^10.0.6","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@opencensus/core":"^0.0.9","@opencensus/propagation-b3":"^0.0.8","@pm2/agent-node":"~1.1.8","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","require-in-the-middle":"3.0.0","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"gitHead":"68f6b412c20cffe9e7d94b098a55a33409f623fe","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@4.1.3","_npmVersion":"6.4.1","_nodeVersion":"8.15.1","_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"dist":{"integrity":"sha512-M3bo1h+1neM9iDBk6zN8D/DzuZCAhQXPFcsCi7PDAfpK88wH4eQOP5RW2omdJ2Cv1RKTcZXODRD5Dx73OQNMcA==","shasum":"ccb8551e3d3bf3c7cdc0f1038d9f83c9d184feb4","tarball":"https://registry.npmjs.org/@pm2/io/-/io-4.1.3.tgz","fileCount":122,"unpackedSize":614009,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcknKlCRA9TVsSAnZWagAANQoP+gIzagJqvCfv0qkhJBW+\naPtHQKLugQohHa3I493uNgk93lufGEHd1aEa8ws2L94tnSbciayKejemZHx0\n7jABb3bb5yXdZuNY1tnUPQV1ygZhSzVg3IiyKXrwp0PaFRbHOgkGmDhSgzlr\nRw2lVLrCsbSfMXFtK+V9dWgLqAVFExHpiAcVD8uuPr7f5yKD2Rx1qp0gRbfe\n/hemro7YACkDyJIVd1/dSu2XNF1g8l4ddJ+Qy0mtxYX5ZopfURReSq01hEFe\nYcZcyFmOvwqrh2FXy6QxrtGHEiEqQNOQhkCe0Ic7Axb8LXlcWMGSU2ExbAE6\nknAUetWX+oOj78Fkk/VygZkXpiafQOdDBHGFyZSZptBOr/q2DXS1OX0fkKiW\nk464VDj78SsUb8DXH4QF96d4diRa34dJdTdk7qx0zPuxkD7JqURCVTO8RGih\ngti3eRZW4rDf6cSFBKVINT0J4J7faQn74CvU0MFbAoZkKowudugg6RI38hNj\ns1XviHb+saxAoH+oKIot94JYqmKntdwpP6mEjIvv1+Sh9eGZjT/Tt0qNU7m0\nzHR3IGC9na2K27G1shfHWuWw8+DOrA6G4LZ+FlwcEeg5jlP26OcPzDWW4V8W\nUvkR3lACQzYa0FIhZ4bv0Pgh3owrUirwq2Qn0uLByb8kHCT9YpYD+i+4lrXr\n/lMU\r\n=QwnE\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_4.1.3_1553101476299_0.28979890338345937"},"_hasShrinkwrap":false},"4.1.4":{"name":"@pm2/io","version":"4.1.4","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"Apache-2","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=6.0"},"devDependencies":{"@types/chai":"4.1.4","@types/ioredis":"^4.0.6","@types/mocha":"5.2.5","@types/mongodb":"^3.1.19","@types/node":"^10.12.21","@types/redis":"^2.8.10","chai":"4.1.2","mocha":"^5.2.0","nock":"^10.0.6","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@opencensus/core":"^0.0.9","@opencensus/propagation-b3":"^0.0.8","@pm2/agent-node":"~1.1.8","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","require-in-the-middle":"3.0.0","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"gitHead":"30f887b6f54fd36c502648111255f48aa84983c5","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@4.1.4","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"keymetrics_bot","email":"tech@keymetrics.io"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"dist":{"integrity":"sha512-CD5DZaOD2kvclks9MN3EHbohGeN0ZXc3H0607I4YL6LJHf8HaCtrB3na9USFToVbbKN3rNrvVSCTRkjNf22W1g==","shasum":"3d092d829ea1559498764349313d5c3cf77f5c77","tarball":"https://registry.npmjs.org/@pm2/io/-/io-4.1.4.tgz","fileCount":120,"unpackedSize":613774,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcrIBqCRA9TVsSAnZWagAAANAP/1x4ys2OKTiAIiCItzOJ\nx+8NGzVGJXOidpsTvykzq0ruMFKHoxrWyx+N7K+jwTKFphtufiNntVUQrF+Z\n/bQTPTw2oZRMpbTdGoOsYoQyfy2PBcbb6K96ZZBib7Xt4jappZXWRAuksD5K\nDelhVcYVPSQTLFeiih4xJUU0Ym7xotwXqlUazgHYP7DvOAA82oxl4SBnpzJu\n577nVPvbYCcbf0s6QD+d4b0tL7j0uJ/YOaNlegUN9z9P31MmcUfAf90Tl+nH\nmk+gPYFtUwCtDZxa4GARsd9m6Jnh4slqbwzHybtc4ksdyzc5Tmw57pa70RnR\nz3nZu0aMFElcZkGwLxUPaLXr7RW1YPuloFym14TsXiKIf8W76ZEBFEGFhQmy\nQB9Pb2/1X+N6wSonBm1l82BpWP++Fj7SQzxmgUwL2g7gpsHiGOhrCQ5rE4SB\nujrrixOQzL/Xx94FEOI1p0N2kxbKYLz04H/9FKO1rvAs8GhdSzAI6KDB3EPb\n4dPLnxaqRNdrqOcR/DFtt/gcNyY8k1y2ktoNO5I7U7/VtJgOO3PPiRxCVHRS\n1TMQySBHFdbsf900iXHJTQEfvdfk4JAAF/vTy3ebBCQHntJv4H2xqCt5pf4R\n+jMWJ86e53AcidzuTweiBHwizz/jtsakIJ+rffIy7ad7QoxJJnBYxqra6SO4\nwOob\r\n=QTe3\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_4.1.4_1554808937645_0.8891731140576682"},"_hasShrinkwrap":false},"4.2.0-alpha.1":{"name":"@pm2/io","version":"4.2.0-alpha.1","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"Apache-2","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=6.0"},"devDependencies":{"@types/chai":"4.1.4","@types/ioredis":"^4.0.6","@types/mocha":"5.2.5","@types/mongodb":"^3.1.19","@types/node":"^10.12.21","@types/redis":"^2.8.10","@types/express":"^4.16.1","chai":"4.1.2","mocha":"^5.2.0","nock":"^10.0.6","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@opencensus/core":"^0.0.9","@opencensus/propagation-b3":"^0.0.8","@pm2/agent-node":"~1.1.8","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","require-in-the-middle":"3.0.0","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 library responsible for gathering the metrics, reporting exceptions, exposing remote actions and every interaction with your application.\n\nYou can also use it as a standalone agent, if you want to connect your nodejs process to PM2 Enterprise but without having to launch your application with PM2.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm#expose-remote-actions-trigger-functions-remotely)\n- [**Report Custom Errors**](https://github.com/keymetrics/pm2-io-apm#report-user-error)\n- [**Distributed Tracing**](https://github.com/keymetrics/pm2-io-apm#distributed-tracing)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Migration Guide**](https://github.com/keymetrics/pm2-io-apm#migration-guides)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n- [**Notes**](https://github.com/keymetrics/pm2-io-apm/tree/master#notes)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in the PM2 Plus/Enterprise dashboard.\n\n### Optional addon to add more metrics\n\nIf you want to add more metrics about the NodeJS runtime, you can install `@pm2/node-runtime-stats` in your application dependency, this module will add the following metrics:\n- More accurate Event Loop Metrics (directly pluged to libuv)\n- GC Pause (Old object pool), both median and percentile 95\n- GC Pause (Young object pool), both median and percentile 95\n- CPU Context Switch, both volontary and involontary (see [this stackexchanges post](https://unix.stackexchange.com/questions/442969/what-exactly-are-voluntary-context-switches))\n- Page Fault, both minor and major (see [this wikipedia article](https://en.wikipedia.org/wiki/Page_fault#Types) )\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst users = io.metric({\n  name: 'Realtime user',\n});\nusers.set(10)\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **id**: The type of metric (default 'metric', string)\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **gauge**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst myMetric = io.metric({\n  name: 'Realtime Value'\n});\n\nmyMetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst currentReq = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  currentReq.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    currentReq.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from PM2 Plus or Enterprise.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    // cb must be called at the end of the action\n    return cb({ success: true });\n  });\n});\n```\n\n## Report user error\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'), {\n  // you can some http context that will be reported in the UI\n  http: {\n    url: req.url\n  },\n  // or anything that you can like an user id\n  custom: {\n    user: req.user.id\n  }\n});\n```\n\n#### Express error reporting\n\nIf you want you can configure your express middleware to automatically send you an error with the error middleware of express :\n\n```javascript\nconst io = require('@pm2/io')\nconst express = require('express')\nconst app = express()\n\n// add the routes that you want\napp.use('/toto', () => {\n  throw new Error('ajdoijerr')\n})\n\n// always add the middleware as the last one\napp.use(io.expressErrorHandler())\n```\n\n#### Koa error reporting\n\nWe also expose a custom koa middleware to report error with a specific koa middleware :\n\n```javascript\nconst io = require('@pm2/io')\nconst Koa = require('koa')\nconst app = new Koa()\n\n// the order isn't important with koa\napp.use(pmx.koaErrorHandler())\n\n// add the routes that you want\napp.use(async ctx => {\n  ctx.throw(new Error('toto'))\n})\n```\n\n## Distributed Tracing\n\nThe Distributed Tracing allows to captures and propagates distributed traces through your system, allowing you to visualize how customer requests flow across services, rapidly perform deep root cause analysis, and better analyze latency across a highly distributed set of services.\nIf you want to enable it, here the simple options to enable:\n\n\n```javascript\nconst io = require('@pm2/io').init({\n  tracing: {\n    enabled: true,\n    // will add the actual queries made to database, false by default\n    detailedDatabasesCalls: true,\n    // if you want you can ignore some endpoint based on their path\n    ignoreIncomingPaths: [\n      // can be a regex\n      /misc/,\n      // or a exact string\n      '/api/bucket'\n      // or a function with the request\n      (url, request) => {\n        return true\n      }\n    ],\n    // same as above but used to match entire URLs\n    ignoreOutgoingUrls: [],\n    /**\n     * Determines the probability of a request to be traced. Ranges from 0.0 to 1.0\n     * default is 0.5\n     */\n    samplingRate: 0.5\n  }\n})\n```\n\nBy default we ignore specific incoming requests (you can override this by setting `ignoreIncomingPaths: []`):\n- Request with the OPTIONS or HEAD method\n- Request fetching a static ressources (`*.js`, `*.css`, `*.ico`, `*.svg`, `.png` or `*webpack*`)\n\n### What's get traced\n\nWhen your application will receive a request from either `http`, `https` or `http2` it will start a trace. After that, we will trace the following modules:\n - `http` outgoing requests\n - `https` outgoing requests\n - `http2` outgoing requests\n - `mongodb-core` version 1 - 3\n - `redis` versions > 2.6\n - `ioredis` versions > 2.6\n - `mysql` version 1 - 3\n - `mysql2` version 1 - 3\n - `pg` version > 6\n - `vue-server-renderer` version 2\n\n ### Custom Tracing API\n\nThe custom tracing API can be used to create custom trace spans. A span is a particular unit of work within a trace, such as an RPC request. Spans may be nested; the outermost span is called a root span, even if there are no nested child spans. Root spans typically correspond to incoming requests, while child spans typically correspond to outgoing requests, or other work that is triggered in response to incoming requests. This means that root spans shouldn't be created in a context where a root span already exists; a child span is more suitable here. Instead, root spans should be created to track work that happens outside of the request lifecycle entirely, such as periodically scheduled work. To illustrate:\n\n```js\nconst io = require('@pm2/io').init({ tracing: true })\nconst tracer = io.getTracer()\n// ...\n\napp.get('/:token', function (req, res) {\n  const token = req.params.token\n  // the '2' correspond to the type of operation you want to trace\n  // can be 0 (UNKNOWN), 1 (SERVER) or 2 (CLIENT)\n  // 'verifyToken' here will be the name of the operation\n  const customSpan = tracer.startChildSpan('verifyToken', 2)\n  // note that customSpan can be null if you are not inside a request\n  req.Token.verifyToken(token, (err, result) => {\n    if (err) {\n      // you can add tags to the span to attach more details to the span\n      customSpan.addAttribute('error', err.message)\n      customSpan.end()\n      return res.status(500).send('error')\n    }\n    customSpan.addAttribute('result', result)\n    // be sure to always .end() the spans\n    customSpan.end()\n    // redirect the user if the token is valid\n    res.send('/user/me')\n  })\n})\n\n// For any significant work done _outside_ of the request lifecycle, use\n// startRootSpan.\nconst traceOptions = {\n    name: 'my custom trace',\n    // the '1' correspond to the type of operation you want to trace\n    // can be 0 (UNKNOWN), 1 (SERVER) or 2 (CLIENT)\n    kind: '1'\n  }\nplugin.tracer.startRootSpan(traceOptions, rootSpan => {\n  // ...\n  // Be sure to call rootSpan.end().\n  rootSpan.end()\n});\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nexport class IOConfig {\n  /**\n   * Automatically catch unhandled errors\n   */\n  catchExceptions?: boolean = true\n  /**\n   * Configure the metrics to add automatically to your process\n   */\n  metrics?: {\n    eventLoop: boolean = true,\n    network: boolean = false,\n    http: boolean = true,\n    gc: boolean = true,\n    v8: boolean = true\n  }\n  /**\n   * Configure the default actions that you can run\n   */\n  actions?: {\n    eventLoopDump?: boolean = true\n  }\n  /**\n   * Configure availables profilers that will be exposed\n   */\n  profiling?: {\n    /**\n     * Toggle the CPU profiling actions\n     */\n    cpuJS: boolean = true\n    /**\n     * Toggle the heap snapshot actions\n     */\n    heapSnapshot: boolean = true\n    /**\n     * Toggle the heap sampling actions\n     */\n    heapSampling: boolean = true\n    /**\n     * Force a specific implementation of profiler\n     * \n     * available: \n     *  - 'addon' (using the v8-profiler-node8 addon)\n     *  - 'inspector' (using the \"inspector\" api from node core)\n     *  - 'none' (disable the profilers)\n     *  - 'both' (will try to use inspector and fallback on addon if available)\n     */\n    implementation: string = 'both'\n  }\n  /**\n   * Configure the transaction tracing options\n   */\n  tracing?: {\n    /**\n     * Enabled the distributed tracing feature.\n     */\n    enabled: boolean\n    /**\n     * If you want to report a specific service name\n     * the default is the same as in apmOptions\n     */\n    serviceName?: string\n    /**\n     * Generate trace for outgoing request that aren't connected to a incoming one\n     * default is false\n     */\n    outbound?: boolean\n    /**\n     * Determines the probability of a request to be traced. Ranges from 0.0 to 1.0\n     * default is 0.5\n     */\n    samplingRate?: number,\n    /**\n     * Add details about databases calls (redis, mongodb etc)\n     */\n    detailedDatabasesCalls?: boolean,\n    /**\n     * Ignore specific incoming request depending on their path\n     */\n    ignoreIncomingPaths?: Array<IgnoreMatcher<httpModule.IncomingMessage>>\n    /**\n     * Ignore specific outgoing request depending on their url\n     */\n    ignoreOutgoingUrls?: Array<IgnoreMatcher<httpModule.ClientRequest>>\n  }\n  /**\n   * If you want to connect to PM2 Enterprise without using PM2, you should enable\n   * the standalone mode\n   * \n   * default is false\n   */\n  standalone?: boolean = false\n  /**\n   * Define custom options for the standalone mode\n   */\n  apmOptions?: {\n    /**\n     * public key of the bucket to which the agent need to connect\n     */\n    publicKey: string\n    /**\n     * Secret key of the bucket to which the agent need to connect\n     */\n    secretKey: string\n    /**\n     * The name of the application/service that will be reported to PM2 Enterprise\n     */\n    appName: string\n    /**\n     * The name of the server as reported in PM2 Enterprise\n     *\n     * default is os.hostname()\n     */\n    serverName?: string\n    /**\n     * Broadcast all the logs from your application to our backend\n     */\n    sendLogs?: Boolean\n    /**\n     * Avoid to broadcast any logs from your application to our backend\n     * Even if the sendLogs option set to false, you can still see some logs\n     * when going to the log interface (it automatically trigger broacasting log)\n     */\n    disableLogs?: Boolean\n    /**\n     * Since logs can be forwared to our backend you may want to ignore specific\n     * logs (containing sensitive data for example)\n     */\n    logFilter?: string | RegExp\n    /**\n     * Proxy URI to use when reaching internet\n     * Supporting socks5,http,https,pac,socks4\n     * see https://github.com/TooTallNate/node-proxy-agent\n     *\n     * example: socks5://username:password@some-socks-proxy.com:9050\n     */\n    proxy?: string\n  }\n}\n```\n\nYou can pass whatever options you want to `io.init`, it will automatically update its configuration.\n\n## Migration Guides\n\n### 2.x to 3.x\n\nHere the list of breaking changes :\n\n- Removed `io.scopedAction` because of low user adoption\n- Removed `io.notify` in favor of `io.notifyError` (droppin replacement)\n- Removed support for `gc-stats` module\n- Removed Heap profiling support when using the profiler addon (which wasn't possible at all)\n- Removed deep-metrics support (the module that allowed to get metrics about websocket/mongo out of the box), we are working on a better solution.\n- Removed `io.transpose`\n- **Changed the configuration structure**\n\nHigh chance that if you used a custom configuration for `io.init`, you need to change it to reflect the new configuration.\nApart from that and the `io.notify` removal, it shouldn't break the way you instanciated metrics.\nIf you find something else that breaks please report it to us (tech@keymetrics.io).\n\n### 3.x to 4.x\n\nThe only difference with the 4.x version is the new tracing system put in place, so the only changs are related to it:\n\n- **Dropped the support for node 4** (you can still use the 3.x if you use node 4 but you will not have access to the distributed tracing)\n- **Changed the tracing configuration** (see options above)\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Notes\n\nCurently this package isn't compatible with `amqp` if you use the `network` metrics. We recommend to disable the metrics with the following configuration in this case :\n\n```javascript\nio.init({\n  metrics: {\n    network: false\n  }\n})\n```\n","readmeFilename":"README.md","gitHead":"d8229f0aafe47e106c39d837f6adbf74336587cd","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@4.2.0-alpha.1","_nodeVersion":"11.13.0","_npmVersion":"6.7.0","dist":{"integrity":"sha512-CJU0328vkPnql7OcVlKKifm2YFowC6sw0NSbSigDOjNuJKiDphp0ETdy1CZfqAO9KZ6dpMxWwXzUAhhNjLEmkA==","shasum":"6013456760d256bb0da66427ae85a7d4593d02ac","tarball":"https://registry.npmjs.org/@pm2/io/-/io-4.2.0-alpha.1.tgz","fileCount":124,"unpackedSize":641112,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcr0zdCRA9TVsSAnZWagAAUZQQAJ8XuI2fWEenFJXp89ub\nn3vDN+PE0dieuSIZXb1+DcLklCes5DzaJG1bevIVs/dCSp0Jy9zEeARNgQWn\nGU9ppcTdBT2tFLUKnjPFsWqPmdaW9MNTUlKcMpm0iFjJQaQAvIRTSWvvw3PM\n9WqbcbyWwX927BBI97D5eU67k5IMoOwcV5G+5ANM0Ky0nfQNrBdWekBS/0gZ\nFAWb4kBxih8TjljQx6polRquL7dSDT6eUEDe52bl0UHS95lj+I6vdmTc5QTv\nlpd1rw/Ct6+SPF5jvxiSLWn7PuqsMx+CnvxB5NN9JnB12Eo1BjEQmcce9AxT\n8WF2UpbcjofqgzocpPWwzWjYdTzax23sUlrdroZv8gBIC2GP57ex61HPOymm\n9pgPmf8keXLjuS6JAZS9ROMYbo8uA3JQEbu6xMfx59j63d10TO61+a0701ih\n2LSAdgAd5SMU2Td+S5/I/9z1cbGOhJ6/DNII0i/D1SIjevllPLofw2XgROYN\nvcDNGyeAy49pTRzQKax4O8ODVPnfE/D945qc5G8R77aqFWyPXMbKQ7MUP19s\nEkixZlCeNsuUiYDu7HnJ36BPqhdPMg5u215fuk1VcO8rlmAGEUZhKEkQlm+J\nAUeVku1ihSFOyrhThvtsuTIbcRLfF4OTJ3Gjukr70wU894J34xqzXi0yB9WD\ndFlE\r\n=h2ed\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"},{"email":"contact@vmarchaud.fr","name":"vmarchaud"}],"_npmUser":{"name":"tknew","email":"strzelewicz.alexandre@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_4.2.0-alpha.1_1554992349244_0.7959043089184206"},"_hasShrinkwrap":false},"4.2.0":{"name":"@pm2/io","version":"4.2.0","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"Apache-2","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=6.0"},"devDependencies":{"@types/chai":"4.1.4","@types/ioredis":"^4.0.6","@types/mocha":"5.2.5","@types/mongodb":"^3.1.19","@types/node":"^10.12.21","@types/redis":"^2.8.10","@types/express":"^4.16.1","chai":"4.1.2","mocha":"^5.2.0","nock":"^10.0.6","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@opencensus/core":"^0.0.9","@opencensus/propagation-b3":"^0.0.8","@pm2/agent-node":"~1.1.8","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","require-in-the-middle":"3.0.0","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"gitHead":"a0acfb3fe08abbabd4b23335df0baa3d190b7e07","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@4.2.0","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"keymetrics_bot","email":"tech@keymetrics.io"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"}],"dist":{"integrity":"sha512-91j8iIe7TVa70fOV6W4PKE4CYLSWtO2F6iqMQgrzEpB32mb0pOaKR5hCGNMTgmSxwoK/VgfH/LaXBiz+MyPzDA==","shasum":"2b335b7e292b05329175fae8507766d8956762d1","tarball":"https://registry.npmjs.org/@pm2/io/-/io-4.2.0.tgz","fileCount":128,"unpackedSize":656373,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJczCD6CRA9TVsSAnZWagAABYkP/3yOhNsEPcMMIhPh2yQ6\nvA0F6S6HfgIJJlF8NUQknbR+kkVyd/Rwxb/XCoEMMiaKmaWd3vSsNaXJZp6L\n3Fdroj03gvzFfeQ3Jq+O4S15J9Zi9wfG72dkDlePJVpb80nuOmfncXyhumn2\n2Fy+Jdt2+uxUY7pe+XyW6LtcJfqj+l4h/iA0/ot7h2s5PjaxLmmYZgYN9p14\n9r6qqEDZHmrajI4KnqfFJyNS6v8Q4/IWHTPP4qLW0qPLsCuRGacq19uK+Rkm\n9ppJB55S1xvPo4GPiHwGtFSnkXrTZNHtvGBR+YzzSoBPwFpo2VDctW43n+OG\noj4VbmnkD8TmEqIZynDAtlzqD9+Zle/O9NwKiJOPMJmrrX+Ww7LOdoBtmXf4\n8dzGYwienJe+EXnNwV2az8dqtCMHQHXJ259hjH+MZrOk2wv451RMFNe7CWFQ\nnkyqIXvmwb/65BDCtEetBjJnbzHe4c5UVYa/hy3Bc6iEeOx7ynoDc+9i3MHk\nH/iX8rjg/TGjMrVuiWxGmaSEEJUIP+5RJBwtyviaLbIVjBGMf4SiSp4onyCR\nClFghWc2XgfRK4RSrDrAMInHAygMpTY/OHK37WCDLSo8qkWh/t+WGPUvR8Cu\n/Iat5QKZabt1CRd/jph6tNsrZXdzJOhTOM+J7iD7Y8QmAWxQds8O4MfQ9p2i\nRIiu\r\n=12qa\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_4.2.0_1556881657277_0.730779486666516"},"_hasShrinkwrap":false},"4.2.1":{"name":"@pm2/io","version":"4.2.1","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"Apache-2","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=6.0"},"devDependencies":{"@types/chai":"4.1.4","@types/express":"^4.16.1","@types/ioredis":"^4.0.6","@types/mocha":"5.2.5","@types/mongodb":"^3.1.19","@types/node":"^10.12.21","@types/redis":"^2.8.10","chai":"4.1.2","mocha":"^5.2.0","nock":"^10.0.6","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@opencensus/core":"^0.0.9","@opencensus/propagation-b3":"^0.0.8","@pm2/agent-node":"~1.1.8","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","require-in-the-middle":"^4.0.0","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"gitHead":"55b8f1a613931079a0965b5ef95ef50a926a448b","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@4.2.1","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"keymetrics_bot","email":"tech@keymetrics.io"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"}],"dist":{"integrity":"sha512-WoOqkWzXyH7ftpFFVVUT3YPosmvvVLfPMWTHY53HxVWEM8cALX63aAZLXneB4r76nK5bAaV5VEDE6fHpbDuQCw==","shasum":"a7a924450ff2b388f8f14cb46644240f76691185","tarball":"https://registry.npmjs.org/@pm2/io/-/io-4.2.1.tgz","fileCount":128,"unpackedSize":655321,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc5sOECRA9TVsSAnZWagAAnl4P/28X9PH+3SuYricRR0r0\nA98EV+jUDApPYm9YlEzxx4vwsSmG0HtJwm4Qlx+QIepSiO1wePCJ9bOjqeSx\nG2PUowSK4dPDJKVmtyL44Vw9MqdR6IYV6C7WyeG6YsmndvzyvJCx3xz3drf9\nJtB0s+83zlCICFqfbw+ywXzVb7E803pmbtmsnsDM7+D8Yz5qTpA0fRbbgyIv\nBwKWrReGJFOtTe446YFgqK+I/7fjme5Gn2aPa5iTuR88zOtJpcVZx9Ajn+2Y\nns/xX7hyRHAw9fFQI4Xi+hR1elOjPDTFqaJ/KdN1zPCQUehuYWyIY7L7y71l\nECPdPFk+lcesvXSb6vVqrLA6rwESv0erspef5duM3JAkmSOkmFDqJUdr/UTS\nodUzg593u24x3Yhs4qF3IzVadsYqiCuAjuAXNQkDqheR6ahrdEPVMkHHMMDv\nVNO7/o5U4OgQbxsjwAoLPE804qOykn+bIHbxrIhNxay0u5MCexM/TT0hYF9W\nsVlfHBoDn0nWin9ADQ6VAxu1eQsOv8nPTxCdOvxBN/+d7uigUBpGRIVVLTu7\nkD+B5MU1cbaEI7vTYzAEWrZiyb1S6Z4DIY30xhzv07y0D9K+kVKw5jiX6HQl\nQJPqum3aV53tspr4Tb2mr/73CMeuz6ua6D8ZwicMHXHr5WbODARq4uZy0ldH\nvOKw\r\n=vxz0\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_4.2.1_1558627203889_0.10877305248638347"},"_hasShrinkwrap":false},"4.2.2":{"name":"@pm2/io","version":"4.2.2","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"Apache-2","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=6.0"},"devDependencies":{"@types/chai":"4.1.4","@types/express":"^4.16.1","@types/ioredis":"^4.0.6","@types/mocha":"5.2.5","@types/mongodb":"^3.1.19","@types/node":"^10.12.21","@types/redis":"^2.8.10","chai":"4.1.2","mocha":"^5.2.0","nock":"^10.0.6","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@opencensus/core":"^0.0.9","@opencensus/propagation-b3":"^0.0.8","@pm2/agent-node":"~1.1.8","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","require-in-the-middle":"^4.0.0","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"gitHead":"3a97d40c24d87b3885d93387f5348b072eb7427c","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@4.2.2","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"keymetrics_bot","email":"tech@keymetrics.io"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"}],"dist":{"integrity":"sha512-Ewdl0j8M8z7sEwgTdeZk+UFvnc4slvKEF2W3X69hjjm6Nf85o+GvxAaENzun7XW0U7sUwua18OMs0DHB7qfSTw==","shasum":"8e2dab91cf0c44ecad25fc495eda9576f471531f","tarball":"https://registry.npmjs.org/@pm2/io/-/io-4.2.2.tgz","fileCount":128,"unpackedSize":655265,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc8RhQCRA9TVsSAnZWagAAIS4P/AwIF/1mg/SAyuxfDIbv\nEwZpTGPhLogQkhHOs/4PUg30aFRSFbShQHXJwsxQi5aEuh/D64BtIt7nFk5j\n7KZUoPRo/acSLWG/2Bp1U8xSF+gf3B0FVO4SkHlQq0pVNQxZpDhBCcMBgwpH\nTBU1ysA3yE+JtrXIZVHXhemb/HF45ChFBaZsq39gzCjJ8zM8fTs5D33yHSFD\nKTCj1C/yg6tXDueorBk1we1XJ4J0oHTL5/Lb/cKMUAApG3w2AlofHlOenZPo\ncA6Rs40bwded43DMXw+H9fZhm923FHor5n+DgZjjwZ5UeuE/MrsKg23/wbSU\nfJ31uJQVXDN6DOiQSs01v7I2eAHaEx1k9AhPPXzdKkrn2WpR9+7TE26tmq94\nams7MQOKlsez5SFXstBjXVfEmztODUJquyzbSL9b3m7c+96qCQ9EX+VDVUMr\nbyIFCpyKV17kcGP9JQSs+DdFOHs2xrY04e+Rm6nPlSs/w8iZiP99pYfyuL9d\neVcKIKfTMiiAjmqjm0/31+oQqD9+AMIjO4sTrsvVaTMLXQGJGqcILx7PvNBt\nMGLy5ZM7Si9FGJAiFjXgzVMLphYzN91lQj120asjxQUORVHUs/R+gNBYG7S6\nK/u6mtrUhNev3POMITCHck1A/B59HJys2zekHwtLwto4guWBI4L3g4zQtulo\nVziv\r\n=vAtL\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_4.2.2_1559304271665_0.34423311055154215"},"_hasShrinkwrap":false},"4.2.3":{"name":"@pm2/io","version":"4.2.3","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"Apache-2","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=6.0"},"devDependencies":{"@types/chai":"4.1.4","@types/express":"^4.16.1","@types/ioredis":"^4.0.6","@types/mocha":"5.2.5","@types/mongodb":"^3.1.19","@types/node":"^10.12.21","@types/redis":"^2.8.10","chai":"4.1.2","mocha":"^5.2.0","nock":"^10.0.6","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@opencensus/core":"^0.0.9","@opencensus/propagation-b3":"^0.0.8","@pm2/agent-node":"~1.1.8","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","require-in-the-middle":"^4.0.0","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"gitHead":"22e6421a7581d23ee95182a4c0dfd7b8ebec8b8e","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@4.2.3","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"keymetrics_bot","email":"tech@keymetrics.io"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"}],"dist":{"integrity":"sha512-nzxhOqjyMsVwQN8xiHSXs9suke8itaJU5jR0xHpUdiZSEMlxa1F7fcE/S/Y9eHhOXUEgeorQ99FIbEMeJpEpHw==","shasum":"575f36a0c480de537354bb0fce32ad6f46fab1d3","tarball":"https://registry.npmjs.org/@pm2/io/-/io-4.2.3.tgz","fileCount":128,"unpackedSize":656164,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc9n6OCRA9TVsSAnZWagAAZY8P/3lMLAdNkMgIaL9gIzHH\njmC1yHR+r//aPsY7ckdPxkzZt/Nfi7DxNmR5VXt0Gl6PM7EYzgdw5mHOjpi3\nkT9osXbCvIi4r6/z9T4SRsx2QskTlEDJXbkW1KDgh3999vU3+qpq2x3BFv6M\nyLgfEpuPJE11fjCS6nKTHIoaIwHBuotTXT4E5U2LFXbNKSXUo//bJfi9PVG9\nFJR/Qa3RztMdZZtFND83ugb7i4Zqegccy8qbWYv1RL7SsHXp/nP1L+mAY8+v\n2PtvGIFB8iCL+HO7+laiqRBo4NUfvOFu+MrY6nmSsDgNx2wsEHQYRT4+Ibw0\nEKH84ZKzT9wzOdgNMMx0CmpwaL5UqX0kNUromCl1hunz4xdTY/yUqVT1VgS1\nr+KLJ7iQ9e1KitSWSy1dE26+FnCHpmiTVss4DrMcXkRCHQTA1b8v3Hvk9TWP\ng6ae1fu0wc9bhi/JkoahYUPli8+hxUBqb9Hrpsnp/02zzj5ZF3endkjpP+1o\n8kMkP7EaWgc1HrFRewji6q4JkEL8Ev4d3uPOQfFmdxTJbgu8zTItLibx6NAf\nwSQ0EjaPEVAMKG+BsRBNOqtD8U29i3osx4kWzBeiXdkHOJgA1GTz1yNJUo1W\no6gZ25fUNTKJb8trqjgWDHAOB1m/02rStk4gE/sq+K6GwHtzH4SePI3C3NCM\n5rUe\r\n=NEo7\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_4.2.3_1559658125550_0.5505366826665092"},"_hasShrinkwrap":false},"4.2.4":{"name":"@pm2/io","version":"4.2.4","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"Apache-2","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=6.0"},"devDependencies":{"@types/chai":"4.1.4","@types/express":"^4.16.1","@types/ioredis":"^4.0.6","@types/mocha":"5.2.5","@types/mongodb":"^3.1.19","@types/node":"^10.12.21","@types/redis":"^2.8.10","chai":"4.1.2","mocha":"^5.2.0","nock":"^10.0.6","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@opencensus/core":"^0.0.9","@opencensus/propagation-b3":"^0.0.8","@pm2/agent-node":"~1.1.8","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","require-in-the-middle":"^4.0.0","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"gitHead":"7a20dad5d462ffe180bb5b66fab1ef29771b1e24","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@4.2.4","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"keymetrics_bot","email":"tech@keymetrics.io"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"}],"dist":{"integrity":"sha512-ZpAVXfTXTvK3OMwgSMt/9jKP18xI2gCPBt3JGlltBwVIAWmj7nASW28/Z1Th7IOMyF4XK0h6wrXmd8Je01CeNA==","shasum":"ca10b677ea58f50e2b0a7486a0ec1b8163338897","tarball":"https://registry.npmjs.org/@pm2/io/-/io-4.2.4.tgz","fileCount":128,"unpackedSize":656275,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdDO4uCRA9TVsSAnZWagAAMqcQAKKVuGqOggUZw/VCPnOO\nALX1W330yCtfrJq7ND+SUkdDEcoghqjcFabODdOo3jgAFprleociCVRiMWkX\nJQG6suq4dkNr32cYMuYUh5c2B8YuV8mDHb8xPIfcnYuNy3NNHD4KbbVoTopD\n6NmhB8GQvBkvdfpqcsBgeXmHOqiukx/j2VsJn6kOawbOGVH8qCyjS7xVpCgj\nDZ7DavoDnJ3BXoc0Hs+lrohKONs6vil70soreXiWIn1EwoPXvKABa+1iAKg1\n1rUsqISdrKtnpH7mj1pU82eZA6g7xd4iSM+F1A4SztXhO4Savu0rOYiPXd/6\nUok/vCulvibi70qyqguuooIRC2pnKkwbORw2y/AUZUt/GzZDV827RbtRKcXR\nTTK0pouVIG8ugbt+kn3eFCOwjQaPAHv+T3SL5ltX/+B855tq9lyb5rI7rszO\nnokCVULf37WfIlPchE0AebFn4bS40wCbuXbpW2vl6imdmdnldqhCFNqNT5nE\nGcruNe0CeRco3UH0afrw+9X68IXiR9/mb1keN1V57zB+od1SXHgcaHbBouQZ\nOF/qbdjziQA0Hcmm6Ta48fVlXh69tYkS55XJAIoj/NBIDNPR7qi2vEvH49Fv\nZKqXBTgG2AAksULQbkBc71BC1cu73fvT8qLoTEwGbZaNQz2XB/3VtM3m8lUf\n1F4X\r\n=VrA1\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_4.2.4_1561128493441_0.31652488671773393"},"_hasShrinkwrap":false},"4.2.5":{"name":"@pm2/io","version":"4.2.5","description":"PM2.io NodeJS APM","main":"build/main/index.js","typings":"build/main/index.d.ts","types":"build/main/index.d.ts","module":"build/module/index.js","repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"license":"Apache-2","scripts":{"build":"tsc -p tsconfig.json","build:module":"tsc -p config/exports/tsconfig.module.json","lint":"tslint --project . src/**/*.ts","unit":"yarn build && mocha  --exit -r ts-node/register ./test/*.spec.ts ./test/**/*.spec.ts","mono":"mocha  --exit --require ts-node/register","test":"yarn lint && yarn unit","watch":"tsc -w","prepublishOnly":"yarn build"},"scripts-info":{"build":"(Trash and re)build the library","lint":"Lint all typescript source files","unit":"Build the library and run unit tests","test":"Lint, build, and test the library","watch":"Watch source files, rebuild library on changes, rerun relevant tests"},"engines":{"node":">=6.0"},"devDependencies":{"@types/chai":"4.1.4","@types/express":"^4.16.1","@types/ioredis":"^4.0.6","@types/mocha":"5.2.5","@types/mongodb":"^3.1.19","@types/node":"^10.12.21","@types/redis":"^2.8.10","chai":"4.1.2","mocha":"^5.2.0","nock":"^10.0.6","nyc":"^13.1.0","source-map-support":"^0.5.9","ts-node":"^7.0.1","tslint":"^5.11.0","tslint-config-standard":"^8.0.1","typescript":"^3.2.2"},"keywords":[],"nyc":{"extension":[".ts"],"exclude":["build/","config/","examples/","test/"],"cache":true,"all":true},"dependencies":{"@opencensus/core":"^0.0.9","@opencensus/propagation-b3":"^0.0.8","@pm2/agent-node":"^1.1.10","async":"~2.6.1","debug":"3.1.0","event-loop-inspector":"~1.2.0","eventemitter2":"~5.0.1","require-in-the-middle":"^4.0.0","semver":"5.5.0","shimmer":"~1.2.0","signal-exit":"3.0.2","tslib":"1.9.3"},"gitHead":"c3f492b4b68209291df9c4d4e9cf9313fa5801a9","bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"homepage":"https://github.com/keymetrics/pm2-io-apm#readme","_id":"@pm2/io@4.2.5","_npmVersion":"6.4.1","_nodeVersion":"10.14.2","_npmUser":{"name":"keymetrics_bot","email":"tech@keymetrics.io"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"}],"dist":{"integrity":"sha512-Te6gz4zfbAsIwCvZCpHg+wN9BcVd8T8RldS8BMBfTWCOGvTfguEGSlUGX2qthbJbsAPG2E47uVS43mPmZtZjEA==","shasum":"9c019ac5f3e08ee9961dbfef9cfcef71ed241c07","tarball":"https://registry.npmjs.org/@pm2/io/-/io-4.2.5.tgz","fileCount":128,"unpackedSize":656318,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdLx+WCRA9TVsSAnZWagAAN8YQAIrgIEzvCE08Ff3Xalfr\nV71JsN9yEGIAECd6S5GMXFqCH+93A347h94fIlAhfAMZekRUbuGCi68T5Z8q\n7TpOlhb5UbqQia0mC186V8cI5ct70T0PxrNum/Ae2pcZ6ckBYWfAFy9clYri\noIh87gXEuJ0P3RPPUnyKcW+cllvA9esNHHXnhQJqYAn19y/DeTZCiR3V/ez5\nMZnax1p6FSeSahzbAQmipNnppw6fwxcLZj4V/4H3sWzbp1hogRxi9Ml38D1z\nUrCqlLsCtgrsiYxGD4o2DqAM0qU3EbYpxZY3v/C+pbBIg2vq5IseUX3XCWAg\nlzu2uFiSO1SGulOQvUQdi2kHiEdTru1EBuNUh/l46hN2/RfSPJwq+iDImAlX\nRLIcY2EFk9bFgvxKRPDGrXOgTVxp9VA3nmrDlWwP798uPf4sPXYPN7z17zpY\nhdpAcD6WzM9PXJk8ufQjX0vNs+pUgXOEuoF3FFKqa9rABzlqUSLYFrFz1QdU\nepXefmFI2ulDFHUw+KU7XYPFf1BIxUXxUha1e+rOxlunI/qaJ7nwyTMfGDTB\nrMCJfWStRmXUf6FrTZnYZcImvljc+Zs8kDLTLE18pT65Ed+6JZPucEYiELrp\nqDX0MpKZYNxYLrKz6CnIwrRjSwnQIP58YICFBF6ZaroHKiU4VE3LenFgj9J6\nHaGQ\r\n=w4WR\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/io_4.2.5_1563369364170_0.9230069689137343"},"_hasShrinkwrap":false}},"time":{"created":"2018-05-17T12:37:50.533Z","2.0.0-alpha17":"2018-05-17T12:37:50.620Z","modified":"2019-07-17T13:16:08.012Z","2.0.0-alpha18":"2018-05-17T12:46:30.366Z","2.0.0-alpha19":"2018-05-17T13:39:04.404Z","2.0.0-alpha20":"2018-05-21T16:48:14.070Z","2.0.0-alpha21":"2018-05-23T12:18:59.423Z","2.0.0-alpha22":"2018-05-25T08:29:38.199Z","2.0.0-alpha23":"2018-05-30T12:39:41.610Z","2.0.0-alpha24":"2018-05-30T12:54:35.608Z","2.0.0-alpha25":"2018-05-30T15:41:08.022Z","2.0.0-alpha26":"2018-05-31T14:23:33.991Z","2.0.0-alpha27":"2018-06-06T14:58:21.307Z","2.0.0-alpha28":"2018-06-06T15:24:57.788Z","2.0.0-alpha29":"2018-06-06T15:35:07.213Z","2.0.0-alpha30":"2018-06-07T09:03:21.981Z","2.0.0-alpha31":"2018-06-11T16:19:43.867Z","2.0.0-alpha32":"2018-06-18T13:29:45.400Z","2.0.0-alpha33":"2018-06-18T13:35:37.678Z","2.0.0-alpha34":"2018-06-19T13:00:46.716Z","2.0.0":"2018-06-19T14:46:31.976Z","2.0.1":"2018-06-26T08:24:17.554Z","2.0.2":"2018-06-27T10:08:14.444Z","2.0.3":"2018-07-05T15:51:28.452Z","2.1.0-beta":"2018-07-16T13:01:05.406Z","2.1.0-beta2":"2018-07-16T13:18:16.036Z","2.1.0-beta3":"2018-07-18T09:29:13.916Z","2.1.0-beta4":"2018-07-18T15:52:27.781Z","2.1.0-beta5":"2018-07-19T12:01:05.849Z","2.1.0":"2018-07-19T15:00:01.031Z","2.1.1":"2018-07-23T08:49:30.643Z","2.1.2":"2018-07-25T08:44:39.738Z","2.1.3":"2018-07-26T15:59:58.743Z","2.2.0":"2018-08-03T13:22:04.292Z","2.3.0":"2018-08-16T11:12:21.456Z","2.4.0-beta1":"2018-08-26T21:52:23.672Z","2.4.0-beta2":"2018-08-26T23:14:45.871Z","2.3.1":"2018-08-27T15:11:16.640Z","2.3.2":"2018-08-29T09:35:28.638Z","2.3.3":"2018-08-31T13:43:29.656Z","2.3.4":"2018-09-03T15:09:31.010Z","2.3.5":"2018-09-03T15:58:53.678Z","2.3.6":"2018-09-04T10:10:23.747Z","2.3.7":"2018-09-05T13:35:39.293Z","2.3.8":"2018-09-05T15:38:51.992Z","2.3.9":"2018-09-07T09:31:39.112Z","2.3.10":"2018-09-07T10:43:20.851Z","2.3.11":"2018-09-07T12:18:00.944Z","2.3.12":"2018-09-13T08:08:03.464Z","2.4.0":"2018-09-13T08:25:30.253Z","2.4.1":"2018-09-13T13:29:21.880Z","2.5.0-rc1":"2018-09-30T11:27:14.262Z","2.5.0-rc2":"2018-09-30T11:48:54.754Z","2.4.2":"2018-10-01T08:59:54.076Z","2.4.3":"2018-10-01T10:32:39.158Z","2.5.0-rc3":"2018-10-02T12:12:46.161Z","2.4.4":"2018-10-04T14:51:50.770Z","2.4.5":"2018-10-09T13:04:02.796Z","2.4.6":"2018-11-19T15:33:27.563Z","2.4.7":"2018-11-19T16:32:55.552Z","3.0.0-alpha.1":"2018-12-11T15:15:38.750Z","3.0.0-alpha.2":"2018-12-12T10:02:07.168Z","3.0.0-alpha.3":"2018-12-12T12:29:05.781Z","3.0.0-alpha.4":"2018-12-12T15:26:37.373Z","3.0.0-alpha.5":"2018-12-12T16:30:30.607Z","3.0.0-alpha.6":"2018-12-12T17:01:27.241Z","3.0.0-alpha.7":"2018-12-13T17:03:00.848Z","3.0.0-alpha.8":"2018-12-14T11:32:24.018Z","3.0.0-alpha.9":"2018-12-14T13:05:36.725Z","3.0.0-alpha.10":"2018-12-19T10:38:18.044Z","3.0.0":"2019-01-10T10:17:47.020Z","3.1.0":"2019-01-31T13:17:06.092Z","4.0.0-alpha.1":"2019-02-03T16:16:08.542Z","4.0.0-alpha.2":"2019-02-04T11:08:38.467Z","4.0.0-alpha.3":"2019-02-04T13:13:29.614Z","3.1.1":"2019-02-05T17:10:26.431Z","4.0.0-alpha.4":"2019-02-06T09:45:37.332Z","4.0.0-alpha.5":"2019-02-08T16:07:04.173Z","4.0.0-alpha.6":"2019-02-08T16:14:02.890Z","4.0.0-alpha.7":"2019-02-10T16:16:22.576Z","4.0.0-beta.1":"2019-02-10T16:19:14.819Z","4.0.0-beta.2":"2019-02-10T18:20:16.535Z","4.0.0-beta.3":"2019-02-14T13:36:58.438Z","4.0.0-beta.4":"2019-02-18T13:11:25.810Z","4.0.0-beta.5":"2019-02-25T15:43:15.795Z","4.0.0":"2019-02-27T13:25:51.869Z","4.1.0":"2019-03-05T13:45:57.067Z","4.1.1":"2019-03-06T10:18:59.948Z","4.1.2":"2019-03-08T14:49:24.558Z","4.1.3":"2019-03-20T17:04:36.534Z","4.1.4":"2019-04-09T11:22:17.817Z","4.2.0-alpha.1":"2019-04-11T14:19:09.423Z","4.2.0":"2019-05-03T11:07:37.486Z","4.2.1":"2019-05-23T16:00:04.140Z","4.2.2":"2019-05-31T12:04:31.786Z","4.2.3":"2019-06-04T14:22:05.777Z","4.2.4":"2019-06-21T14:48:13.737Z","4.2.5":"2019-07-17T13:16:04.495Z"},"maintainers":[{"email":"contact@eywek.fr","name":"eywek"},{"email":"tech@keymetrics.io","name":"keymetrics_bot"},{"email":"strzelewicz.alexandre@gmail.com","name":"tknew"}],"description":"PM2.io NodeJS APM","homepage":"https://github.com/keymetrics/pm2-io-apm#readme","keywords":[],"repository":{"type":"git","url":"git+https://github.com/keymetrics/pm2-io-apm.git"},"bugs":{"url":"https://github.com/keymetrics/pm2-io-apm/issues"},"license":"Apache-2","readme":"<div align=\"center\">\n  <a href=\"http://pm2.keymetrics.io\">\n    <img width=411px src=\"https://raw.githubusercontent.com/keymetrics/pm2-io-apm/master/pres/io-white.png\">\n  </a>\n  <br/>\n  <br/>\n  <a href=\"https://github.com/keymetrics/pm2-io-apm\">\n    <img src=\"https://ci.keymetrics.io/api/badges/keymetrics/pm2-io-apm/status.svg?branch=master\"/>\n  </a>\n<br/>\n<br/>\n</div>\n\nThe [@pm2/io](https://github.com/keymetrics/pm2-io-apm/tree/master/test) module comes along with PM2. It is the PM2 library responsible for gathering the metrics, reporting exceptions, exposing remote actions and every interaction with your application.\n\nYou can also use it as a standalone agent, if you want to connect your nodejs process to PM2 Enterprise but without having to launch your application with PM2.\n\n# Table of Contents\n\n- [**Installation**](https://github.com/keymetrics/pm2-io-apm/tree/master#installation)\n- [**Expose Custom Metrics**](https://github.com/keymetrics/pm2-io-apm/tree/master#expose-custom-metrics)\n- [**Expose Remote Actions**](https://github.com/keymetrics/pm2-io-apm#expose-remote-actions-trigger-functions-remotely)\n- [**Report Custom Errors**](https://github.com/keymetrics/pm2-io-apm#report-user-error)\n- [**Distributed Tracing**](https://github.com/keymetrics/pm2-io-apm#distributed-tracing)\n- [**Configuration**](https://github.com/keymetrics/pm2-io-apm/tree/master#configuration)\n- [**Migration Guide**](https://github.com/keymetrics/pm2-io-apm#migration-guides)\n- [**Development**](https://github.com/keymetrics/pm2-io-apm/tree/master#development)\n- [**Notes**](https://github.com/keymetrics/pm2-io-apm/tree/master#notes)\n\n\n# Installation\n\nWith npm:\n\n```bash\nnpm install @pm2/io --save\n```\n\nWith yarn:\n\n```bash\nyarn add @pm2/io\n```\n\n## Expose Custom Metrics\n\n@pm2/io allows you to gather metrics from your code to be reported in the PM2 Plus/Enterprise dashboard.\n\n### Optional addon to add more metrics\n\nIf you want to add more metrics about the NodeJS runtime, you can install `@pm2/node-runtime-stats` in your application dependency, this module will add the following metrics:\n- More accurate Event Loop Metrics (directly pluged to libuv)\n- GC Pause (Old object pool), both median and percentile 95\n- GC Pause (Young object pool), both median and percentile 95\n- CPU Context Switch, both volontary and involontary (see [this stackexchanges post](https://unix.stackexchange.com/questions/442969/what-exactly-are-voluntary-context-switches))\n- Page Fault, both minor and major (see [this wikipedia article](https://en.wikipedia.org/wiki/Page_fault#Types) )\n\n### Create a custom metrics\n\nYou can create a new custom metrics with the method `metric()` of `@pm2/io`.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst users = io.metric({\n  name: 'Realtime user',\n});\nusers.set(10)\n```\n\nThis arguments are available:\n\n- **name**: The metric name (required; string)\n- **id**: The type of metric (default 'metric', string)\n- **unit**: unit of the measure (default ''; string)\n- **historic**: keep the history in PM2 Plus (default: true; boolean)\n\nThere are 4 different types of metrics:\n\n- **gauge**: To expose a variable's value\n- **counter**: A discrete counter to be triggered manually to count a number of occurrence\n- **meter**: To measure a frequency, a number of occurrences of a repeating event per unit of time\n- **histogram**: To measure a statistic, a statistic on a metric over the last 5 minutes\n\n### Metric: Variable Exposition\n\nThe first type of metric, called `metric`, allows to expose a variable's value. The variable can be exposed passively, with a function that gets called every second, or actively, with a method that you use to update the value.\n\n#### Active Mode\n\nIn active mode, you need to create a probe and call the method `set()` to update the value.\n\n```javascript\nconst myMetric = io.metric({\n  name: 'Realtime Value'\n});\n\nmyMetric.set(23);\n```\n\n### Counter: Discrete Counter\n\nThe second type of metric, called `counter`, is a discrete counter that helps you count the number of occurrence of a particular event. The counter starts at 0 and can be incremented or decremented.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst currentReq = io.counter({\n  name: 'Current req processed',\n  type: 'counter',\n});\n\nhttp.createServer((req, res) => {\n  // Increment the counter, counter will eq 1\n  currentReq.inc();\n  req.on('end', () => {\n    // Decrement the counter, counter will eq 0\n    currentReq.dec();\n  });\n});\n```\n\n### Meter: Frequency\n\nThe third type of metric, called `meter`, compute the frequency of an event. Each time the event happens, you need to call the `mark()` method. By default, the frequency is the number of events per second over the last minute.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst reqsec = io.meter({\n  name: 'req/sec',\n  type: 'meter',\n});\n\nhttp.createServer((req, res) => {\n  reqsec.mark();\n  res.end({ success: true });\n});\n```\n\nAdditional options:\n- **samples**: (optional)(default: 1) Rate unit. Defaults to **1** sec.\n- **timeframe**: (optional)(default: 60) Timeframe over which the events will be analyzed. Defaults to **60** sec.\n\n### Histogram: Statistics\n\nCollect values and provide statistic tools to explore their distribution over the last 5 minutes.\n\n```javascript\nconst io = require('@pm2/io');\n\nconst latency = io.histogram({\n  name: 'latency',\n  measurement: 'mean'\n});\n\nconst latencyValue = 0;\n\nsetInterval(() => {\n  latencyValue = Math.round(Math.random() * 100);\n  latency.update(latencyValue);\n}, 100);\n```\n\nOptions are:\n- **measurement** : default: mean; min, max, sum, count, variance, mean, stddev, median, p75, p95, p99, p99.\n\n## Expose Remote Actions: Trigger Functions remotely\n\nRemotely trigger functions from PM2 Plus or Enterprise.\n\n### Simple actions\n\nThe function takes a function as a parameter (cb here) and need to be called once the job is finished.\n\nExample:\n\n```javascript\nconst io = require('@pm2/io');\n\nio.action('db:clean', (cb) => {\n  clean.db(() => {\n    // cb must be called at the end of the action\n    return cb({ success: true });\n  });\n});\n```\n\n## Report user error\n\nBy default, in the Issue tab, you are only alerted for uncaught exceptions. Any exception that you catch is not reported. You can manually report them with the `notifyError()` method.\n\n```javascript\nconst io = require('@pm2/io');\n\nio.notifyError(new Error('This is an error'), {\n  // you can some http context that will be reported in the UI\n  http: {\n    url: req.url\n  },\n  // or anything that you can like an user id\n  custom: {\n    user: req.user.id\n  }\n});\n```\n\n#### Express error reporting\n\nIf you want you can configure your express middleware to automatically send you an error with the error middleware of express :\n\n```javascript\nconst io = require('@pm2/io')\nconst express = require('express')\nconst app = express()\n\n// add the routes that you want\napp.use('/toto', () => {\n  throw new Error('ajdoijerr')\n})\n\n// always add the middleware as the last one\napp.use(io.expressErrorHandler())\n```\n\n#### Koa error reporting\n\nWe also expose a custom koa middleware to report error with a specific koa middleware :\n\n```javascript\nconst io = require('@pm2/io')\nconst Koa = require('koa')\nconst app = new Koa()\n\n// the order isn't important with koa\napp.use(pmx.koaErrorHandler())\n\n// add the routes that you want\napp.use(async ctx => {\n  ctx.throw(new Error('toto'))\n})\n```\n\n## Distributed Tracing\n\nThe Distributed Tracing allows to captures and propagates distributed traces through your system, allowing you to visualize how customer requests flow across services, rapidly perform deep root cause analysis, and better analyze latency across a highly distributed set of services.\nIf you want to enable it, here the simple options to enable:\n\n\n```javascript\nconst io = require('@pm2/io').init({\n  tracing: {\n    enabled: true,\n    // will add the actual queries made to database, false by default\n    detailedDatabasesCalls: true,\n    // if you want you can ignore some endpoint based on their path\n    ignoreIncomingPaths: [\n      // can be a regex\n      /misc/,\n      // or a exact string\n      '/api/bucket'\n      // or a function with the request\n      (url, request) => {\n        return true\n      }\n    ],\n    // same as above but used to match entire URLs\n    ignoreOutgoingUrls: [],\n    /**\n     * Determines the probability of a request to be traced. Ranges from 0.0 to 1.0\n     * default is 0.5\n     */\n    samplingRate: 0.5\n  }\n})\n```\n\nBy default we ignore specific incoming requests (you can override this by setting `ignoreIncomingPaths: []`):\n- Request with the OPTIONS or HEAD method\n- Request fetching a static ressources (`*.js`, `*.css`, `*.ico`, `*.svg`, `.png` or `*webpack*`)\n\n### What's get traced\n\nWhen your application will receive a request from either `http`, `https` or `http2` it will start a trace. After that, we will trace the following modules:\n - `http` outgoing requests\n - `https` outgoing requests\n - `http2` outgoing requests\n - `mongodb-core` version 1 - 3\n - `redis` versions > 2.6\n - `ioredis` versions > 2.6\n - `mysql` version 1 - 3\n - `mysql2` version 1 - 3\n - `pg` version > 6\n - `vue-server-renderer` version 2\n\n ### Custom Tracing API\n\nThe custom tracing API can be used to create custom trace spans. A span is a particular unit of work within a trace, such as an RPC request. Spans may be nested; the outermost span is called a root span, even if there are no nested child spans. Root spans typically correspond to incoming requests, while child spans typically correspond to outgoing requests, or other work that is triggered in response to incoming requests. This means that root spans shouldn't be created in a context where a root span already exists; a child span is more suitable here. Instead, root spans should be created to track work that happens outside of the request lifecycle entirely, such as periodically scheduled work. To illustrate:\n\n```js\nconst io = require('@pm2/io').init({ tracing: true })\nconst tracer = io.getTracer()\n// ...\n\napp.get('/:token', function (req, res) {\n  const token = req.params.token\n  // the '2' correspond to the type of operation you want to trace\n  // can be 0 (UNKNOWN), 1 (SERVER) or 2 (CLIENT)\n  // 'verifyToken' here will be the name of the operation\n  const customSpan = tracer.startChildSpan('verifyToken', 2)\n  // note that customSpan can be null if you are not inside a request\n  req.Token.verifyToken(token, (err, result) => {\n    if (err) {\n      // you can add tags to the span to attach more details to the span\n      customSpan.addAttribute('error', err.message)\n      customSpan.end()\n      return res.status(500).send('error')\n    }\n    customSpan.addAttribute('result', result)\n    // be sure to always .end() the spans\n    customSpan.end()\n    // redirect the user if the token is valid\n    res.send('/user/me')\n  })\n})\n\n// For any significant work done _outside_ of the request lifecycle, use\n// startRootSpan.\nconst traceOptions = {\n    name: 'my custom trace',\n    // the '1' correspond to the type of operation you want to trace\n    // can be 0 (UNKNOWN), 1 (SERVER) or 2 (CLIENT)\n    kind: '1'\n  }\nplugin.tracer.startRootSpan(traceOptions, rootSpan => {\n  // ...\n  // Be sure to call rootSpan.end().\n  rootSpan.end()\n});\n```\n\n## Configuration\n\n### Global configuration object\n\n```javascript\nexport class IOConfig {\n  /**\n   * Automatically catch unhandled errors\n   */\n  catchExceptions?: boolean = true\n  /**\n   * Configure the metrics to add automatically to your process\n   */\n  metrics?: {\n    eventLoop: boolean = true,\n    network: boolean = false,\n    http: boolean = true,\n    gc: boolean = true,\n    v8: boolean = true\n  }\n  /**\n   * Configure the default actions that you can run\n   */\n  actions?: {\n    eventLoopDump?: boolean = true\n  }\n  /**\n   * Configure availables profilers that will be exposed\n   */\n  profiling?: {\n    /**\n     * Toggle the CPU profiling actions\n     */\n    cpuJS: boolean = true\n    /**\n     * Toggle the heap snapshot actions\n     */\n    heapSnapshot: boolean = true\n    /**\n     * Toggle the heap sampling actions\n     */\n    heapSampling: boolean = true\n    /**\n     * Force a specific implementation of profiler\n     * \n     * available: \n     *  - 'addon' (using the v8-profiler-node8 addon)\n     *  - 'inspector' (using the \"inspector\" api from node core)\n     *  - 'none' (disable the profilers)\n     *  - 'both' (will try to use inspector and fallback on addon if available)\n     */\n    implementation: string = 'both'\n  }\n  /**\n   * Configure the transaction tracing options\n   */\n  tracing?: {\n    /**\n     * Enabled the distributed tracing feature.\n     */\n    enabled: boolean\n    /**\n     * If you want to report a specific service name\n     * the default is the same as in apmOptions\n     */\n    serviceName?: string\n    /**\n     * Generate trace for outgoing request that aren't connected to a incoming one\n     * default is false\n     */\n    outbound?: boolean\n    /**\n     * Determines the probability of a request to be traced. Ranges from 0.0 to 1.0\n     * default is 0.5\n     */\n    samplingRate?: number,\n    /**\n     * Add details about databases calls (redis, mongodb etc)\n     */\n    detailedDatabasesCalls?: boolean,\n    /**\n     * Ignore specific incoming request depending on their path\n     */\n    ignoreIncomingPaths?: Array<IgnoreMatcher<httpModule.IncomingMessage>>\n    /**\n     * Ignore specific outgoing request depending on their url\n     */\n    ignoreOutgoingUrls?: Array<IgnoreMatcher<httpModule.ClientRequest>>\n    /**\n     * Set to true when wanting to create span for raw TCP connection\n     * instead of new http request\n     */\n    createSpanWithNet: boolean\n  }\n  /**\n   * If you want to connect to PM2 Enterprise without using PM2, you should enable\n   * the standalone mode\n   * \n   * default is false\n   */\n  standalone?: boolean = false\n  /**\n   * Define custom options for the standalone mode\n   */\n  apmOptions?: {\n    /**\n     * public key of the bucket to which the agent need to connect\n     */\n    publicKey: string\n    /**\n     * Secret key of the bucket to which the agent need to connect\n     */\n    secretKey: string\n    /**\n     * The name of the application/service that will be reported to PM2 Enterprise\n     */\n    appName: string\n    /**\n     * The name of the server as reported in PM2 Enterprise\n     *\n     * default is os.hostname()\n     */\n    serverName?: string\n    /**\n     * Broadcast all the logs from your application to our backend\n     */\n    sendLogs?: Boolean\n    /**\n     * Avoid to broadcast any logs from your application to our backend\n     * Even if the sendLogs option set to false, you can still see some logs\n     * when going to the log interface (it automatically trigger broacasting log)\n     */\n    disableLogs?: Boolean\n    /**\n     * Since logs can be forwared to our backend you may want to ignore specific\n     * logs (containing sensitive data for example)\n     */\n    logFilter?: string | RegExp\n    /**\n     * Proxy URI to use when reaching internet\n     * Supporting socks5,http,https,pac,socks4\n     * see https://github.com/TooTallNate/node-proxy-agent\n     *\n     * example: socks5://username:password@some-socks-proxy.com:9050\n     */\n    proxy?: string\n  }\n}\n```\n\nYou can pass whatever options you want to `io.init`, it will automatically update its configuration.\n\n## Migration Guides\n\n### 2.x to 3.x\n\nHere the list of breaking changes :\n\n- Removed `io.scopedAction` because of low user adoption\n- Removed `io.notify` in favor of `io.notifyError` (droppin replacement)\n- Removed support for `gc-stats` module\n- Removed Heap profiling support when using the profiler addon (which wasn't possible at all)\n- Removed deep-metrics support (the module that allowed to get metrics about websocket/mongo out of the box), we are working on a better solution.\n- Removed `io.transpose`\n- Removed `io.probe()` to init metrics\n- **Changed the configuration structure**\n\nHigh chance that if you used a custom configuration for `io.init`, you need to change it to reflect the new configuration.\nApart from that and the `io.notify` removal, it shouldn't break the way you instanciated metrics.\nIf you find something else that breaks please report it to us (tech@keymetrics.io).\n\n### 3.x to 4.x\n\nThe only difference with the 4.x version is the new tracing system put in place, so the only changs are related to it:\n\n- **Dropped the support for node 4** (you can still use the 3.x if you use node 4 but you will not have access to the distributed tracing)\n- **Changed the tracing configuration** (see options above)\n\n## Development\n\nTo auto rebuild on file change:\n\n```bash\n$ npm install\n$ npm run watch\n```\n\nTo test only one file:\n\n```bash\n$ npm run unit <typescript-file-to-test.ts>\n```\n\nRun transpilation + test + coverage:\n\n```bash\n$ npm run test\n```\n\nRun transpilation + test only:\n\n```bash\n$ npm run unit <test>\n```\n\n## Notes\n\nCurently this package isn't compatible with `amqp` if you use the `network` metrics. We recommend to disable the metrics with the following configuration in this case :\n\n```javascript\nio.init({\n  metrics: {\n    network: false\n  }\n})\n```\n","readmeFilename":"README.md","author":{"name":"PM2.io tech team","email":"tech@pm2.io","url":"https://pm2.io"},"contributors":[{"name":"Vincent Vallet","url":"https://github.com/wallet77"}],"_etag":"W/\"2908ea299449a0fcd679a72279d5142d\"","_lastModified":"Wed, 17 Jul 2019 13:16:09 GMT"}